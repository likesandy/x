{"version":3,"sources":["components/use-x-chat/demo/suggestions.tsx?techStack=react","components/x-request/demo/requestParams.tsx?techStack=react","docs/playground/copilot.tsx?techStack=react","components/use-x-agent/demo/custom.tsx?techStack=react","docs/playground/agent-tbox.tsx?techStack=react","components/use-x-chat/demo/stream.tsx?techStack=react","components/x-request/demo/request-options.tsx?techStack=react","components/x-request/demo/basic.tsx?techStack=react","components/use-x-chat/demo/model.tsx?techStack=react","components/use-x-agent/demo/model.tsx?techStack=react","components/use-x-chat/demo/basic.tsx?techStack=react","components/x-request/demo/custom-transformer.tsx?techStack=react","components/x-stream/demo/custom-protocol.tsx?techStack=react","docs/playground/independent.tsx?techStack=react","components/x-stream/demo/default-protocol.tsx?techStack=react","components/use-x-agent/demo/preset.tsx?techStack=react","components/use-x-agent/demo/requestParams.tsx?techStack=react","components/use-x-agent/demo/request-options.tsx?techStack=react","components/x-request/demo/model.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/x/x/components/use-x-chat/demo/suggestions.tsx?watch=parent';import { SmileOutlined, UserOutlined } from '@ant-design/icons';\nimport { Bubble, Prompts, Sender, useXAgent, useXChat } from '@ant-design/x';\nimport { Flex, type GetProp } from 'antd';\nimport React from 'react';\n\nconst sleep = () => new Promise((resolve) => setTimeout(resolve, 1000));\n\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\n  user: {\n    placement: 'end',\n    avatar: { icon: <UserOutlined />, style: { background: '#87d068' } },\n  },\n  text: {\n    placement: 'start',\n    avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\n  },\n  suggestion: {\n    placement: 'start',\n    avatar: { icon: <UserOutlined />, style: { visibility: 'hidden' } },\n    variant: 'borderless',\n    messageRender: (content) => (\n      <Prompts\n        vertical\n        items={(content as any as string[]).map((text) => ({\n          key: text,\n          icon: <SmileOutlined style={{ color: '#FAAD14' }} />,\n          description: text,\n        }))}\n      />\n    ),\n  },\n};\n\ntype AgentUserMessage = {\n  type: 'user';\n  content: string;\n};\n\ntype AgentAIMessage = {\n  type: 'ai';\n  content?: string;\n  list?: (\n    | {\n        type: 'text';\n        content: string;\n      }\n    | {\n        type: 'suggestion';\n        content: string[];\n      }\n  )[];\n};\n\ntype AgentMessage = AgentUserMessage | AgentAIMessage;\n\nconst App = () => {\n  const [content, setContent] = React.useState('');\n\n  // Agent for request\n  const [agent] = useXAgent<AgentMessage, { message: AgentMessage }, Record<string, any>>({\n    request: async ({ message }, { onSuccess }) => {\n      await sleep();\n      const { content } = message || {};\n      onSuccess([\n        {\n          type: 'ai',\n          list: [\n            {\n              type: 'text',\n              content: `Do you want?`,\n            },\n            {\n              type: 'suggestion',\n              content: [`Look at: ${content}`, `Search: ${content}`, `Try: ${content}`],\n            },\n          ],\n        },\n      ]);\n    },\n  });\n\n  // Chat messages\n  const { onRequest, parsedMessages } = useXChat({\n    agent,\n    defaultMessages: [\n      {\n        id: 'init',\n        message: {\n          type: 'ai',\n          content: 'Hello, what can I do for you?',\n        },\n        status: 'success',\n      },\n    ],\n\n    requestPlaceholder: {\n      type: 'ai',\n      content: 'Waiting...',\n    },\n\n    // Convert AgentMessage to BubbleMessage\n    parser: (agentMessages) => {\n      const list = agentMessages.content ? [agentMessages] : (agentMessages as AgentAIMessage).list;\n      return (list || []).map((msg) => ({\n        role: msg.type,\n        content: msg.content,\n      }));\n    },\n  });\n\n  return (\n    <Flex vertical gap=\"middle\">\n      <Bubble.List\n        roles={roles}\n        style={{ maxHeight: 300 }}\n        items={parsedMessages.map(({ id, message, status }) => ({\n          key: id,\n          loading: status === 'loading',\n          ...message,\n        }))}\n      />\n      <Sender\n        loading={agent.isRequesting()}\n        value={content}\n        onChange={setContent}\n        onSubmit={(nextContent) => {\n          onRequest({\n            type: 'user',\n            content: nextContent,\n          });\n          setContent('');\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/x-request/demo/requestParams.tsx?watch=parent';import { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, XRequest } from '@ant-design/x';\nimport { Button, Descriptions, Splitter } from 'antd';\nimport React from 'react';\n\nimport type { ThoughtChainItem } from '@ant-design/x';\n\nconst BASE_URL = 'https://api.example.com/agent';\n\nconst exampleRequest = XRequest({\n  baseURL: BASE_URL,\n});\n\ninterface RequestParams {\n  agentId: number;\n  query: string;\n}\n\nconst App = () => {\n  const [status, setStatus] = React.useState<ThoughtChainItem['status']>();\n  const [lines, setLines] = React.useState<Record<string, string>[]>([]);\n\n  async function request() {\n    setStatus('pending');\n\n    await exampleRequest.create<RequestParams>(\n      {\n        query: 'Search for the latest technology news',\n        agentId: 111,\n      },\n      {\n        onSuccess: (messages) => {\n          setStatus('success');\n          console.log('onSuccess', messages);\n        },\n        onError: (error) => {\n          setStatus('error');\n          console.error('onError', error);\n        },\n        onUpdate: (msg) => {\n          setLines((pre) => [...pre, msg]);\n          console.log('onUpdate', msg);\n        },\n      },\n    );\n  }\n\n  return (\n    <Splitter>\n      <Splitter.Panel>\n        <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n          Request - {BASE_URL}\n        </Button>\n      </Splitter.Panel>\n      <Splitter.Panel style={{ marginLeft: 16 }}>\n        <ThoughtChain\n          items={[\n            {\n              title: 'Request Log',\n              status: status,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description:\n                status === 'error' &&\n                exampleRequest.baseURL === BASE_URL &&\n                'Please replace the BASE_URL, RequestParams with your own values.',\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/docs/playground/copilot.tsx?watch=parent';import {\n  AppstoreAddOutlined,\n  CloseOutlined,\n  CloudUploadOutlined,\n  CommentOutlined,\n  CopyOutlined,\n  DislikeOutlined,\n  LikeOutlined,\n  OpenAIFilled,\n  PaperClipOutlined,\n  PlusOutlined,\n  ProductOutlined,\n  ReloadOutlined,\n  ScheduleOutlined,\n} from '@ant-design/icons';\nimport {\n  Attachments,\n  type AttachmentsProps,\n  Bubble,\n  Conversations,\n  Prompts,\n  Sender,\n  Suggestion,\n  Welcome,\n  useXAgent,\n  useXChat,\n} from '@ant-design/x';\nimport type { Conversation } from '@ant-design/x/es/conversations';\nimport { Button, GetProp, GetRef, Image, Popover, Space, Spin, message } from 'antd';\nimport { createStyles } from 'antd-style';\nimport dayjs from 'dayjs';\nimport React, { useEffect, useRef, useState } from 'react';\n\ntype BubbleDataType = {\n  role: string;\n  content: string;\n};\n\nconst MOCK_SESSION_LIST = [\n  {\n    key: '5',\n    label: 'New session',\n    group: 'Today',\n  },\n  {\n    key: '4',\n    label: 'What has Ant Design X upgraded?',\n    group: 'Today',\n  },\n  {\n    key: '3',\n    label: 'New AGI Hybrid Interface',\n    group: 'Today',\n  },\n  {\n    key: '2',\n    label: 'How to quickly install and import components?',\n    group: 'Yesterday',\n  },\n  {\n    key: '1',\n    label: 'What is Ant Design X?',\n    group: 'Yesterday',\n  },\n];\nconst MOCK_SUGGESTIONS = [\n  { label: 'Write a report', value: 'report' },\n  { label: 'Draw a picture', value: 'draw' },\n  {\n    label: 'Check some knowledge',\n    value: 'knowledge',\n    icon: <OpenAIFilled />,\n    children: [\n      { label: 'About React', value: 'react' },\n      { label: 'About Ant Design', value: 'antd' },\n    ],\n  },\n];\nconst MOCK_QUESTIONS = [\n  'What has Ant Design X upgraded?',\n  'What components are in Ant Design X?',\n  'How to quickly install and import components?',\n];\nconst AGENT_PLACEHOLDER = 'Generating content, please wait...';\n\nconst useCopilotStyle = createStyles(({ token, css }) => {\n  return {\n    copilotChat: css`\n      display: flex;\n      flex-direction: column;\n      background: ${token.colorBgContainer};\n      color: ${token.colorText};\n    `,\n    // chatHeader 样式\n    chatHeader: css`\n      height: 52px;\n      box-sizing: border-box;\n      border-bottom: 1px solid ${token.colorBorder};\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0 10px 0 16px;\n    `,\n    headerTitle: css`\n      font-weight: 600;\n      font-size: 15px;\n    `,\n    headerButton: css`\n      font-size: 18px;\n    `,\n    conversations: css`\n      width: 300px;\n      .ant-conversations-list {\n        padding-inline-start: 0;\n      }\n    `,\n    // chatList 样式\n    chatList: css`\n      overflow: auto;\n      padding-block: 16px;\n      flex: 1;\n    `,\n    chatWelcome: css`\n      margin-inline: 16px;\n      padding: 12px 16px;\n      border-radius: 2px 12px 12px 12px;\n      background: ${token.colorBgTextHover};\n      margin-bottom: 16px;\n    `,\n    loadingMessage: css`\n      background-image: linear-gradient(90deg, #ff6b23 0%, #af3cb8 31%, #53b6ff 89%);\n      background-size: 100% 2px;\n      background-repeat: no-repeat;\n      background-position: bottom;\n    `,\n    // chatSend 样式\n    chatSend: css`\n      padding: 12px;\n    `,\n    sendAction: css`\n      display: flex;\n      align-items: center;\n      margin-bottom: 12px;\n      gap: 8px;\n    `,\n    speechButton: css`\n      font-size: 18px;\n      color: ${token.colorText} !important;\n    `,\n  };\n});\n\ninterface CopilotProps {\n  copilotOpen: boolean;\n  setCopilotOpen: (open: boolean) => void;\n}\n\nconst Copilot = (props: CopilotProps) => {\n  const { copilotOpen, setCopilotOpen } = props;\n  const { styles } = useCopilotStyle();\n  const attachmentsRef = useRef<GetRef<typeof Attachments>>(null);\n  const abortController = useRef<AbortController>(null);\n\n  // ==================== State ====================\n\n  const [messageHistory, setMessageHistory] = useState<Record<string, any>>({});\n\n  const [sessionList, setSessionList] = useState<Conversation[]>(MOCK_SESSION_LIST);\n  const [curSession, setCurSession] = useState(sessionList[0].key);\n\n  const [attachmentsOpen, setAttachmentsOpen] = useState(false);\n  const [files, setFiles] = useState<GetProp<AttachmentsProps, 'items'>>([]);\n\n  const [inputValue, setInputValue] = useState('');\n\n  /**\n   * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n   */\n\n  // ==================== Runtime ====================\n\n  const [agent] = useXAgent<BubbleDataType>({\n    baseURL: 'https://api.x.ant.design/api/llm_siliconflow_deepSeek-r1-distill-1wen-7b',\n    model: 'DeepSeek-R1-Distill-Qwen-7B',\n    dangerouslyApiKey: 'Bearer sk-xxxxxxxxxxxxxxxxxxxx',\n  });\n\n  const loading = agent.isRequesting();\n\n  const { messages, onRequest, setMessages } = useXChat({\n    agent,\n    requestFallback: (_, { error }) => {\n      if (error.name === 'AbortError') {\n        return {\n          content: 'Request is aborted',\n          role: 'assistant',\n        };\n      }\n      return {\n        content: 'Request failed, please try again!',\n        role: 'assistant',\n      };\n    },\n    transformMessage: (info) => {\n      const { originMessage, chunk } = info || {};\n      let currentContent = '';\n      let currentThink = '';\n      try {\n        if (chunk?.data && !chunk?.data.includes('DONE')) {\n          const message = JSON.parse(chunk?.data);\n          currentThink = message?.choices?.[0]?.delta?.reasoning_content || '';\n          currentContent = message?.choices?.[0]?.delta?.content || '';\n        }\n      } catch (error) {\n        console.error(error);\n      }\n\n      let content = '';\n\n      if (!originMessage?.content && currentThink) {\n        content = `<think>${currentThink}`;\n      } else if (\n        originMessage?.content?.includes('<think>') &&\n        !originMessage?.content.includes('</think>') &&\n        currentContent\n      ) {\n        content = `${originMessage?.content}</think>${currentContent}`;\n      } else {\n        content = `${originMessage?.content || ''}${currentThink}${currentContent}`;\n      }\n\n      return {\n        content: content,\n        role: 'assistant',\n      };\n    },\n    resolveAbortController: (controller) => {\n      abortController.current = controller;\n    },\n  });\n\n  // ==================== Event ====================\n  const handleUserSubmit = (val: string) => {\n    onRequest({\n      stream: true,\n      message: { content: val, role: 'user' },\n    });\n\n    // session title mock\n    if (sessionList.find((i) => i.key === curSession)?.label === 'New session') {\n      setSessionList(\n        sessionList.map((i) => (i.key !== curSession ? i : { ...i, label: val?.slice(0, 20) })),\n      );\n    }\n  };\n\n  const onPasteFile = (_: File, files: FileList) => {\n    for (const file of files) {\n      attachmentsRef.current?.upload(file);\n    }\n    setAttachmentsOpen(true);\n  };\n\n  // ==================== Nodes ====================\n  const chatHeader = (\n    <div className={styles.chatHeader}>\n      <div className={styles.headerTitle}>✨ AI Copilot</div>\n      <Space size={0}>\n        <Button\n          type=\"text\"\n          icon={<PlusOutlined />}\n          onClick={() => {\n            if (agent.isRequesting()) {\n              message.error(\n                'Message is Requesting, you can create a new conversation after request done or abort it right now...',\n              );\n              return;\n            }\n\n            if (messages?.length) {\n              const timeNow = dayjs().valueOf().toString();\n              abortController.current?.abort();\n              // The abort execution will trigger an asynchronous requestFallback, which may lead to timing issues.\n              // In future versions, the sessionId capability will be added to resolve this problem.\n              setTimeout(() => {\n                setSessionList([\n                  { key: timeNow, label: 'New session', group: 'Today' },\n                  ...sessionList,\n                ]);\n                setCurSession(timeNow);\n                setMessages([]);\n              }, 100);\n            } else {\n              message.error('It is now a new conversation.');\n            }\n          }}\n          className={styles.headerButton}\n        />\n        <Popover\n          placement=\"bottom\"\n          styles={{ body: { padding: 0, maxHeight: 600 } }}\n          content={\n            <Conversations\n              items={sessionList?.map((i) =>\n                i.key === curSession ? { ...i, label: `[current] ${i.label}` } : i,\n              )}\n              activeKey={curSession}\n              groupable\n              onActiveChange={async (val) => {\n                abortController.current?.abort();\n                // The abort execution will trigger an asynchronous requestFallback, which may lead to timing issues.\n                // In future versions, the sessionId capability will be added to resolve this problem.\n                setTimeout(() => {\n                  setCurSession(val);\n                  setMessages(messageHistory?.[val] || []);\n                }, 100);\n              }}\n              styles={{ item: { padding: '0 8px' } }}\n              className={styles.conversations}\n            />\n          }\n        >\n          <Button type=\"text\" icon={<CommentOutlined />} className={styles.headerButton} />\n        </Popover>\n        <Button\n          type=\"text\"\n          icon={<CloseOutlined />}\n          onClick={() => setCopilotOpen(false)}\n          className={styles.headerButton}\n        />\n      </Space>\n    </div>\n  );\n  const chatList = (\n    <div className={styles.chatList}>\n      {messages?.length ? (\n        /** 消息列表 */\n        <Bubble.List\n          style={{ height: '100%', paddingInline: 16 }}\n          items={messages?.map((i) => ({\n            ...i.message,\n            classNames: {\n              content: i.status === 'loading' ? styles.loadingMessage : '',\n            },\n            typing: i.status === 'loading' ? { step: 5, interval: 20, suffix: <>💗</> } : false,\n          }))}\n          roles={{\n            assistant: {\n              placement: 'start',\n              footer: (\n                <div style={{ display: 'flex' }}>\n                  <Button type=\"text\" size=\"small\" icon={<ReloadOutlined />} />\n                  <Button type=\"text\" size=\"small\" icon={<CopyOutlined />} />\n                  <Button type=\"text\" size=\"small\" icon={<LikeOutlined />} />\n                  <Button type=\"text\" size=\"small\" icon={<DislikeOutlined />} />\n                </div>\n              ),\n              loadingRender: () => (\n                <Space>\n                  <Spin size=\"small\" />\n                  {AGENT_PLACEHOLDER}\n                </Space>\n              ),\n            },\n            user: { placement: 'end' },\n          }}\n        />\n      ) : (\n        /** 没有消息时的 welcome */\n        <>\n          <Welcome\n            variant=\"borderless\"\n            title=\"👋 Hello, I'm Ant Design X\"\n            description=\"Base on Ant Design, AGI product interface solution, create a better intelligent vision~\"\n            className={styles.chatWelcome}\n          />\n\n          <Prompts\n            vertical\n            title=\"I can help：\"\n            items={MOCK_QUESTIONS.map((i) => ({ key: i, description: i }))}\n            onItemClick={(info) => handleUserSubmit(info?.data?.description as string)}\n            style={{\n              marginInline: 16,\n            }}\n            styles={{\n              title: { fontSize: 14 },\n            }}\n          />\n        </>\n      )}\n    </div>\n  );\n  const sendHeader = (\n    <Sender.Header\n      title=\"Upload File\"\n      styles={{ content: { padding: 0 } }}\n      open={attachmentsOpen}\n      onOpenChange={setAttachmentsOpen}\n      forceRender\n    >\n      <Attachments\n        ref={attachmentsRef}\n        beforeUpload={() => false}\n        items={files}\n        onChange={({ fileList }) => setFiles(fileList)}\n        placeholder={(type) =>\n          type === 'drop'\n            ? { title: 'Drop file here' }\n            : {\n                icon: <CloudUploadOutlined />,\n                title: 'Upload files',\n                description: 'Click or drag files to this area to upload',\n              }\n        }\n      />\n    </Sender.Header>\n  );\n  const chatSender = (\n    <div className={styles.chatSend}>\n      <div className={styles.sendAction}>\n        <Button\n          icon={<ScheduleOutlined />}\n          onClick={() => handleUserSubmit('What has Ant Design X upgraded?')}\n        >\n          Upgrades\n        </Button>\n        <Button\n          icon={<ProductOutlined />}\n          onClick={() => handleUserSubmit('What component assets are available in Ant Design X?')}\n        >\n          Components\n        </Button>\n        <Button icon={<AppstoreAddOutlined />}>More</Button>\n      </div>\n\n      {/** 输入框 */}\n      <Suggestion items={MOCK_SUGGESTIONS} onSelect={(itemVal) => setInputValue(`[${itemVal}]:`)}>\n        {({ onTrigger, onKeyDown }) => (\n          <Sender\n            loading={loading}\n            value={inputValue}\n            onChange={(v) => {\n              onTrigger(v === '/');\n              setInputValue(v);\n            }}\n            onSubmit={() => {\n              handleUserSubmit(inputValue);\n              setInputValue('');\n            }}\n            onCancel={() => {\n              abortController.current?.abort();\n            }}\n            allowSpeech\n            placeholder=\"Ask or input / use skills\"\n            onKeyDown={onKeyDown}\n            header={sendHeader}\n            prefix={\n              <Button\n                type=\"text\"\n                icon={<PaperClipOutlined style={{ fontSize: 18 }} />}\n                onClick={() => setAttachmentsOpen(!attachmentsOpen)}\n              />\n            }\n            onPasteFile={onPasteFile}\n            actions={(_, info) => {\n              const { SendButton, LoadingButton, SpeechButton } = info.components;\n              return (\n                <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n                  <SpeechButton className={styles.speechButton} />\n                  {loading ? <LoadingButton type=\"default\" /> : <SendButton type=\"primary\" />}\n                </div>\n              );\n            }}\n          />\n        )}\n      </Suggestion>\n    </div>\n  );\n\n  useEffect(() => {\n    // history mock\n    if (messages?.length) {\n      setMessageHistory((prev) => ({\n        ...prev,\n        [curSession]: messages,\n      }));\n    }\n  }, [messages]);\n\n  return (\n    <div className={styles.copilotChat} style={{ width: copilotOpen ? 400 : 0 }}>\n      {/** 对话区 - header */}\n      {chatHeader}\n\n      {/** 对话区 - 消息列表 */}\n      {chatList}\n\n      {/** 对话区 - 输入框 */}\n      {chatSender}\n    </div>\n  );\n};\n\nconst useWorkareaStyle = createStyles(({ token, css }) => {\n  return {\n    copilotWrapper: css`\n      min-width: 1000px;\n      height: 100vh;\n      display: flex;\n    `,\n    workarea: css`\n      flex: 1;\n      background: ${token.colorBgLayout};\n      display: flex;\n      flex-direction: column;\n    `,\n    workareaHeader: css`\n      box-sizing: border-box;\n      height: 52px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0 48px 0 28px;\n      border-bottom: 1px solid ${token.colorBorder};\n    `,\n    headerTitle: css`\n      font-weight: 600;\n      font-size: 15px;\n      color: ${token.colorText};\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    `,\n    headerButton: css`\n      background-image: linear-gradient(78deg, #8054f2 7%, #3895da 95%);\n      border-radius: 12px;\n      height: 24px;\n      width: 93px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: #fff;\n      cursor: pointer;\n      font-size: 12px;\n      font-weight: 600;\n      transition: all 0.3s;\n      &:hover {\n        opacity: 0.8;\n      }\n    `,\n    workareaBody: css`\n      flex: 1;\n      padding: 16px;\n      background: ${token.colorBgContainer};\n      border-radius: 16px;\n      min-height: 0;\n    `,\n    bodyContent: css`\n      overflow: auto;\n      height: 100%;\n      padding-right: 10px;\n    `,\n    bodyText: css`\n      color: ${token.colorText};\n      padding: 8px;\n    `,\n  };\n});\n\nconst CopilotDemo = () => {\n  const { styles: workareaStyles } = useWorkareaStyle();\n\n  // ==================== State =================\n  const [copilotOpen, setCopilotOpen] = useState(true);\n\n  // ==================== Render =================\n  return (\n    <div className={workareaStyles.copilotWrapper}>\n      {/** 左侧工作区 */}\n      <div className={workareaStyles.workarea}>\n        <div className={workareaStyles.workareaHeader}>\n          <div className={workareaStyles.headerTitle}>\n            <img\n              src=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*eco6RrQhxbMAAAAAAAAAAAAADgCCAQ/original\"\n              draggable={false}\n              alt=\"logo\"\n              width={20}\n              height={20}\n            />\n            Ant Design X\n          </div>\n          {!copilotOpen && (\n            <div onClick={() => setCopilotOpen(true)} className={workareaStyles.headerButton}>\n              ✨ AI Copilot\n            </div>\n          )}\n        </div>\n\n        <div\n          className={workareaStyles.workareaBody}\n          style={{ margin: copilotOpen ? 16 : '16px 48px' }}\n        >\n          <div className={workareaStyles.bodyContent}>\n            <Image\n              src=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*48RLR41kwHIAAAAAAAAAAAAADgCCAQ/fmt.webp\"\n              preview={false}\n            />\n            <div className={workareaStyles.bodyText}>\n              <h4>What is the RICH design paradigm?</h4>\n              <div>\n                RICH is an AI interface design paradigm we propose, similar to how the WIMP paradigm\n                relates to graphical user interfaces.\n              </div>\n              <br />\n              <div>\n                The ACM SIGCHI 2005 (the premier conference on human-computer interaction) defined\n                that the core issues of human-computer interaction can be divided into three levels:\n              </div>\n              <ul>\n                <li>\n                  Interface Paradigm Layer: Defines the design elements of human-computer\n                  interaction interfaces, guiding designers to focus on core issues.\n                </li>\n                <li>\n                  User model layer: Build an interface experience evaluation model to measure the\n                  quality of the interface experience.\n                </li>\n                <li>\n                  Software framework layer: The underlying support algorithms and data structures\n                  for human-computer interfaces, which are the contents hidden behind the front-end\n                  interface.\n                </li>\n              </ul>\n              <div>\n                The interface paradigm is the aspect that designers need to focus on and define the\n                most when a new human-computer interaction technology is born. The interface\n                paradigm defines the design elements that designers should pay attention to, and\n                based on this, it is possible to determine what constitutes good design and how to\n                achieve it.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/** 右侧对话区 */}\n      <Copilot copilotOpen={copilotOpen} setCopilotOpen={setCopilotOpen} />\n    </div>\n  );\n};\n\nexport default CopilotDemo;\n","import '/home/runner/work/x/x/components/use-x-agent/demo/custom.tsx?watch=parent';import { useXAgent } from '@ant-design/x';\nimport { Button, Divider, Form, Input, Typography } from 'antd';\nimport React from 'react';\ntype OutputType = string;\ntype InputType = { message: string };\nconst App = () => {\n  const [lines, setLines] = React.useState<string[]>([]);\n\n  const [form] = Form.useForm();\n\n  const log = (text: string) => {\n    setLines((ori) => [...ori, text]);\n  };\n\n  const [agent] = useXAgent<string, InputType, OutputType>({\n    request: ({ message }, { onUpdate, onSuccess }) => {\n      let times = 0;\n      const chunks: OutputType[] = [];\n      const id = setInterval(() => {\n        times += 1;\n        const chunk = `Thinking...(${times}/3)`;\n        onUpdate(chunk);\n        chunks.push(chunk);\n        if (times >= 3) {\n          onUpdate(`It's funny that you ask: ${message}`);\n          onSuccess(chunks);\n          clearInterval(id);\n        }\n      }, 500);\n    },\n  });\n\n  const onFinish = ({ question }: { question: string }) => {\n    log(`[You] Ask: ${question}`);\n    agent.request(\n      { message: question },\n      {\n        onUpdate: (chunk) => {\n          log(`[Agent] Update: ${chunk}`);\n        },\n        onSuccess: (chunks) => {\n          log(`[Agent] Answer: ${chunks.join(',')}`);\n          form.setFieldsValue({ question: '' });\n        },\n        // Current demo not use error\n        onError: () => {},\n      },\n    );\n  };\n\n  return (\n    <>\n      <Form form={form} layout=\"vertical\" onFinish={onFinish} autoComplete=\"off\">\n        <Form.Item label=\"Question\" name=\"question\">\n          <Input />\n        </Form.Item>\n        <Button htmlType=\"submit\" type=\"primary\" loading={agent.isRequesting()}>\n          submit\n        </Button>\n      </Form>\n\n      <Divider />\n\n      <Typography>\n        <ul>\n          {lines.map((line, index) => (\n            <li key={index}>{line}</li>\n          ))}\n        </ul>\n      </Typography>\n    </>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/docs/playground/agent-tbox.tsx?watch=parent';import {\n  AppstoreAddOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n  DislikeOutlined,\n  EditOutlined,\n  EllipsisOutlined,\n  FileSearchOutlined,\n  HeartOutlined,\n  LikeOutlined,\n  PlusOutlined,\n  ProductOutlined,\n  QuestionCircleOutlined,\n  ReloadOutlined,\n  ScheduleOutlined,\n  ShareAltOutlined,\n  SmileOutlined,\n} from '@ant-design/icons';\nimport {\n  Bubble,\n  Conversations,\n  Prompts,\n  Sender,\n  useXAgent,\n  useXChat,\n  Welcome,\n} from '@ant-design/x';\nimport { Avatar, Button, Flex, type GetProp, message, Space, Spin } from 'antd';\nimport { createStyles } from 'antd-style';\nimport dayjs from 'dayjs';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { TboxClient } from 'tbox-nodejs-sdk';\n\nconst tboxClient = new TboxClient({\n  httpClientConfig: {\n    authorization: 'your-api-key', // Replace with your API key\n    isAntdXDemo: true, // Only for Ant Design X demo\n  },\n});\n\nconst zhCN = {\n  whatIsTbox: '什么是百宝箱 Tbox.cn?',\n  whatCanTboxDo: '百宝箱可以做什么?',\n  today: '今天',\n  yesterday: '昨天',\n  hotTopics: '最热话题',\n  designGuide: '设计指南',\n  intent: '意图',\n  role: '角色',\n  aiUnderstandsUserNeeds: 'AI 理解用户需求并提供解决方案',\n  aiPublicImage: 'AI 的公众形象',\n  dynamic: '动态',\n  component: '组件',\n  guide: '指南',\n  tutorial: '教程',\n  newConversation: '新会话',\n  rename: '重命名',\n  delete: '删除',\n  requestInProgress: '请求正在进行中，请等待请求完成。',\n  demoButtonNoFunction: '演示按钮，无实际功能',\n  helloAntdXTboxAgent: '你好， 我是 Ant Design X & 百宝箱智能体',\n  antdXTboxDescription:\n    '基于 Ant Design 的 AGI 产品界面解决方案，打造更卓越的智能视觉体验，集成了百宝箱 Tbox.cn 的智能体能力，助力产品设计与开发。',\n  askMeAnything: '向我提问吧',\n  loadingMessage: '加载中💗',\n};\n\nconst enUS = {\n  whatIsTbox: 'What is Tbox.cn?',\n  whatCanTboxDo: 'What can Tbox.cn do?',\n  today: 'Today',\n  yesterday: 'Yesterday',\n  hotTopics: 'Hot Topics',\n  designGuide: 'Design Guide',\n  intent: 'Intent',\n  role: 'Role',\n  aiUnderstandsUserNeeds: 'AI understands user needs and provides solutions',\n  aiPublicImage: \"AI's public image\",\n  dynamic: 'Dynamic',\n  component: 'Component',\n  guide: 'Guide',\n  tutorial: 'Tutorial',\n  newConversation: 'New Conversation',\n  rename: 'Rename',\n  delete: 'Delete',\n  requestInProgress: 'Request is in progress, please wait for the request to complete.',\n  demoButtonNoFunction: 'Demo button, no actual function',\n  helloAntdXTboxAgent: 'Hello, I am Ant Design X & Tbox Agent',\n  antdXTboxDescription:\n    'An AGI product interface solution based on Ant Design, creating a superior intelligent visual experience, integrating the capabilities of Tbox.cn agents to assist in product design and development.',\n  askMeAnything: 'Ask me anything...',\n  loadingMessage: 'Loading...',\n};\n\ntype BubbleDataType = {\n  role: string;\n  content: string;\n};\n\nconst isZhCN = window.parent?.location?.pathname?.includes('-cn');\nconst t = isZhCN ? zhCN : enUS;\n\nconst DEFAULT_CONVERSATIONS_ITEMS = [\n  {\n    key: 'default-0',\n    label: t.whatIsTbox,\n    group: t.today,\n  },\n  {\n    key: 'default-2',\n    label: t.whatCanTboxDo,\n    group: t.yesterday,\n  },\n];\n\nconst HOT_TOPICS = {\n  key: '1',\n  label: t.hotTopics,\n  children: [\n    {\n      key: '1-1',\n      description: t.whatIsTbox,\n      icon: <span style={{ color: '#f93a4a', fontWeight: 700 }}>1</span>,\n    },\n    {\n      key: '1-2',\n      description: t.whatCanTboxDo,\n      icon: <span style={{ color: '#ff6565', fontWeight: 700 }}>2</span>,\n    },\n  ],\n};\n\nconst DESIGN_GUIDE = {\n  key: '2',\n  label: t.designGuide,\n  children: [\n    {\n      key: '2-1',\n      icon: <HeartOutlined />,\n      label: t.intent,\n      description: t.aiUnderstandsUserNeeds,\n    },\n    {\n      key: '2-2',\n      icon: <SmileOutlined />,\n      label: t.role,\n      description: t.aiPublicImage,\n    },\n  ],\n};\n\nconst SENDER_PROMPTS: GetProp<typeof Prompts, 'items'> = [\n  {\n    key: '1',\n    description: t.dynamic,\n    icon: <ScheduleOutlined />,\n  },\n  {\n    key: '2',\n    description: t.component,\n    icon: <ProductOutlined />,\n  },\n  {\n    key: '3',\n    description: t.guide,\n    icon: <FileSearchOutlined />,\n  },\n  {\n    key: '4',\n    description: t.tutorial,\n    icon: <AppstoreAddOutlined />,\n  },\n];\n\nconst useStyle = createStyles(({ token, css }) => {\n  return {\n    layout: css`\n      width: 100%;\n      min-width: 1000px;\n      height: 100vh;\n      display: flex;\n      background: ${token.colorBgContainer};\n      font-family: AlibabaPuHuiTi, ${token.fontFamily}, sans-serif;\n    `,\n    // sider 样式\n    sider: css`\n      background: ${token.colorBgLayout}80;\n      width: 280px;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      padding: 0 12px;\n      box-sizing: border-box;\n    `,\n    logo: css`\n      display: flex;\n      align-items: center;\n      justify-content: start;\n      padding: 0 24px;\n      box-sizing: border-box;\n      gap: 8px;\n      margin: 24px 0;\n\n      span {\n        font-weight: bold;\n        color: ${token.colorText};\n        font-size: 16px;\n      }\n    `,\n    addBtn: css`\n      background: #1677ff0f;\n      border: 1px solid #1677ff34;\n      height: 40px;\n    `,\n    conversations: css`\n      flex: 1;\n      overflow-y: auto;\n      margin-top: 12px;\n      padding: 0;\n\n      .ant-conversations-list {\n        padding-inline-start: 0;\n      }\n    `,\n    siderFooter: css`\n      border-top: 1px solid ${token.colorBorderSecondary};\n      height: 40px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    `,\n    // chat list 样式\n    chat: css`\n      height: 100%;\n      width: 100%;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n      padding-block: ${token.paddingLG}px;\n      gap: 16px;\n    `,\n    chatPrompt: css`\n      .ant-prompts-label {\n        color: #000000e0 !important;\n      }\n      .ant-prompts-desc {\n        color: #000000a6 !important;\n        width: 100%;\n      }\n      .ant-prompts-icon {\n        color: #000000a6 !important;\n      }\n    `,\n    chatList: css`\n      flex: 1;\n      overflow: auto;\n    `,\n    loadingMessage: css`\n      background-image: linear-gradient(90deg, #ff6b23 0%, #af3cb8 31%, #53b6ff 89%);\n      background-size: 100% 2px;\n      background-repeat: no-repeat;\n      background-position: bottom;\n    `,\n    placeholder: css`\n      padding-top: 32px;\n    `,\n    // sender 样式\n    sender: css`\n      width: 100%;\n      max-width: 700px;\n      margin: 0 auto;\n    `,\n    speechButton: css`\n      font-size: 18px;\n      color: ${token.colorText} !important;\n    `,\n    senderPrompt: css`\n      width: 100%;\n      max-width: 700px;\n      margin: 0 auto;\n      color: ${token.colorText};\n    `,\n  };\n});\n\nconst Independent: React.FC = () => {\n  const { styles } = useStyle();\n  const streamRef = useRef<any>(null); // 存储 tbox stream 对象\n  const abortControllerRef = useRef<AbortController | null>(null); // 存储 AbortController\n\n  // ==================== State ====================\n  const [messageHistory, setMessageHistory] = useState<Record<string, typeof messages>>({});\n\n  const [conversations, setConversations] = useState(DEFAULT_CONVERSATIONS_ITEMS);\n  const [curConversation, setCurConversation] = useState(DEFAULT_CONVERSATIONS_ITEMS[0].key);\n\n  const [inputValue, setInputValue] = useState('');\n\n  /**\n   * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n   */\n\n  // ==================== Runtime ====================\n  const [agent] = useXAgent<BubbleDataType, any, string>({\n    request: async ({ message }, { onUpdate, onSuccess, onError, onStream }) => {\n      const stream = tboxClient.chat({\n        appId: 'your-app-id', // Replace with your app ID\n        query: message.content,\n        userId: 'antd-x',\n      });\n\n      streamRef.current = stream;\n      const abortController = new AbortController();\n      const originalAbort = abortController.abort.bind(abortController);\n      abortController.abort = () => {\n        stream.abort();\n        originalAbort();\n      };\n      onStream?.(abortController);\n\n      const dataArr = [] as string[];\n\n      stream.on('data', (data) => {\n        let parsedPayload: { text?: string } | undefined;\n        try {\n          const payload = (data as any).data?.payload || '{}';\n          parsedPayload = JSON.parse(payload);\n        } catch (e) {\n          console.error('Failed to parse payload:', e);\n          return;\n        }\n\n        if (parsedPayload?.text) {\n          dataArr.push(parsedPayload.text);\n          onUpdate(parsedPayload.text);\n        }\n      });\n\n      stream.on('error', (error) => {\n        onError(error);\n      });\n\n      stream.on('end', () => {\n        onSuccess(dataArr);\n      });\n\n      stream.on('abort', () => {\n        onSuccess(dataArr);\n      });\n    },\n  });\n  const loading = agent.isRequesting();\n\n  const { onRequest, messages, setMessages } = useXChat({\n    agent,\n    requestPlaceholder: () => {\n      return {\n        content: t.loadingMessage,\n        role: 'assistant',\n      };\n    },\n    requestFallback: (_, { error }) => {\n      if (error.name === 'AbortError') {\n        return {\n          content: 'Request is aborted',\n          role: 'assistant',\n        };\n      }\n      return {\n        content: 'Request failed, please try again!',\n        role: 'assistant',\n      };\n    },\n    transformMessage: (info) => {\n      const { originMessage, chunk } = info || {};\n      if (!chunk) {\n        return {\n          content: originMessage?.content || '',\n          role: 'assistant',\n        };\n      }\n\n      const content = originMessage?.content || '';\n      return {\n        content: content + chunk,\n        role: 'assistant',\n      };\n    },\n    resolveAbortController: (controller) => {\n      // 存储传入的 controller，这个已经包装了 stream.abort() 方法\n      abortControllerRef.current = controller;\n    },\n  });\n\n  // ==================== Event ====================\n  const onSubmit = (val: string) => {\n    if (!val) return;\n\n    if (loading) {\n      message.error('Request is in progress, please wait for the request to complete.');\n      return;\n    }\n\n    onRequest({\n      stream: true,\n      message: { role: 'user', content: val },\n    });\n  };\n\n  const onFooterButtonClick = () => {\n    message.info(t.demoButtonNoFunction);\n  };\n\n  // ==================== Nodes ====================\n  const chatSider = (\n    <div className={styles.sider}>\n      {/* 🌟 Logo */}\n      <div className={styles.logo}>\n        <img\n          src=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*eco6RrQhxbMAAAAAAAAAAAAADgCCAQ/original\"\n          draggable={false}\n          alt=\"logo\"\n          width={24}\n          height={24}\n        />\n        <span>Ant Design X</span>\n      </div>\n\n      {/* 🌟 添加会话 */}\n      <Button\n        onClick={() => {\n          if (agent.isRequesting()) {\n            message.error(t.requestInProgress);\n            return;\n          }\n\n          const now = dayjs().valueOf().toString();\n          setConversations([\n            {\n              key: now,\n              label: `${t.newConversation} ${conversations.length + 1}`,\n              group: t.today,\n            },\n            ...conversations,\n          ]);\n          setCurConversation(now);\n          setMessages([]);\n        }}\n        type=\"link\"\n        className={styles.addBtn}\n        icon={<PlusOutlined />}\n      >\n        {t.newConversation}\n      </Button>\n\n      {/* 🌟 会话管理 */}\n      <Conversations\n        items={conversations}\n        className={styles.conversations}\n        activeKey={curConversation}\n        onActiveChange={async (val) => {\n          if (agent.isRequesting()) {\n            message.error(t.requestInProgress);\n            return;\n          }\n          abortControllerRef.current?.abort();\n          // The abort execution will trigger an asynchronous requestFallback, which may lead to timing issues.\n          // In future versions, the sessionId capability will be added to resolve this problem.\n          setTimeout(() => {\n            setCurConversation(val);\n            setMessages(messageHistory?.[val] || []);\n          }, 100);\n        }}\n        groupable\n        styles={{ item: { padding: '0 8px' } }}\n        menu={(conversation) => ({\n          items: [\n            {\n              label: t.rename,\n              key: 'rename',\n              icon: <EditOutlined />,\n            },\n            {\n              label: t.delete,\n              key: 'delete',\n              icon: <DeleteOutlined />,\n              danger: true,\n              onClick: () => {\n                const newList = conversations.filter((item) => item.key !== conversation.key);\n                const newKey = newList?.[0]?.key;\n                setConversations(newList);\n                // The delete operation modifies curConversation and triggers onActiveChange, so it needs to be executed with a delay to ensure it overrides correctly at the end.\n                // This feature will be fixed in a future version.\n                setTimeout(() => {\n                  if (conversation.key === curConversation) {\n                    setCurConversation(newKey);\n                    setMessages(messageHistory?.[newKey] || []);\n                  }\n                }, 200);\n              },\n            },\n          ],\n        })}\n      />\n\n      <div className={styles.siderFooter}>\n        <Avatar size={24} />\n        <Button type=\"text\" icon={<QuestionCircleOutlined />} />\n      </div>\n    </div>\n  );\n  const chatList = (\n    <div className={styles.chatList}>\n      {messages?.length ? (\n        /* 🌟 消息列表 */\n        <Bubble.List\n          items={messages?.map((i) => ({\n            ...i.message,\n            classNames: {\n              content: i.status === 'loading' ? styles.loadingMessage : '',\n            },\n            typing: i.status === 'loading' ? { suffix: <>💗</> } : false,\n          }))}\n          style={{ height: '100%', paddingInline: 'calc(calc(100% - 700px) /2)' }}\n          roles={{\n            assistant: {\n              placement: 'start',\n              footer: (\n                <div style={{ display: 'flex' }}>\n                  <Button\n                    type=\"text\"\n                    size=\"small\"\n                    icon={<ReloadOutlined />}\n                    onClick={onFooterButtonClick}\n                  />\n                  <Button\n                    type=\"text\"\n                    size=\"small\"\n                    icon={<CopyOutlined />}\n                    onClick={onFooterButtonClick}\n                  />\n                  <Button\n                    type=\"text\"\n                    size=\"small\"\n                    icon={<LikeOutlined />}\n                    onClick={onFooterButtonClick}\n                  />\n                  <Button\n                    type=\"text\"\n                    size=\"small\"\n                    icon={<DislikeOutlined />}\n                    onClick={onFooterButtonClick}\n                  />\n                </div>\n              ),\n              loadingRender: () => <Spin size=\"small\" />,\n            },\n            user: { placement: 'end' },\n          }}\n        />\n      ) : (\n        <Space\n          direction=\"vertical\"\n          size={16}\n          style={{ paddingInline: 'calc(calc(100% - 700px) /2)' }}\n          className={styles.placeholder}\n        >\n          <Welcome\n            variant=\"borderless\"\n            icon=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\"\n            title={t.helloAntdXTboxAgent}\n            description={t.antdXTboxDescription}\n            extra={\n              <Space>\n                <Button icon={<ShareAltOutlined />} />\n                <Button icon={<EllipsisOutlined />} />\n              </Space>\n            }\n          />\n          <Flex gap={16}>\n            <Prompts\n              items={[HOT_TOPICS]}\n              styles={{\n                list: { height: '100%' },\n                item: {\n                  flex: 1,\n                  backgroundImage: 'linear-gradient(123deg, #e5f4ff 0%, #efe7ff 100%)',\n                  borderRadius: 12,\n                  border: 'none',\n                },\n                subItem: { padding: 0, background: 'transparent' },\n              }}\n              onItemClick={(info) => {\n                onSubmit(info.data.description as string);\n              }}\n              className={styles.chatPrompt}\n            />\n\n            <Prompts\n              items={[DESIGN_GUIDE]}\n              styles={{\n                item: {\n                  flex: 1,\n                  backgroundImage: 'linear-gradient(123deg, #e5f4ff 0%, #efe7ff 100%)',\n                  borderRadius: 12,\n                  border: 'none',\n                },\n                subItem: { background: '#ffffffa6' },\n              }}\n              onItemClick={(info) => {\n                onSubmit(info.data.description as string);\n              }}\n              className={styles.chatPrompt}\n            />\n          </Flex>\n        </Space>\n      )}\n    </div>\n  );\n  const chatSender = (\n    <>\n      {/* 🌟 提示词 */}\n      <Prompts\n        items={SENDER_PROMPTS}\n        onItemClick={(info) => {\n          onSubmit(info.data.description as string);\n        }}\n        styles={{\n          item: { padding: '6px 12px' },\n        }}\n        className={styles.senderPrompt}\n      />\n      {/* 🌟 输入框 */}\n      <Sender\n        value={inputValue}\n        onSubmit={() => {\n          onSubmit(inputValue);\n          setInputValue('');\n        }}\n        onChange={setInputValue}\n        onCancel={() => {\n          abortControllerRef.current?.abort();\n        }}\n        loading={loading}\n        className={styles.sender}\n        actions={(_, info) => {\n          const { SendButton, LoadingButton } = info.components;\n          return (\n            <Flex gap={4}>\n              {loading ? <LoadingButton type=\"default\" /> : <SendButton type=\"primary\" />}\n            </Flex>\n          );\n        }}\n        placeholder={t.askMeAnything}\n      />\n    </>\n  );\n\n  useEffect(() => {\n    // history mock\n    if (messages?.length) {\n      setMessageHistory((prev) => ({\n        ...prev,\n        [curConversation]: messages,\n      }));\n    }\n  }, [messages]);\n\n  // ==================== Render =================\n  return (\n    <div className={styles.layout}>\n      {chatSider}\n\n      <div className={styles.chat}>\n        {chatList}\n        {chatSender}\n      </div>\n    </div>\n  );\n};\n\nexport default Independent;\n","import '/home/runner/work/x/x/components/use-x-chat/demo/stream.tsx?watch=parent';import { UserOutlined } from '@ant-design/icons';\nimport { Bubble, Sender, useXAgent, useXChat } from '@ant-design/x';\nimport { Flex, type GetProp } from 'antd';\nimport React from 'react';\n\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\n  ai: {\n    placement: 'start',\n    avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\n  },\n  local: {\n    placement: 'end',\n    avatar: { icon: <UserOutlined />, style: { background: '#87d068' } },\n  },\n};\n\nconst App = () => {\n  const [content, setContent] = React.useState('');\n\n  // Agent for request\n  const [agent] = useXAgent<string, { message: string }, string>({\n    request: async ({ message }, { onSuccess, onUpdate }) => {\n      const fullContent = `Streaming output instead of Bubble typing effect. You typed: ${message}`;\n      let currentContent = '';\n\n      const id = setInterval(() => {\n        currentContent = fullContent.slice(0, currentContent.length + 2);\n        onUpdate(currentContent);\n        if (currentContent === fullContent) {\n          clearInterval(id);\n          onSuccess([fullContent]);\n        }\n      }, 100);\n    },\n  });\n\n  // Chat messages\n  const { onRequest, messages } = useXChat({\n    agent,\n  });\n\n  return (\n    <Flex vertical gap=\"middle\">\n      <Bubble.List\n        roles={roles}\n        style={{ maxHeight: 300 }}\n        items={messages.map(({ id, message, status }) => ({\n          key: id,\n          role: status === 'local' ? 'local' : 'ai',\n          content: message,\n        }))}\n      />\n      <Sender\n        loading={agent.isRequesting()}\n        value={content}\n        onChange={setContent}\n        onSubmit={(nextContent) => {\n          onRequest(nextContent);\n          setContent('');\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/x-request/demo/request-options.tsx?watch=parent';import { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, XRequest } from '@ant-design/x';\nimport { Button, Descriptions, Flex, Splitter } from 'antd';\nimport React, { useState } from 'react';\n\nimport type { ThoughtChainItem } from '@ant-design/x';\n\n/**\n * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */\nconst BASE_URL = 'https://api.example.com/chat/v1';\nconst MODEL = 'gpt-3.5-turbo';\nconst API_KEY = 'Bearer sk-your-dangerouslyApiKey';\n\nconst App = () => {\n  const [status, setStatus] = useState<ThoughtChainItem['status']>();\n  const [lines, setLines] = useState<Record<string, string>[]>([]);\n  const [error, setError] = useState<Error>();\n  const [requestOptions, setRequestOptions] = useState({\n    baseURL: BASE_URL,\n    model: MODEL,\n    dangerouslyApiKey: API_KEY,\n    /** 🔥🔥 Its dangerously! */\n    // dangerouslyApiKey: API_KEY\n  });\n\n  const exampleRequest = XRequest(requestOptions);\n\n  async function request() {\n    setStatus('pending');\n    setLines([]);\n    await exampleRequest.create(\n      {\n        messages: [{ role: 'user', content: 'hello, who are u?' }],\n        stream: true,\n      },\n      {\n        onSuccess: () => {\n          setStatus('success');\n        },\n        onError: (error) => {\n          setError(error);\n          console.log(error.message, 11);\n          setStatus('error');\n        },\n        onUpdate: (msg) => {\n          setLines((pre) => [...pre, msg]);\n        },\n      },\n    );\n  }\n\n  const changeBaseData = () => {\n    setRequestOptions((pre) => ({\n      baseURL: BASE_URL,\n      model: pre.model === MODEL ? 'gpt-4' : MODEL,\n      dangerouslyApiKey:\n        pre.dangerouslyApiKey === API_KEY ? 'Bearer sk-your-new-dangerouslyApiKey' : API_KEY,\n    }));\n  };\n\n  return (\n    <Splitter>\n      <Splitter>\n        <Splitter layout=\"vertical\">\n          <Splitter.Panel>\n            <Flex gap=\"small\">\n              <Button type=\"primary\" disabled={status === 'pending'} onClick={changeBaseData}>\n                Change Request Options\n              </Button>\n              <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n                Agent Request\n              </Button>\n            </Flex>\n          </Splitter.Panel>\n          <Splitter.Panel>\n            <p>baseURL: {requestOptions.baseURL}</p>\n            <p>model: {requestOptions.model}</p>\n            <p>dangerouslyApiKey: {requestOptions.dangerouslyApiKey}</p>\n          </Splitter.Panel>\n        </Splitter>\n      </Splitter>\n      <Splitter.Panel style={{ marginLeft: 16 }}>\n        <ThoughtChain\n          items={[\n            {\n              title: 'Request Log',\n              status: status,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description: status === 'error' && (error?.message || 'request error'),\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/x-request/demo/basic.tsx?watch=parent';import { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, XRequest } from '@ant-design/x';\nimport { Button, Descriptions, Splitter } from 'antd';\nimport React from 'react';\n\nimport type { ThoughtChainItem } from '@ant-design/x';\n\n/**\n * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */\nconst BASE_URL = 'https://api.example.com';\nconst PATH = '/chat';\nconst MODEL = 'gpt-3.5-turbo';\n// const API_KEY = '';\n\nconst exampleRequest = XRequest({\n  baseURL: BASE_URL + PATH,\n  model: MODEL,\n\n  /** 🔥🔥 Its dangerously! */\n  // dangerouslyApiKey: API_KEY\n});\n\nconst App = () => {\n  const [status, setStatus] = React.useState<ThoughtChainItem['status']>();\n  const [lines, setLines] = React.useState<Record<string, string>[]>([]);\n\n  async function request() {\n    setStatus('pending');\n\n    await exampleRequest.create(\n      {\n        messages: [{ role: 'user', content: 'hello, who are u?' }],\n        stream: true,\n        agentId: 111,\n      },\n      {\n        onSuccess: (messages) => {\n          setStatus('success');\n          console.log('onSuccess', messages);\n        },\n        onError: (error) => {\n          setStatus('error');\n          console.error('onError', error);\n        },\n        onUpdate: (msg) => {\n          setLines((pre) => [...pre, msg]);\n          console.log('onUpdate', msg);\n        },\n      },\n    );\n  }\n\n  return (\n    <Splitter>\n      <Splitter.Panel>\n        <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n          Request - {BASE_URL}\n          {PATH}\n        </Button>\n      </Splitter.Panel>\n      <Splitter.Panel style={{ marginLeft: 16 }}>\n        <ThoughtChain\n          items={[\n            {\n              title: 'Request Log',\n              status: status,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description:\n                status === 'error' &&\n                exampleRequest.baseURL === BASE_URL + PATH &&\n                'Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.',\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/use-x-chat/demo/model.tsx?watch=parent';import { UserOutlined } from '@ant-design/icons';\nimport { Bubble, Sender, useXAgent, useXChat } from '@ant-design/x';\nimport { Flex, type GetProp } from 'antd';\nimport React, { useRef } from 'react';\n\n/**\n * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */\n\nconst BASE_URL = 'https://api.x.ant.design/api/llm_siliconflow_deepSeek-r1-distill-1wen-7b';\n\n/**\n * 🔔 The MODEL is fixed in the current request, please replace it with your BASE_UR and MODEL\n */\n\nconst MODEL = 'DeepSeek-R1-Distill-Qwen-7B';\n\n/**\n * 🔔 the API_KEY is a placeholder indicator interface that has a built-in real API_KEY\n */\n\nconst API_KEY = 'Bearer sk-xxxxxxxxxxxxxxxxxxxx';\n\ntype YourMessageType = {\n  role: string;\n  content: string;\n};\n\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\n  assistant: {\n    placement: 'start',\n    avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\n  },\n  user: {\n    placement: 'end',\n    avatar: { icon: <UserOutlined />, style: { background: '#87d068' } },\n  },\n};\n\nconst App = () => {\n  const [content, setContent] = React.useState('');\n  const [agent] = useXAgent<YourMessageType>({\n    baseURL: BASE_URL,\n    model: MODEL,\n    dangerouslyApiKey: API_KEY,\n    /** 🔥🔥 Its dangerously! */\n  });\n  const abortController = useRef<AbortController>(null);\n  // Chat messages\n  const { onRequest, messages } = useXChat({\n    agent,\n    requestFallback: (_, { error }) => {\n      if (error.name === 'AbortError') {\n        return {\n          content: 'Request is aborted',\n          role: 'assistant',\n        };\n      }\n      return {\n        content: 'Request failed, please try again!',\n        role: 'assistant',\n      };\n    },\n    requestPlaceholder: () => {\n      return {\n        content: 'Please wait...',\n        role: 'assistant',\n      };\n    },\n    transformMessage: (info) => {\n      const { originMessage, chunk } = info || {};\n      let currentContent = '';\n      let currentThink = '';\n      try {\n        if (chunk?.data && !chunk?.data.includes('DONE')) {\n          const message = JSON.parse(chunk?.data);\n          currentThink = message?.choices?.[0]?.delta?.reasoning_content || '';\n          currentContent = message?.choices?.[0]?.delta?.content || '';\n        }\n      } catch (error) {\n        console.error(error);\n      }\n\n      let content = '';\n\n      if (!originMessage?.content && currentThink) {\n        content = `<think>${currentThink}`;\n      } else if (\n        originMessage?.content?.includes('<think>') &&\n        !originMessage?.content.includes('</think>') &&\n        currentContent\n      ) {\n        content = `${originMessage?.content}</think>${currentContent}`;\n      } else {\n        content = `${originMessage?.content || ''}${currentThink}${currentContent}`;\n      }\n\n      return {\n        content: content,\n        role: 'assistant',\n      };\n    },\n    resolveAbortController: (controller) => {\n      abortController.current = controller;\n    },\n  });\n  return (\n    <Flex vertical gap=\"middle\">\n      <Bubble.List\n        roles={roles}\n        style={{ maxHeight: 300 }}\n        items={messages.map(({ id, message }) => ({\n          key: id,\n          role: message.role,\n          content: message.content,\n        }))}\n      />\n      <Sender\n        loading={agent.isRequesting()}\n        value={content}\n        onCancel={() => {\n          abortController?.current?.abort?.();\n        }}\n        onChange={setContent}\n        onSubmit={(nextContent) => {\n          onRequest({\n            stream: true,\n            message: {\n              role: 'user',\n              content: nextContent,\n            },\n          });\n          setContent('');\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/use-x-agent/demo/model.tsx?watch=parent';import { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, useXAgent } from '@ant-design/x';\nimport type { ThoughtChainItem } from '@ant-design/x';\nimport { Button, Descriptions, Flex, Input, Splitter, Typography } from 'antd';\nimport React, { useRef, useState } from 'react';\n\nconst { Paragraph } = Typography;\n\n/**\n * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */\n\nconst BASE_URL = 'https://api.x.ant.design/api/llm_siliconflow_qwen3-8b';\n\n/**\n * 🔔 The MODEL is fixed in the current request, please replace it with your BASE_UR and MODEL\n */\n\nconst MODEL = 'Qwen3-8B';\n\n/**\n * 🔔 the API_KEY is a placeholder indicator interface that has a built-in real API_KEY\n */\n\nconst API_KEY = 'Bearer sk-xxxxxxxxxxxxxxxxxxxx';\n\ninterface YourMessageType {\n  role: string;\n  content: string;\n}\n\nconst App = () => {\n  const [status, setStatus] = useState<string>('');\n  const [thoughtChainStatus, setThoughtChainStatus] = useState<ThoughtChainItem['status']>();\n  const [lines, setLines] = useState<any[]>([]);\n  const abortController = useRef<AbortController>(null);\n  const [questionText, setQuestionText] = useState<string>('hello, who are u?');\n\n  const [agent] = useXAgent<YourMessageType>({\n    baseURL: BASE_URL,\n    model: MODEL,\n    dangerouslyApiKey: API_KEY,\n    /** 🔥🔥 Its dangerously! */\n  });\n\n  const request = () => {\n    setLines([]);\n    setThoughtChainStatus('pending');\n    setStatus('pending');\n    agent.request(\n      {\n        messages: [{ role: 'user', content: questionText }],\n        stream: true,\n      },\n      {\n        onSuccess: () => {\n          setStatus('success');\n          setThoughtChainStatus('success');\n        },\n        onError: (error) => {\n          if (error.name === 'AbortError') {\n            setStatus('abort');\n          }\n          setThoughtChainStatus('error');\n        },\n        onUpdate: (msg) => {\n          setLines((pre) => [...pre, msg]);\n        },\n        onStream: (controller) => {\n          abortController.current = controller;\n        },\n      },\n      new TransformStream<string, any>({\n        transform(chunk, controller) {\n          const DEFAULT_KV_SEPARATOR = 'data: ';\n          const DEFAULT_STREAM_SEPARATOR = '\\n\\n';\n          const parts = chunk.split(DEFAULT_STREAM_SEPARATOR);\n\n          parts.forEach((part) => {\n            const separatorIndex = part.indexOf(DEFAULT_KV_SEPARATOR);\n            const value = part.slice(separatorIndex + DEFAULT_KV_SEPARATOR.length);\n            try {\n              const modalMessage = JSON.parse(value || '{}');\n              const content = modalMessage?.choices?.[0]?.delta?.content || '';\n              controller.enqueue(content);\n            } catch (error) {\n              controller.enqueue('');\n            }\n          });\n        },\n      }),\n    );\n  };\n\n  const abort = () => {\n    abortController?.current?.abort?.();\n  };\n\n  return (\n    <Splitter>\n      <Splitter.Panel style={{ height: 300 }}>\n        <Splitter layout=\"vertical\">\n          <Splitter.Panel style={{ margin: '0 16px' }}>\n            <Flex gap=\"large\" vertical>\n              <Input\n                value={questionText}\n                onChange={(e) => {\n                  setQuestionText(e.target.value);\n                }}\n              />\n              <Flex gap=\"small\">\n                <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n                  Agent Request\n                </Button>\n                <Button type=\"primary\" disabled={status !== 'pending'} onClick={abort}>\n                  Agent Abort\n                </Button>\n              </Flex>\n            </Flex>\n          </Splitter.Panel>\n          <Splitter.Panel style={{ margin: 16 }}>\n            <Paragraph>{lines.length > 0 && lines.join('')}</Paragraph>\n          </Splitter.Panel>\n        </Splitter>\n      </Splitter.Panel>\n      <Splitter.Panel>\n        <ThoughtChain\n          style={{ marginLeft: 16 }}\n          items={[\n            {\n              title: 'Agent Request Log',\n              status: thoughtChainStatus,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description: `request ${status}`,\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/use-x-chat/demo/basic.tsx?watch=parent';import { UserOutlined } from '@ant-design/icons';\nimport { Bubble, Sender, useXAgent, useXChat } from '@ant-design/x';\nimport { Flex, type GetProp } from 'antd';\nimport React from 'react';\n\nconst sleep = () => new Promise((resolve) => setTimeout(resolve, 1000));\n\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\n  ai: {\n    placement: 'start',\n    avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\n    typing: { step: 5, interval: 20 },\n    style: {\n      maxWidth: 600,\n    },\n  },\n  local: {\n    placement: 'end',\n    avatar: { icon: <UserOutlined />, style: { background: '#87d068' } },\n  },\n};\n\nlet mockSuccess = false;\n\nconst App = () => {\n  const [content, setContent] = React.useState('');\n\n  // Agent for request\n  const [agent] = useXAgent<string, { message: string }, string>({\n    request: async ({ message }, { onSuccess, onError }) => {\n      await sleep();\n      mockSuccess = !mockSuccess;\n      if (mockSuccess) {\n        onSuccess([`Mock success return. You said: ${message}`]);\n      }\n\n      onError(new Error('Mock request failed'));\n    },\n  });\n\n  // Chat messages\n  const { onRequest, messages } = useXChat({\n    agent,\n    requestPlaceholder: 'Waiting...',\n    requestFallback: 'Mock failed return. Please try again later.',\n  });\n\n  return (\n    <Flex vertical gap=\"middle\">\n      <Bubble.List\n        roles={roles}\n        style={{ maxHeight: 300 }}\n        items={messages.map(({ id, message, status }) => ({\n          key: id,\n          loading: status === 'loading',\n          role: status === 'local' ? 'local' : 'ai',\n          content: message,\n        }))}\n      />\n      <Sender\n        loading={agent.isRequesting()}\n        value={content}\n        onChange={setContent}\n        onSubmit={(nextContent) => {\n          onRequest(nextContent);\n          setContent('');\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/x-request/demo/custom-transformer.tsx?watch=parent';import { ThoughtChain, XRequest } from '@ant-design/x';\nimport { Button, Splitter } from 'antd';\nimport React from 'react';\n\nimport { TagsOutlined } from '@ant-design/icons';\nimport type { ThoughtChainItem } from '@ant-design/x';\n\nconst BASE_URL = 'https://api.example.host';\nconst PATH = '/chat';\nconst MODEL = 'gpt-4o';\n\nconst ND_JSON_SEPARATOR = '\\n';\n\nasync function mockFetch() {\n  const ndJsonData = `{data:{\"id\":\"0\",\"choices\":[{\"index\":0,\"delta\":{\"content\":\"Hello\",\"role\":\"assistant\"}}],\"created\":1733129200,\"model\":\"gpt-4o\"}}\n{data:{\"id\":\"1\",\"choices\":[{\"index\":1,\"delta\":{\"content\":\"world!\",\"role\":\"assistant\"}}],\"created\":1733129300,\"model\":\"gpt-4o\"}}\n{data:{\"id\":\"2\",\"choices\":[{\"index\":2,\"delta\":{\"content\":\"I\",\"role\":\"assistant\"}}],\"created\":1733129400,\"model\":\"gpt-4o\"}}\n{data:{\"id\":\"3\",\"choices\":[{\"index\":3,\"delta\":{\"content\":\"am\",\"role\":\"assistant\"}}],\"created\":1733129500,\"model\":\"gpt-4o\"}}\n{data:{\"id\":\"4\",\"choices\":[{\"index\":4,\"delta\":{\"content\":\"Ant Design X!\",\"role\":\"assistant\"}}],\"created\":1733129600,\"model\":\"gpt-4o\"}}`;\n\n  const chunks = ndJsonData.split(ND_JSON_SEPARATOR);\n\n  const response = new Response(\n    new ReadableStream({\n      async start(controller) {\n        for (const chunk of chunks) {\n          await new Promise((resolve) => setTimeout(resolve, 100));\n          controller.enqueue(new TextEncoder().encode(chunk));\n        }\n        controller.close();\n      },\n    }),\n    {\n      headers: {\n        'Content-Type': 'application/x-ndjson',\n      },\n    },\n  );\n\n  return response;\n}\n\nconst exampleRequest = XRequest({\n  baseURL: BASE_URL + PATH,\n  model: MODEL,\n  fetch: mockFetch,\n});\n\nconst App = () => {\n  const [status, setStatus] = React.useState<ThoughtChainItem['status']>();\n  const [lines, setLines] = React.useState<string[]>([]);\n\n  async function request() {\n    setStatus('pending');\n\n    await exampleRequest.create(\n      {\n        messages: [{ role: 'user', content: 'hello, who are u?' }],\n        stream: true,\n      },\n      {\n        onSuccess: (messages) => {\n          setStatus('success');\n          console.log('onSuccess', messages);\n        },\n        onError: (error) => {\n          setStatus('error');\n          console.error('onError', error);\n        },\n        onUpdate: (msg) => {\n          setLines((pre) => [...pre, msg]);\n          console.log('onUpdate', msg);\n        },\n      },\n      new TransformStream<string, string>({\n        transform(chunk, controller) {\n          controller.enqueue(chunk);\n        },\n      }),\n    );\n  }\n\n  return (\n    <Splitter>\n      <Splitter.Panel>\n        <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n          Request - {BASE_URL}\n          {PATH}\n        </Button>\n      </Splitter.Panel>\n      <Splitter.Panel style={{ marginLeft: 16 }}>\n        <ThoughtChain\n          items={[\n            {\n              title: 'Mock Custom Protocol - Log',\n              status: status,\n              icon: <TagsOutlined />,\n              content: (\n                <pre style={{ overflow: 'scroll' }}>\n                  <code>{lines.join(ND_JSON_SEPARATOR)}</code>\n                </pre>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/x-stream/demo/custom-protocol.tsx?watch=parent';import { TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, XStream } from '@ant-design/x';\nimport { Button, Splitter } from 'antd';\nimport React from 'react';\n\nconst sipHeaders = [\n  'INVITE sip:[email protected] SIP/2.0\\n',\n  'Via: SIP/2.0/UDP [host];branch=123456\\n',\n  'Content-Type: application/sdp\\n\\n',\n];\n\nconst sdp = [\n  'v=0\\n',\n  'o=alice 2890844526 2890844526 IN IP4 [host]\\n',\n  's=\\n',\n  'c=IN IP4 [host]\\n',\n  't=0 0\\n',\n  'm=audio 49170 RTP/AVP 0\\n',\n  'a=rtpmap:0 PCMU/8000\\n',\n  'm=video 51372 RTP/AVP 31\\n',\n  'a=rtpmap:31 H261/90000\\n',\n  'm=video 53000 RTP/AVP 32\\n',\n  'a=rtpmap:32 MPV/90000\\n\\n',\n];\n\nfunction mockReadableStream() {\n  return new ReadableStream({\n    async start(controller) {\n      for (const chunk of sipHeaders.concat(sdp)) {\n        await new Promise((resolve) => setTimeout(resolve, 100));\n        controller.enqueue(new TextEncoder().encode(chunk));\n      }\n      controller.close();\n    },\n  });\n}\n\nconst App = () => {\n  const [lines, setLines] = React.useState<string[]>([]);\n\n  async function readStream() {\n    // 🌟 Read the stream\n    for await (const chunk of XStream({\n      readableStream: mockReadableStream(),\n      transformStream: new TransformStream<string, string>({\n        transform(chunk, controller) {\n          controller.enqueue(chunk);\n        },\n      }),\n    })) {\n      setLines((pre) => [...pre, chunk]);\n    }\n  }\n\n  return (\n    <Splitter>\n      <Splitter.Panel>\n        <Button type=\"primary\" onClick={readStream} style={{ marginBottom: 16 }}>\n          Mock Custom Protocol - SIP\n        </Button>\n      </Splitter.Panel>\n      {/* -------------- Log -------------- */}\n      <Splitter.Panel style={{ marginLeft: 16 }}>\n        <ThoughtChain\n          items={\n            lines.length\n              ? [\n                  {\n                    title: 'Mock Custom Protocol - Log',\n                    status: 'success',\n                    icon: <TagsOutlined />,\n                    content: (\n                      <pre style={{ overflow: 'scroll' }}>\n                        <code>{lines.join('')}</code>\n                      </pre>\n                    ),\n                  },\n                ]\n              : []\n          }\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/docs/playground/independent.tsx?watch=parent';import {\n  AppstoreAddOutlined,\n  CloudUploadOutlined,\n  CommentOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n  DislikeOutlined,\n  EditOutlined,\n  EllipsisOutlined,\n  FileSearchOutlined,\n  HeartOutlined,\n  LikeOutlined,\n  PaperClipOutlined,\n  PlusOutlined,\n  ProductOutlined,\n  QuestionCircleOutlined,\n  ReloadOutlined,\n  ScheduleOutlined,\n  ShareAltOutlined,\n  SmileOutlined,\n} from '@ant-design/icons';\nimport {\n  Attachments,\n  Bubble,\n  Conversations,\n  Prompts,\n  Sender,\n  Welcome,\n  useXAgent,\n  useXChat,\n} from '@ant-design/x';\nimport { Avatar, Button, Flex, type GetProp, Space, Spin, message } from 'antd';\nimport { createStyles } from 'antd-style';\nimport dayjs from 'dayjs';\nimport React, { useEffect, useRef, useState } from 'react';\n\ntype BubbleDataType = {\n  role: string;\n  content: string;\n};\n\nconst DEFAULT_CONVERSATIONS_ITEMS = [\n  {\n    key: 'default-0',\n    label: 'What is Ant Design X?',\n    group: 'Today',\n  },\n  {\n    key: 'default-1',\n    label: 'How to quickly install and import components?',\n    group: 'Today',\n  },\n  {\n    key: 'default-2',\n    label: 'New AGI Hybrid Interface',\n    group: 'Yesterday',\n  },\n];\n\nconst HOT_TOPICS = {\n  key: '1',\n  label: 'Hot Topics',\n  children: [\n    {\n      key: '1-1',\n      description: 'What has Ant Design X upgraded?',\n      icon: <span style={{ color: '#f93a4a', fontWeight: 700 }}>1</span>,\n    },\n    {\n      key: '1-2',\n      description: 'New AGI Hybrid Interface',\n      icon: <span style={{ color: '#ff6565', fontWeight: 700 }}>2</span>,\n    },\n    {\n      key: '1-3',\n      description: 'What components are in Ant Design X?',\n      icon: <span style={{ color: '#ff8f1f', fontWeight: 700 }}>3</span>,\n    },\n    {\n      key: '1-4',\n      description: 'Come and discover the new design paradigm of the AI era.',\n      icon: <span style={{ color: '#00000040', fontWeight: 700 }}>4</span>,\n    },\n    {\n      key: '1-5',\n      description: 'How to quickly install and import components?',\n      icon: <span style={{ color: '#00000040', fontWeight: 700 }}>5</span>,\n    },\n  ],\n};\n\nconst DESIGN_GUIDE = {\n  key: '2',\n  label: 'Design Guide',\n  children: [\n    {\n      key: '2-1',\n      icon: <HeartOutlined />,\n      label: 'Intention',\n      description: 'AI understands user needs and provides solutions.',\n    },\n    {\n      key: '2-2',\n      icon: <SmileOutlined />,\n      label: 'Role',\n      description: \"AI's public persona and image\",\n    },\n    {\n      key: '2-3',\n      icon: <CommentOutlined />,\n      label: 'Chat',\n      description: 'How AI Can Express Itself in a Way Users Understand',\n    },\n    {\n      key: '2-4',\n      icon: <PaperClipOutlined />,\n      label: 'Interface',\n      description: 'AI balances \"chat\" & \"do\" behaviors.',\n    },\n  ],\n};\n\nconst SENDER_PROMPTS: GetProp<typeof Prompts, 'items'> = [\n  {\n    key: '1',\n    description: 'Upgrades',\n    icon: <ScheduleOutlined />,\n  },\n  {\n    key: '2',\n    description: 'Components',\n    icon: <ProductOutlined />,\n  },\n  {\n    key: '3',\n    description: 'RICH Guide',\n    icon: <FileSearchOutlined />,\n  },\n  {\n    key: '4',\n    description: 'Installation Introduction',\n    icon: <AppstoreAddOutlined />,\n  },\n];\n\nconst useStyle = createStyles(({ token, css }) => {\n  return {\n    layout: css`\n      width: 100%;\n      min-width: 1000px;\n      height: 100vh;\n      display: flex;\n      background: ${token.colorBgContainer};\n      font-family: AlibabaPuHuiTi, ${token.fontFamily}, sans-serif;\n    `,\n    // sider 样式\n    sider: css`\n      background: ${token.colorBgLayout}80;\n      width: 280px;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      padding: 0 12px;\n      box-sizing: border-box;\n    `,\n    logo: css`\n      display: flex;\n      align-items: center;\n      justify-content: start;\n      padding: 0 24px;\n      box-sizing: border-box;\n      gap: 8px;\n      margin: 24px 0;\n\n      span {\n        font-weight: bold;\n        color: ${token.colorText};\n        font-size: 16px;\n      }\n    `,\n    addBtn: css`\n      background: #1677ff0f;\n      border: 1px solid #1677ff34;\n      height: 40px;\n    `,\n    conversations: css`\n      flex: 1;\n      overflow-y: auto;\n      margin-top: 12px;\n      padding: 0;\n\n      .ant-conversations-list {\n        padding-inline-start: 0;\n      }\n    `,\n    siderFooter: css`\n      border-top: 1px solid ${token.colorBorderSecondary};\n      height: 40px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    `,\n    // chat list 样式\n    chat: css`\n      height: 100%;\n      width: 100%;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n      padding-block: ${token.paddingLG}px;\n      gap: 16px;\n    `,\n    chatPrompt: css`\n      .ant-prompts-label {\n        color: #000000e0 !important;\n      }\n      .ant-prompts-desc {\n        color: #000000a6 !important;\n        width: 100%;\n      }\n      .ant-prompts-icon {\n        color: #000000a6 !important;\n      }\n    `,\n    chatList: css`\n      flex: 1;\n      overflow: auto;\n    `,\n    loadingMessage: css`\n      background-image: linear-gradient(90deg, #ff6b23 0%, #af3cb8 31%, #53b6ff 89%);\n      background-size: 100% 2px;\n      background-repeat: no-repeat;\n      background-position: bottom;\n    `,\n    placeholder: css`\n      padding-top: 32px;\n    `,\n    // sender 样式\n    sender: css`\n      width: 100%;\n      max-width: 700px;\n      margin: 0 auto;\n    `,\n    speechButton: css`\n      font-size: 18px;\n      color: ${token.colorText} !important;\n    `,\n    senderPrompt: css`\n      width: 100%;\n      max-width: 700px;\n      margin: 0 auto;\n      color: ${token.colorText};\n    `,\n  };\n});\n\nconst Independent: React.FC = () => {\n  const { styles } = useStyle();\n  const abortController = useRef<AbortController>(null);\n\n  // ==================== State ====================\n  const [messageHistory, setMessageHistory] = useState<Record<string, any>>({});\n\n  const [conversations, setConversations] = useState(DEFAULT_CONVERSATIONS_ITEMS);\n  const [curConversation, setCurConversation] = useState(DEFAULT_CONVERSATIONS_ITEMS[0].key);\n\n  const [attachmentsOpen, setAttachmentsOpen] = useState(false);\n  const [attachedFiles, setAttachedFiles] = useState<GetProp<typeof Attachments, 'items'>>([]);\n\n  const [inputValue, setInputValue] = useState('');\n\n  /**\n   * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n   */\n\n  // ==================== Runtime ====================\n  const [agent] = useXAgent<BubbleDataType>({\n    baseURL: 'https://api.x.ant.design/api/llm_siliconflow_deepSeek-r1-distill-1wen-7b',\n    model: 'DeepSeek-R1-Distill-Qwen-7B',\n    dangerouslyApiKey: 'Bearer sk-xxxxxxxxxxxxxxxxxxxx',\n  });\n  const loading = agent.isRequesting();\n\n  const { onRequest, messages, setMessages } = useXChat({\n    agent,\n    requestFallback: (_, { error }) => {\n      if (error.name === 'AbortError') {\n        return {\n          content: 'Request is aborted',\n          role: 'assistant',\n        };\n      }\n      return {\n        content: 'Request failed, please try again!',\n        role: 'assistant',\n      };\n    },\n    transformMessage: (info) => {\n      const { originMessage, chunk } = info || {};\n      let currentContent = '';\n      let currentThink = '';\n      try {\n        if (chunk?.data && !chunk?.data.includes('DONE')) {\n          const message = JSON.parse(chunk?.data);\n          currentThink = message?.choices?.[0]?.delta?.reasoning_content || '';\n          currentContent = message?.choices?.[0]?.delta?.content || '';\n        }\n      } catch (error) {\n        console.error(error);\n      }\n\n      let content = '';\n\n      if (!originMessage?.content && currentThink) {\n        content = `<think>${currentThink}`;\n      } else if (\n        originMessage?.content?.includes('<think>') &&\n        !originMessage?.content.includes('</think>') &&\n        currentContent\n      ) {\n        content = `${originMessage?.content}</think>${currentContent}`;\n      } else {\n        content = `${originMessage?.content || ''}${currentThink}${currentContent}`;\n      }\n      return {\n        content: content,\n        role: 'assistant',\n      };\n    },\n    resolveAbortController: (controller) => {\n      abortController.current = controller;\n    },\n  });\n\n  // ==================== Event ====================\n  const onSubmit = (val: string) => {\n    if (!val) return;\n\n    if (loading) {\n      message.error('Request is in progress, please wait for the request to complete.');\n      return;\n    }\n\n    onRequest({\n      stream: true,\n      message: { role: 'user', content: val },\n    });\n  };\n\n  // ==================== Nodes ====================\n  const chatSider = (\n    <div className={styles.sider}>\n      {/* 🌟 Logo */}\n      <div className={styles.logo}>\n        <img\n          src=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*eco6RrQhxbMAAAAAAAAAAAAADgCCAQ/original\"\n          draggable={false}\n          alt=\"logo\"\n          width={24}\n          height={24}\n        />\n        <span>Ant Design X</span>\n      </div>\n\n      {/* 🌟 添加会话 */}\n      <Button\n        onClick={() => {\n          if (agent.isRequesting()) {\n            message.error(\n              'Message is Requesting, you can create a new conversation after request done or abort it right now...',\n            );\n            return;\n          }\n\n          const now = dayjs().valueOf().toString();\n          setConversations([\n            {\n              key: now,\n              label: `New Conversation ${conversations.length + 1}`,\n              group: 'Today',\n            },\n            ...conversations,\n          ]);\n          setCurConversation(now);\n          setMessages([]);\n        }}\n        type=\"link\"\n        className={styles.addBtn}\n        icon={<PlusOutlined />}\n      >\n        New Conversation\n      </Button>\n\n      {/* 🌟 会话管理 */}\n      <Conversations\n        items={conversations}\n        className={styles.conversations}\n        activeKey={curConversation}\n        onActiveChange={async (val) => {\n          abortController.current?.abort();\n          // The abort execution will trigger an asynchronous requestFallback, which may lead to timing issues.\n          // In future versions, the sessionId capability will be added to resolve this problem.\n          setTimeout(() => {\n            setCurConversation(val);\n            setMessages(messageHistory?.[val] || []);\n          }, 100);\n        }}\n        groupable\n        styles={{ item: { padding: '0 8px' } }}\n        menu={(conversation) => ({\n          items: [\n            {\n              label: 'Rename',\n              key: 'rename',\n              icon: <EditOutlined />,\n            },\n            {\n              label: 'Delete',\n              key: 'delete',\n              icon: <DeleteOutlined />,\n              danger: true,\n              onClick: () => {\n                const newList = conversations.filter((item) => item.key !== conversation.key);\n                const newKey = newList?.[0]?.key;\n                setConversations(newList);\n                // The delete operation modifies curConversation and triggers onActiveChange, so it needs to be executed with a delay to ensure it overrides correctly at the end.\n                // This feature will be fixed in a future version.\n                setTimeout(() => {\n                  if (conversation.key === curConversation) {\n                    setCurConversation(newKey);\n                    setMessages(messageHistory?.[newKey] || []);\n                  }\n                }, 200);\n              },\n            },\n          ],\n        })}\n      />\n\n      <div className={styles.siderFooter}>\n        <Avatar size={24} />\n        <Button type=\"text\" icon={<QuestionCircleOutlined />} />\n      </div>\n    </div>\n  );\n  const chatList = (\n    <div className={styles.chatList}>\n      {messages?.length ? (\n        /* 🌟 消息列表 */\n        <Bubble.List\n          items={messages?.map((i) => ({\n            ...i.message,\n            classNames: {\n              content: i.status === 'loading' ? styles.loadingMessage : '',\n            },\n            typing: i.status === 'loading' ? { step: 5, interval: 20, suffix: <>💗</> } : false,\n          }))}\n          style={{ height: '100%', paddingInline: 'calc(calc(100% - 700px) /2)' }}\n          roles={{\n            assistant: {\n              placement: 'start',\n              footer: (\n                <div style={{ display: 'flex' }}>\n                  <Button type=\"text\" size=\"small\" icon={<ReloadOutlined />} />\n                  <Button type=\"text\" size=\"small\" icon={<CopyOutlined />} />\n                  <Button type=\"text\" size=\"small\" icon={<LikeOutlined />} />\n                  <Button type=\"text\" size=\"small\" icon={<DislikeOutlined />} />\n                </div>\n              ),\n              loadingRender: () => <Spin size=\"small\" />,\n            },\n            user: { placement: 'end' },\n          }}\n        />\n      ) : (\n        <Space\n          direction=\"vertical\"\n          size={16}\n          style={{ paddingInline: 'calc(calc(100% - 700px) /2)' }}\n          className={styles.placeholder}\n        >\n          <Welcome\n            variant=\"borderless\"\n            icon=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\"\n            title=\"Hello, I'm Ant Design X\"\n            description=\"Base on Ant Design, AGI product interface solution, create a better intelligent vision~\"\n            extra={\n              <Space>\n                <Button icon={<ShareAltOutlined />} />\n                <Button icon={<EllipsisOutlined />} />\n              </Space>\n            }\n          />\n          <Flex gap={16}>\n            <Prompts\n              items={[HOT_TOPICS]}\n              styles={{\n                list: { height: '100%' },\n                item: {\n                  flex: 1,\n                  backgroundImage: 'linear-gradient(123deg, #e5f4ff 0%, #efe7ff 100%)',\n                  borderRadius: 12,\n                  border: 'none',\n                },\n                subItem: { padding: 0, background: 'transparent' },\n              }}\n              onItemClick={(info) => {\n                onSubmit(info.data.description as string);\n              }}\n              className={styles.chatPrompt}\n            />\n\n            <Prompts\n              items={[DESIGN_GUIDE]}\n              styles={{\n                item: {\n                  flex: 1,\n                  backgroundImage: 'linear-gradient(123deg, #e5f4ff 0%, #efe7ff 100%)',\n                  borderRadius: 12,\n                  border: 'none',\n                },\n                subItem: { background: '#ffffffa6' },\n              }}\n              onItemClick={(info) => {\n                onSubmit(info.data.description as string);\n              }}\n              className={styles.chatPrompt}\n            />\n          </Flex>\n        </Space>\n      )}\n    </div>\n  );\n  const senderHeader = (\n    <Sender.Header\n      title=\"Upload File\"\n      open={attachmentsOpen}\n      onOpenChange={setAttachmentsOpen}\n      styles={{ content: { padding: 0 } }}\n    >\n      <Attachments\n        beforeUpload={() => false}\n        items={attachedFiles}\n        onChange={(info) => setAttachedFiles(info.fileList)}\n        placeholder={(type) =>\n          type === 'drop'\n            ? { title: 'Drop file here' }\n            : {\n                icon: <CloudUploadOutlined />,\n                title: 'Upload files',\n                description: 'Click or drag files to this area to upload',\n              }\n        }\n      />\n    </Sender.Header>\n  );\n  const chatSender = (\n    <>\n      {/* 🌟 提示词 */}\n      <Prompts\n        items={SENDER_PROMPTS}\n        onItemClick={(info) => {\n          onSubmit(info.data.description as string);\n        }}\n        styles={{\n          item: { padding: '6px 12px' },\n        }}\n        className={styles.senderPrompt}\n      />\n      {/* 🌟 输入框 */}\n      <Sender\n        value={inputValue}\n        header={senderHeader}\n        onSubmit={() => {\n          onSubmit(inputValue);\n          setInputValue('');\n        }}\n        onChange={setInputValue}\n        onCancel={() => {\n          abortController.current?.abort();\n        }}\n        prefix={\n          <Button\n            type=\"text\"\n            icon={<PaperClipOutlined style={{ fontSize: 18 }} />}\n            onClick={() => setAttachmentsOpen(!attachmentsOpen)}\n          />\n        }\n        loading={loading}\n        className={styles.sender}\n        allowSpeech\n        actions={(_, info) => {\n          const { SendButton, LoadingButton, SpeechButton } = info.components;\n          return (\n            <Flex gap={4}>\n              <SpeechButton className={styles.speechButton} />\n              {loading ? <LoadingButton type=\"default\" /> : <SendButton type=\"primary\" />}\n            </Flex>\n          );\n        }}\n        placeholder=\"Ask or input / use skills\"\n      />\n    </>\n  );\n\n  useEffect(() => {\n    // history mock\n    if (messages?.length) {\n      setMessageHistory((prev) => ({\n        ...prev,\n        [curConversation]: messages,\n      }));\n    }\n  }, [messages]);\n\n  // ==================== Render =================\n  return (\n    <div className={styles.layout}>\n      {chatSider}\n\n      <div className={styles.chat}>\n        {chatList}\n        {chatSender}\n      </div>\n    </div>\n  );\n};\n\nexport default Independent;\n","import '/home/runner/work/x/x/components/x-stream/demo/default-protocol.tsx?watch=parent';import { TagsOutlined } from '@ant-design/icons';\nimport { Bubble, ThoughtChain, XStream } from '@ant-design/x';\nimport { Button, Splitter } from 'antd';\nimport React from 'react';\n\nconst contentChunks = ['He', 'llo', ', w', 'or', 'ld!'];\n\nfunction mockReadableStream() {\n  const sseChunks: string[] = [];\n\n  for (let i = 0; i < contentChunks.length; i++) {\n    const sseEventPart = `event: message\\ndata: {\"id\":\"${i}\",\"content\":\"${contentChunks[i]}\"}\\n\\n`;\n    sseChunks.push(sseEventPart);\n  }\n\n  return new ReadableStream({\n    async start(controller) {\n      for (const chunk of sseChunks) {\n        await new Promise((resolve) => setTimeout(resolve, 100));\n        controller.enqueue(new TextEncoder().encode(chunk));\n      }\n      controller.close();\n    },\n  });\n}\n\nconst App = () => {\n  const [lines, setLines] = React.useState<Record<string, string>[]>([]);\n  const content = lines.map((line) => JSON.parse(line.data).content).join('');\n\n  async function readStream() {\n    // 🌟 Read the stream\n    for await (const chunk of XStream({\n      readableStream: mockReadableStream(),\n    })) {\n      console.log(chunk);\n      setLines((pre) => [...pre, chunk]);\n    }\n  }\n\n  return (\n    <Splitter>\n      <Splitter.Panel>\n        {/* -------------- Emit -------------- */}\n        <Button type=\"primary\" onClick={readStream} style={{ marginBottom: 16 }}>\n          Mock Default Protocol - SSE\n        </Button>\n        {/* -------------- Content Concat -------------- */}\n        {content && <Bubble content={content} />}\n      </Splitter.Panel>\n      {/* -------------- Log -------------- */}\n      <Splitter.Panel style={{ marginLeft: 16 }}>\n        <ThoughtChain\n          items={\n            lines.length\n              ? [\n                  {\n                    title: 'Mock Default Protocol - Log',\n                    status: 'success',\n                    icon: <TagsOutlined />,\n                    content: (\n                      <pre style={{ overflow: 'scroll' }}>\n                        {lines.map((i) => (\n                          <code key={i.data}>{i.data}</code>\n                        ))}\n                      </pre>\n                    ),\n                  },\n                ]\n              : []\n          }\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/use-x-agent/demo/preset.tsx?watch=parent';import { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, useXAgent } from '@ant-design/x';\nimport { Button, Descriptions, Splitter } from 'antd';\nimport React from 'react';\n\nimport type { ThoughtChainItem } from '@ant-design/x';\n\n/**\n * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */\nconst BASE_URL = 'https://api.example.com';\nconst PATH = '/chat';\nconst MODEL = 'gpt-3.5-turbo';\n/** 🔥🔥 Its dangerously! */\n// const API_KEY = '';\n\ninterface YourMessageType {\n  role: string;\n  content: string;\n}\n\nconst App = () => {\n  const [status, setStatus] = React.useState<ThoughtChainItem['status']>();\n  const [lines, setLines] = React.useState<any[]>([]);\n\n  const [agent] = useXAgent<YourMessageType>({\n    baseURL: BASE_URL + PATH,\n    model: MODEL,\n    // dangerouslyApiKey: API_KEY\n  });\n\n  async function request() {\n    setStatus('pending');\n\n    agent.request(\n      {\n        messages: [{ role: 'user', content: 'hello, who are u?' }],\n        stream: true,\n      },\n      {\n        onSuccess: (chunks) => {\n          setStatus('success');\n          console.log('onSuccess', chunks);\n        },\n        onError: (error) => {\n          setStatus('error');\n          console.error('onError', error);\n        },\n        onUpdate: (chunk) => {\n          setLines((pre) => [...pre, chunk]);\n          console.log('onUpdate', chunk);\n        },\n      },\n    );\n  }\n\n  return (\n    <Splitter>\n      <Splitter.Panel>\n        <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n          Agent Request\n        </Button>\n      </Splitter.Panel>\n      <Splitter.Panel>\n        <ThoughtChain\n          style={{ marginLeft: 16 }}\n          items={[\n            {\n              title: 'Agent Request Log',\n              status: status,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description:\n                status === 'error' &&\n                agent.config.baseURL === BASE_URL + PATH &&\n                'Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.',\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/use-x-agent/demo/requestParams.tsx?watch=parent';import { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, useXAgent } from '@ant-design/x';\nimport { Button, Descriptions, Splitter } from 'antd';\nimport React from 'react';\n\nimport type { ThoughtChainItem } from '@ant-design/x';\n\nconst BASE_URL = 'https://api.example.com/agent';\n\ninterface YourMessageType {\n  role: string;\n  content: string;\n}\n\nconst App = () => {\n  const [status, setStatus] = React.useState<ThoughtChainItem['status']>();\n  const [lines, setLines] = React.useState<any[]>([]);\n\n  const [agent] = useXAgent<YourMessageType>({\n    baseURL: BASE_URL,\n  });\n\n  async function request() {\n    setStatus('pending');\n\n    agent.request(\n      {\n        agentId: 1234,\n        query: 'Search for the latest technology news',\n        stream: true,\n      },\n      {\n        onSuccess: (messages) => {\n          setStatus('success');\n          console.log('onSuccess', messages);\n        },\n        onError: (error) => {\n          setStatus('error');\n          console.error('onError', error);\n        },\n        onUpdate: (msg) => {\n          setLines((pre) => [...pre, msg]);\n          console.log('onUpdate', msg);\n        },\n      },\n    );\n  }\n\n  return (\n    <Splitter>\n      <Splitter.Panel>\n        <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n          Agent Request\n        </Button>\n      </Splitter.Panel>\n      <Splitter.Panel>\n        <ThoughtChain\n          style={{ marginLeft: 16 }}\n          items={[\n            {\n              title: 'Agent Request Log',\n              status: status,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description:\n                status === 'error' &&\n                agent.config.baseURL === BASE_URL &&\n                'Please replace the BASE_URL,RequestParams with your own values.',\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/use-x-agent/demo/request-options.tsx?watch=parent';import { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, useXAgent } from '@ant-design/x';\nimport { Button, Descriptions, Flex, Splitter } from 'antd';\nimport React, { useState } from 'react';\n\nimport type { ThoughtChainItem } from '@ant-design/x';\n\n/**\n * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */\nconst BASE_URL = 'https://api.example.com/chat/v1';\nconst MODEL = 'gpt-3.5-turbo';\nconst API_KEY = 'Bearer sk-your-dangerouslyApiKey';\n/** 🔥🔥 Its dangerously! */\n// const API_KEY = '';\n\ninterface YourMessageType {\n  role: string;\n  content: string;\n}\n\nconst App = () => {\n  const [status, setStatus] = React.useState<ThoughtChainItem['status']>();\n  const [lines, setLines] = React.useState<any[]>([]);\n  const [error, setError] = useState<Error>();\n  const [requestOptions, setRequestOptions] = useState({\n    baseURL: BASE_URL,\n    model: MODEL,\n    dangerouslyApiKey: API_KEY,\n    /** 🔥🔥 Its dangerously! */\n    // dangerouslyApiKey: API_KEY\n  });\n\n  const [agent] = useXAgent<YourMessageType>(requestOptions);\n\n  const changeBaseData = () => {\n    setRequestOptions((pre) => ({\n      baseURL: pre.baseURL === BASE_URL ? 'https://api.example.com/chat/v2' : BASE_URL,\n      model: pre.model === MODEL ? 'gpt-4' : MODEL,\n      dangerouslyApiKey:\n        pre.dangerouslyApiKey === API_KEY ? 'Bearer sk-your-new-dangerouslyApiKey' : API_KEY,\n    }));\n  };\n\n  async function request() {\n    setStatus('pending');\n    agent.request(\n      {\n        messages: [{ role: 'user', content: 'hello, who are u?' }],\n        stream: true,\n      },\n      {\n        onSuccess: () => {\n          setStatus('success');\n        },\n        onError: (error) => {\n          setStatus('error');\n          setError(error);\n        },\n        onUpdate: (msg) => {\n          setLines((pre) => [...pre, msg]);\n        },\n      },\n    );\n  }\n\n  return (\n    <Splitter>\n      <Splitter>\n        <Splitter layout=\"vertical\">\n          <Splitter.Panel>\n            <Flex gap=\"small\">\n              <Button type=\"primary\" disabled={status === 'pending'} onClick={changeBaseData}>\n                Change Request Options\n              </Button>\n              <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n                Agent Request\n              </Button>\n            </Flex>\n          </Splitter.Panel>\n          <Splitter.Panel>\n            <p>baseURL: {requestOptions.baseURL}</p>\n            <p>model: {requestOptions.model}</p>\n            <p>dangerouslyApiKey: {requestOptions.dangerouslyApiKey}</p>\n          </Splitter.Panel>\n        </Splitter>\n      </Splitter>\n      <Splitter.Panel>\n        <ThoughtChain\n          style={{ marginLeft: 16 }}\n          items={[\n            {\n              title: 'Agent Request Log',\n              status: status,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description: status === 'error' && (error?.message || 'request error'),\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/x-request/demo/model.tsx?watch=parent';import { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, XRequest } from '@ant-design/x';\nimport { Button, Descriptions, Flex, Input, Splitter, Typography } from 'antd';\nimport React, { useRef, useState } from 'react';\n\nimport type { ThoughtChainItem } from '@ant-design/x';\n\nconst { Paragraph } = Typography;\n\n/**\n * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */\n\nconst BASE_URL = 'https://api.x.ant.design/api/llm_siliconflow_qwen3-8b';\n\n/**\n * 🔔 The MODEL is fixed in the current request, please replace it with your BASE_UR and MODEL\n */\n\nconst MODEL = 'Qwen3-8B';\n\n/**\n * 🔔 the API_KEY is a placeholder indicator interface that has a built-in real API_KEY\n */\n\nconst API_KEY = 'Bearer sk-xxxxxxxxxxxxxxxxxxxx';\n\nconst exampleRequest = XRequest({\n  baseURL: BASE_URL,\n  model: MODEL,\n  dangerouslyApiKey: API_KEY,\n  /** 🔥🔥 Its dangerously! */\n});\n\nconst App = () => {\n  const [status, setStatus] = useState<string>();\n  const [thoughtChainStatus, setThoughtChainStatus] = useState<ThoughtChainItem['status']>();\n  const [lines, setLines] = useState<Record<string, string>[]>([]);\n  const [questionText, setQuestionText] = useState<string>('hello, who are u?');\n  const abortController = useRef<AbortController>(null);\n\n  const request = async () => {\n    setStatus('pending');\n    setLines([]);\n    await exampleRequest.create(\n      {\n        messages: [{ role: 'user', content: questionText }],\n        stream: true,\n      },\n      {\n        onSuccess: () => {\n          setStatus('success');\n          setThoughtChainStatus('success');\n        },\n        onError: (error) => {\n          if (error.name === 'AbortError') {\n            setStatus('abort');\n          }\n          setThoughtChainStatus('error');\n        },\n        onUpdate: (msg) => {\n          setLines((pre) => [...pre, msg]);\n        },\n        onStream: (controller) => {\n          abortController.current = controller;\n        },\n      },\n    );\n  };\n\n  const abort = () => {\n    abortController?.current?.abort?.();\n  };\n\n  return (\n    <Splitter>\n      <Splitter.Panel style={{ height: 300 }}>\n        <Splitter layout=\"vertical\">\n          <Splitter.Panel style={{ margin: '0 16px' }}>\n            <Flex gap=\"large\" vertical>\n              <Input\n                value={questionText}\n                onChange={(e) => {\n                  setQuestionText(e.target.value);\n                }}\n              />\n              <Flex gap=\"small\">\n                <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n                  Request\n                </Button>\n                <Button type=\"primary\" disabled={status !== 'pending'} onClick={abort}>\n                  Request Abort\n                </Button>\n              </Flex>\n            </Flex>\n          </Splitter.Panel>\n          <Splitter.Panel style={{ margin: 16 }}>\n            <Paragraph>{lines.length > 0 && JSON.stringify(lines)}</Paragraph>\n          </Splitter.Panel>\n        </Splitter>\n      </Splitter.Panel>\n      <Splitter.Panel style={{ marginLeft: 16 }}>\n        <ThoughtChain\n          items={[\n            {\n              title: 'Request Log',\n              status: thoughtChainStatus,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description: `request ${status}`,\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"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"}