{"version":3,"sources":["docs/react/model-use-qwen.en-US.md?type=text","docs/react/model-use-qwen.en-US.md"],"sourcesContent":["\n  import '/home/runner/work/x/x/docs/react/model-use-qwen.en-US.md?watch=parent';\n  export const texts = [{\"value\":\"This guide will introduce how to integrate the model service provided by Qwen into an application built with Ant Design X.\",\"paraId\":0},{\"value\":\"Qwenâ€™s model inference service supports the \\\"OpenAI Compatibility Mode.\\\" For more details, see the official documentation: \",\"paraId\":1},{\"value\":\"Alibaba Cloud - Tongyi Qianwen\",\"paraId\":1},{\"value\":\"How to get the baseURL - \",\"paraId\":2},{\"value\":\"https://help.aliyun.com/zh/model-studio/getting-started/what-is-model-studio\",\"paraId\":2},{\"value\":\"How to get the API Key - \",\"paraId\":2},{\"value\":\"https://help.aliyun.com/zh/model-studio/developer-reference/get-api-key\",\"paraId\":2},{\"value\":\"Model list - \",\"paraId\":2},{\"value\":\"https://help.aliyun.com/zh/model-studio/getting-started/models\",\"paraId\":2},{\"value\":\"It refers to model inference services whose API design and usage methods are consistent with OpenAIâ€™s API.\",\"paraId\":3,\"tocIndex\":0},{\"value\":\"This allows developers to use the same code and methods as OpenAI models to call these compatible services, thus reducing integration costs.\",\"paraId\":4,\"tocIndex\":0},{\"value\":\"Note: ðŸ”¥ \",\"paraId\":5,\"tocIndex\":1},{\"value\":\"dangerouslyAllowBrowser\",\"paraId\":5,\"tocIndex\":1},{\"value\":\" presents security risks. Detailed documentation on this can be found in the official \",\"paraId\":5,\"tocIndex\":1},{\"value\":\"openai-node documentation\",\"paraId\":5,\"tocIndex\":1},{\"value\":\".\",\"paraId\":5,\"tocIndex\":1},{\"value\":\"import { useXAgent, useXChat, Sender, Bubble } from '@ant-design/x';\\nimport OpenAI from 'openai';\\nimport React from 'react';\\n\\nconst client = new OpenAI({\\n  baseURL: 'https://dashscope.aliyuncs.com/compatible-mode/v1',\\n  apiKey: process.env['DASHSCOPE_API_KEY'],\\n  dangerouslyAllowBrowser: true,\\n});\\n\\nconst Demo: React.FC = () => {\\n  const [agent] = useXAgent({\\n    request: async (info, callbacks) => {\\n      const { messages, message } = info;\\n\\n      const { onSuccess, onUpdate, onError } = callbacks;\\n\\n      // current message\\n      console.log('message', message);\\n\\n      // history messages\\n      console.log('messages', messages);\\n\\n      let content: string = '';\\n\\n      try {\\n        const stream = await client.chat.completions.create({\\n          model: 'qwen-plus',\\n          // if chat context is needed, modify the array\\n          messages: [{ role: 'user', content: message }],\\n          // stream mode\\n          stream: true,\\n        });\\n\\n        for await (const chunk of stream) {\\n          content += chunk.choices[0]?.delta?.content || '';\\n\\n          onUpdate(content);\\n        }\\n\\n        onSuccess(content);\\n      } catch (error) {\\n        // handle error\\n        // onError();\\n      }\\n    },\\n  });\\n\\n  const {\\n    // use to send message\\n    onRequest,\\n    // use to render messages\\n    messages,\\n  } = useXChat({ agent });\\n\\n  const items = messages.map(({ message, id }) => ({\\n    // key is required, used to identify the message\\n    key: id,\\n    content: message,\\n  }));\\n\\n  return (\\n    <div>\\n      <Bubble.List items={items} />\\n      <Sender onSubmit={onRequest} />\\n    </div>\\n  );\\n};\\n\\nexport default Demo;\\n\",\"paraId\":6,\"tocIndex\":1},{\"value\":\"Note: ðŸ”¥ \",\"paraId\":7,\"tocIndex\":2},{\"value\":\"dangerouslyApiKey\",\"paraId\":7,\"tocIndex\":2},{\"value\":\" presents security risks. Detailed documentation on this can be found in \",\"paraId\":7,\"tocIndex\":2},{\"value\":\"Explanation\",\"paraId\":8,\"tocIndex\":2},{\"value\":\".\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"import { useXAgent, useXChat, Sender, Bubble, XRequest } from '@ant-design/x';\\nimport React from 'react';\\n\\nconst { create } = XRequest({\\n  baseURL: 'https://dashscope.aliyuncs.com/compatible-mode/v1',\\n  dangerouslyApiKey: process.env['DASHSCOPE_API_KEY'],\\n  model: 'qwen-plus',\\n});\\n\\nconst Component: React.FC = () => {\\n  const [agent] = useXAgent({\\n    request: async (info, callbacks) => {\\n      const { messages, message } = info;\\n      const { onUpdate } = callbacks;\\n\\n      // current message\\n      console.log('message', message);\\n      // messages list\\n      console.log('messages', messages);\\n\\n      let content: string = '';\\n\\n      try {\\n        create(\\n          {\\n            messages: [{ role: 'user', content: message }],\\n            stream: true,\\n          },\\n          {\\n            onSuccess: (chunks) => {\\n              console.log('sse chunk list', chunks);\\n            },\\n            onError: (error) => {\\n              console.log('error', error);\\n            },\\n            onUpdate: (chunk) => {\\n              console.log('sse object', chunk);\\n\\n              const data = JSON.parse(chunk.data);\\n\\n              content += data?.choices[0].delta.content;\\n\\n              onUpdate(content);\\n            },\\n          },\\n        );\\n      } catch (error) {}\\n    },\\n  });\\n\\n  const {\\n    // use to send message\\n    onRequest,\\n    // use to render messages\\n    messages,\\n  } = useXChat({ agent });\\n\\n  const items = messages.map(({ message, id }) => ({\\n    // key is required, used to identify the message\\n    key: id,\\n    content: message,\\n  }));\\n\\n  return (\\n    <div>\\n      <Bubble.List items={items} />\\n      <Sender onSubmit={onRequest} />\\n    </div>\\n  );\\n};\\n\\nexport default Component;\\n\",\"paraId\":9,\"tocIndex\":2}];\n  ","import ColorChunk from '/home/runner/work/x/x/.dumi/theme/builtins/ColorChunk/index.tsx';\nimport API from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/API/index.js';\nimport Badge from '/home/runner/work/x/x/.dumi/theme/builtins/Badge/index.tsx';\nimport CodeGroup from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/CodeGroup/index.js';\nimport Container from '/home/runner/work/x/x/.dumi/theme/builtins/Container/index.tsx';\nimport Previewer from '/home/runner/work/x/x/.dumi/theme/builtins/Previewer/index.tsx';\nimport SourceCode from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/SourceCode/index.js';\nimport Table from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/Table/index.js';\nimport Tree from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/Tree/index.js';\nimport Antd from '/home/runner/work/x/x/.dumi/theme/builtins/Antd.tsx';\nimport APITable from '/home/runner/work/x/x/.dumi/theme/builtins/APITable/index.tsx';\nimport Audio from '/home/runner/work/x/x/.dumi/theme/builtins/Audio/index.tsx';\nimport ColorPalettes from '/home/runner/work/x/x/.dumi/theme/builtins/ColorPalettes/index.ts';\nimport ColorPaletteTool from '/home/runner/work/x/x/.dumi/theme/builtins/ColorPaletteTool/index.ts';\nimport ColorPaletteToolDark from '/home/runner/work/x/x/.dumi/theme/builtins/ColorPaletteToolDark/index.ts';\nimport ComponentMeta from '/home/runner/work/x/x/.dumi/theme/builtins/ComponentMeta/index.tsx';\nimport ComponentOverview from '/home/runner/work/x/x/.dumi/theme/builtins/ComponentOverview/index.tsx';\nimport ComponentTokenTable from '/home/runner/work/x/x/.dumi/theme/builtins/ComponentTokenTable/index.tsx';\nimport DemoWrapper from '/home/runner/work/x/x/.dumi/theme/builtins/DemoWrapper/index.tsx';\nimport IconSearch from '/home/runner/work/x/x/.dumi/theme/builtins/IconSearch/index.tsx';\nimport ImagePreview from '/home/runner/work/x/x/.dumi/theme/builtins/ImagePreview/index.tsx';\nimport InlinePopover from '/home/runner/work/x/x/.dumi/theme/builtins/InlinePopover/index.tsx';\nimport InstallDependencies from '/home/runner/work/x/x/.dumi/theme/builtins/InstallDependencies/index.tsx';\nimport LocaleLink from '/home/runner/work/x/x/.dumi/theme/builtins/LocaleLink/index.tsx';\nimport Palette from '/home/runner/work/x/x/.dumi/theme/builtins/Palette/index.ts';\nimport ResourceCards from '/home/runner/work/x/x/.dumi/theme/builtins/ResourceCards/index.tsx';\nimport Sandpack from '/home/runner/work/x/x/.dumi/theme/builtins/Sandpack/index.tsx';\nimport TokenCompare from '/home/runner/work/x/x/.dumi/theme/builtins/TokenCompare/index.tsx';\nimport TokenTable from '/home/runner/work/x/x/.dumi/theme/builtins/TokenTable/index.tsx';\nimport VideoPlayer from '/home/runner/work/x/x/.dumi/theme/builtins/VideoPlayer/index.tsx';\nimport { DumiDemo } from 'dumi';\nimport { DumiDemoGrid } from 'dumi';\nimport { Link } from 'dumi';\n\nimport LoadingComponent from '@@/dumi/theme/loading';\nimport React, { Suspense } from 'react';\nimport { DumiPage } from 'dumi';\nimport { texts as $$contentTexts } from '/home/runner/work/x/x/docs/react/model-use-qwen.en-US.md?type=text';\n\n// export named function for fastRefresh\n// ref: https://github.com/pmmmwh/react-refresh-webpack-plugin/blob/main/docs/TROUBLESHOOTING.md#edits-always-lead-to-full-reload\nfunction DumiMarkdownContent() {\n  return (\n    <DumiPage>\n      <Suspense fallback={<LoadingComponent />}>\n        <><div className=\"markdown\"><p>{$$contentTexts[0].value}</p><p>{$$contentTexts[1].value}<LocaleLink href=\"https://help.aliyun.com/zh/model-studio/developer-reference/compatibility-of-openai-with-dashscope\" sourceType=\"a\">{$$contentTexts[2].value}</LocaleLink></p><ul><li>{$$contentTexts[3].value}<LocaleLink href=\"https://help.aliyun.com/zh/model-studio/getting-started/what-is-model-studio\" sourceType=\"a\">{$$contentTexts[4].value}</LocaleLink></li><li>{$$contentTexts[5].value}<LocaleLink href=\"https://help.aliyun.com/zh/model-studio/developer-reference/get-api-key\" sourceType=\"a\">{$$contentTexts[6].value}</LocaleLink></li><li>{$$contentTexts[7].value}<LocaleLink href=\"https://help.aliyun.com/zh/model-studio/getting-started/models\" sourceType=\"a\">{$$contentTexts[8].value}</LocaleLink></li></ul><h3 id=\"what-is-the-openai-compatibility-mode\"><LocaleLink aria-hidden=\"true\" tabIndex=\"-1\" href=\"#what-is-the-openai-compatibility-mode\" sourceType=\"a\"><span className=\"icon icon-link\" /></LocaleLink>{\"What is the \\\"OpenAI Compatibility Mode\\\"?\"}</h3><p>{$$contentTexts[9].value}</p><p>{$$contentTexts[10].value}</p><h2 id=\"using-openai-node-for-compatible-calls\"><LocaleLink aria-hidden=\"true\" tabIndex=\"-1\" href=\"#using-openai-node-for-compatible-calls\" sourceType=\"a\"><span className=\"icon icon-link\" /></LocaleLink>{\"Using openai-node for Compatible Calls\"}</h2><blockquote><p>{$$contentTexts[11].value}<code>{$$contentTexts[12].value}</code>{$$contentTexts[13].value}<LocaleLink href=\"https://github.com/openai/openai-node?tab=readme-ov-file#requirements\" sourceType=\"a\">{$$contentTexts[14].value}</LocaleLink>{$$contentTexts[15].value}</p></blockquote><SourceCode lang=\"tsx\">{$$contentTexts[16].value}</SourceCode><h2 id=\"using-api-integration\"><LocaleLink aria-hidden=\"true\" tabIndex=\"-1\" href=\"#using-api-integration\" sourceType=\"a\"><span className=\"icon icon-link\" /></LocaleLink>{\"Using API Integration\"}</h2><blockquote><p>{$$contentTexts[17].value}<code>{$$contentTexts[18].value}</code>{$$contentTexts[19].value}<LocaleLink to=\"/docs/react/dangerously-api-key\" sourceType=\"Link\">{$$contentTexts[20].value}</LocaleLink>{$$contentTexts[21].value}</p></blockquote><SourceCode lang=\"tsx\">{$$contentTexts[22].value}</SourceCode></div></>\n      </Suspense>\n    </DumiPage>\n  )\n}\n\nexport default DumiMarkdownContent;"],"names":[],"mappings":"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"}