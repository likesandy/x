(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]||[]).push([["12641128"],{"091bdbbd":function(n,e,t){"use strict";t.d(e,"__esModule",{value:!0}),t.d(e,"texts",{enumerable:!0,get:function(){return s;}}),t("66410cff");let s=[];},12641128:function(n,e,t){"use strict";t.d(e,"__esModule",{value:!0}),t.d(e,"default",{enumerable:!0,get:function(){return l;}});var s=t("777fffbe"),i=t("8090cfc0"),o=t("3a2876c3"),a=s._(t("b710171f")),r=t("3e6b097d"),l=function(){return(0,i.jsx)(o.DumiPage,{children:(0,i.jsx)(r.Suspense,{fallback:(0,i.jsx)(a.default,{}),children:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(o.DumiDemo,{demo:{id:"docs-playground-independent-demo-independent"},previewerProps:{title:"Independent",compact:!0,iframe:"600",filename:"docs/playground/independent.tsx",pkgDependencyList:{"@ant-design/tools":"^19.0.2","@ant-design/v5-patch-for-react-19":"^1.0.3","@antv/gpt-vis":"^0.5.2","@biomejs/biome":"^2.0.5","@codecov/webpack-plugin":"^1.4.0","@codesandbox/sandpack-react":"^2.19.8","@emotion/react":"^11.13.5","@emotion/server":"^11.11.0","@happy-dom/jest-environment":"^18.0.1","@ianvs/prettier-plugin-sort-imports":"^4.3.1","@madccc/duplicate-package-checker-webpack-plugin":"^1.0.0","@microflash/rehype-figure":"^2.1.1","@npmcli/run-script":"^9.0.1","@octokit/rest":"^21.0.2","@petercatai/assistant":"^2.0.13","@prettier/sync":"^0.6.1","@qixian.cs/github-contributors-list":"^2.0.2","@rc-component/father-plugin":"^2.0.4","@rc-component/np":"^1.0.3","@rc-component/trigger":"^2.2.3","@size-limit/file":"^11.1.5","@stackblitz/sdk":"^1.11.0","@testing-library/dom":"^10.4.0","@testing-library/jest-dom":"^6.5.0","@testing-library/react":"^16.0.1","@testing-library/user-event":"^14.5.2","@types/adm-zip":"^0.5.5","@types/ali-oss":"^6.16.11","@types/cli-progress":"^3.11.6","@types/fs-extra":"^11.0.4","@types/gtag.js":"^0.0.20","@types/http-server":"^0.12.4","@types/inquirer":"^9.0.7","@types/isomorphic-fetch":"^0.0.39","@types/jest":"^29.5.13","@types/jest-axe":"^3.5.9","@types/jest-environment-puppeteer":"^5.0.6","@types/jest-image-snapshot":"^6.4.0","@types/jquery":"^3.5.30","@types/jsdom":"^21.1.7","@types/lodash":"^4.17.7","@types/markdown-it":"^14.1.2","@types/minimist":"^1.2.5","@types/node":"^24.0.3","@types/ora":"^3.2.0","@types/pixelmatch":"^5.2.6","@types/pngjs":"^6.0.5","@types/prismjs":"^1.26.4","@types/progress":"^2.0.7","@types/qs":"^6.9.16","@types/react":"^19.0.2","@types/react-copy-to-clipboard":"^5.0.7","@types/react-dom":"^19.0.2","@types/react-highlight-words":"^0.20.0","@types/react-resizable":"^3.0.8","@types/semver":"^7.5.8","@types/spinnies":"^0.5.3","@types/tar":"^6.1.13","@types/throttle-debounce":"^5.0.2","@types/warning":"^3.0.3","@umijs/fabric":"^4.0.1","adm-zip":"^0.5.16","ali-oss":"^6.21.0",antd:"^5.25.1","antd-style":"^3.6.3","antd-token-previewer":"^2.0.8",axios:"^1.7.7",browserslist:"^4.23.3","browserslist-to-esbuild":"^2.1.1",chalk:"^5.4.1",cheerio:"^1.0.0","circular-dependency-plugin":"^5.2.2","cli-progress":"^3.12.0","copy-to-clipboard":"^3.3.3","cross-env":"^10.0.0","cross-fetch":"^4.0.0",crypto:"^1.0.1",dayjs:"^1.11.13",dekko:"^0.2.1",dumi:"^2.4.17","dumi-plugin-color-chunk":"^1.1.2","esbuild-loader":"^4.2.2","fast-glob":"^3.3.2",father:"^4.5.4","fetch-jsonp":"^1.3.0","fs-extra":"^11.2.0","gh-pages":"^6.1.1",glob:"^11.0.0","happy-dom":"^18.0.1",html2sketch:"^1.0.2","http-server":"^14.1.1",husky:"^9.1.6","identity-obj-proxy":"^3.0.0",immer:"^10.1.1",inquirer:"^12.1.0","is-ci":"^4.1.0","isomorphic-fetch":"^3.0.0",jest:"^30.0.3","jest-axe":"^10.0.0","jest-canvas-mock":"^2.5.2","jest-environment-node":"^30.0.0","jest-image-snapshot":"^6.4.0","jest-puppeteer":"^11.0.0",jquery:"^3.7.1",jsdom:"^26.0.0","jsonml-to-react-element":"^1.1.11","jsonml.js":"^0.1.0","lint-staged":"^16.1.2",lodash:"^4.17.21","lottie-web":"^5.12.2","lunar-typescript":"^1.7.5","lz-string":"^1.5.0","markdown-it":"^14.1.0",minimist:"^1.2.8",mockdate:"^3.0.5","node-fetch":"^3.3.2","node-notifier":"^10.0.1",open:"^10.1.0",ora:"^8.1.0",pixelmatch:"^7.1.0",pngjs:"^7.0.0",prettier:"^3.3.3","prettier-plugin-jsdoc":"^1.3.0","pretty-format":"^30.0.0",prismjs:"^1.29.0",puppeteer:"^24.0.0",qs:"^6.13.0","rc-drawer":"^8.0.0","rc-footer":"^0.6.8","rc-resize-observer":"^1.4.0","rc-virtual-list":"^3.14.5",react:"^19.0.0","react-copy-to-clipboard":"^5.1.0","react-dom":"^19.0.0","react-highlight-words":"^0.20.0","react-infinite-scroll-component":"^6.1.0","react-intersection-observer":"^9.13.1","react-intl":"^7.1.11","react-resizable":"^3.0.5","react-router-dom":"^7.0.1","react-sticky-box":"^2.0.5","regenerator-runtime":"^0.14.1","rehype-stringify":"^10.0.0",remark:"^15.0.1","remark-cli":"^12.0.1","remark-gfm":"^4.0.0","remark-lint":"^10.0.0","remark-lint-no-undefined-references":"^5.0.0","remark-preset-lint-recommended":"^7.0.0","remark-rehype":"^11.1.0","scroll-into-view-if-needed":"^3.1.0",semver:"^7.6.3",sharp:"^0.34.3","simple-git":"^3.26.0","size-limit":"^11.1.5",spinnies:"^0.5.1",tar:"^7.4.3",tsx:"^4.19.1",typedoc:"^0.28.0",typescript:"~5.8.2","vanilla-jsoneditor":"^3.0.0","web-streams-polyfill":"^4.0.0",webpack:"^5.94.0","webpack-bundle-analyzer":"^4.10.2","@ant-design/colors":"^7.1.0","@ant-design/cssinjs":"^1.21.1","@ant-design/cssinjs-utils":"^1.1.0","@ant-design/fast-color":"^2.0.6","@ant-design/icons":"^5.4.0","@babel/runtime":"^7.25.6",classnames:"^2.5.1","rc-motion":"^2.9.2","rc-util":"^5.43.0","tbox-nodejs-sdk":"^0.0.13"},pkgPeerDependencies:{antd:"^5.20.3",react:">=18.0.0","react-dom":">=18.0.0"},jsx:"var __awaiter =\n  (this && this.__awaiter) ||\n  function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P\n        ? value\n        : new P(function (resolve) {\n            resolve(value);\n          });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator['throw'](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\nimport {\n  AppstoreAddOutlined,\n  CloudUploadOutlined,\n  CommentOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n  DislikeOutlined,\n  EditOutlined,\n  EllipsisOutlined,\n  FileSearchOutlined,\n  HeartOutlined,\n  LikeOutlined,\n  PaperClipOutlined,\n  PlusOutlined,\n  ProductOutlined,\n  QuestionCircleOutlined,\n  ReloadOutlined,\n  ScheduleOutlined,\n  ShareAltOutlined,\n  SmileOutlined,\n} from '@ant-design/icons';\nimport {\n  Attachments,\n  Bubble,\n  Conversations,\n  Prompts,\n  Sender,\n  Welcome,\n  useXAgent,\n  useXChat,\n} from '@ant-design/x';\nimport { Avatar, Button, Flex, Space, Spin, message } from 'antd';\nimport { createStyles } from 'antd-style';\nimport dayjs from 'dayjs';\nimport React, { useEffect, useRef, useState } from 'react';\nconst DEFAULT_CONVERSATIONS_ITEMS = [\n  {\n    key: 'default-0',\n    label: 'What is Ant Design X?',\n    group: 'Today',\n  },\n  {\n    key: 'default-1',\n    label: 'How to quickly install and import components?',\n    group: 'Today',\n  },\n  {\n    key: 'default-2',\n    label: 'New AGI Hybrid Interface',\n    group: 'Yesterday',\n  },\n];\nconst HOT_TOPICS = {\n  key: '1',\n  label: 'Hot Topics',\n  children: [\n    {\n      key: '1-1',\n      description: 'What has Ant Design X upgraded?',\n      icon: <span style={{ color: '#f93a4a', fontWeight: 700 }}>1</span>,\n    },\n    {\n      key: '1-2',\n      description: 'New AGI Hybrid Interface',\n      icon: <span style={{ color: '#ff6565', fontWeight: 700 }}>2</span>,\n    },\n    {\n      key: '1-3',\n      description: 'What components are in Ant Design X?',\n      icon: <span style={{ color: '#ff8f1f', fontWeight: 700 }}>3</span>,\n    },\n    {\n      key: '1-4',\n      description: 'Come and discover the new design paradigm of the AI era.',\n      icon: <span style={{ color: '#00000040', fontWeight: 700 }}>4</span>,\n    },\n    {\n      key: '1-5',\n      description: 'How to quickly install and import components?',\n      icon: <span style={{ color: '#00000040', fontWeight: 700 }}>5</span>,\n    },\n  ],\n};\nconst DESIGN_GUIDE = {\n  key: '2',\n  label: 'Design Guide',\n  children: [\n    {\n      key: '2-1',\n      icon: <HeartOutlined />,\n      label: 'Intention',\n      description: 'AI understands user needs and provides solutions.',\n    },\n    {\n      key: '2-2',\n      icon: <SmileOutlined />,\n      label: 'Role',\n      description: \"AI's public persona and image\",\n    },\n    {\n      key: '2-3',\n      icon: <CommentOutlined />,\n      label: 'Chat',\n      description: 'How AI Can Express Itself in a Way Users Understand',\n    },\n    {\n      key: '2-4',\n      icon: <PaperClipOutlined />,\n      label: 'Interface',\n      description: 'AI balances \"chat\" & \"do\" behaviors.',\n    },\n  ],\n};\nconst SENDER_PROMPTS = [\n  {\n    key: '1',\n    description: 'Upgrades',\n    icon: <ScheduleOutlined />,\n  },\n  {\n    key: '2',\n    description: 'Components',\n    icon: <ProductOutlined />,\n  },\n  {\n    key: '3',\n    description: 'RICH Guide',\n    icon: <FileSearchOutlined />,\n  },\n  {\n    key: '4',\n    description: 'Installation Introduction',\n    icon: <AppstoreAddOutlined />,\n  },\n];\nconst useStyle = createStyles(({ token, css }) => {\n  return {\n    layout: css`\n      width: 100%;\n      min-width: 1000px;\n      height: 100vh;\n      display: flex;\n      background: ${token.colorBgContainer};\n      font-family: AlibabaPuHuiTi, ${token.fontFamily}, sans-serif;\n    `,\n    // sider \u6837\u5F0F\n    sider: css`\n      background: ${token.colorBgLayout}80;\n      width: 280px;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      padding: 0 12px;\n      box-sizing: border-box;\n    `,\n    logo: css`\n      display: flex;\n      align-items: center;\n      justify-content: start;\n      padding: 0 24px;\n      box-sizing: border-box;\n      gap: 8px;\n      margin: 24px 0;\n\n      span {\n        font-weight: bold;\n        color: ${token.colorText};\n        font-size: 16px;\n      }\n    `,\n    addBtn: css`\n      background: #1677ff0f;\n      border: 1px solid #1677ff34;\n      height: 40px;\n    `,\n    conversations: css`\n      flex: 1;\n      overflow-y: auto;\n      margin-top: 12px;\n      padding: 0;\n\n      .ant-conversations-list {\n        padding-inline-start: 0;\n      }\n    `,\n    siderFooter: css`\n      border-top: 1px solid ${token.colorBorderSecondary};\n      height: 40px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    `,\n    // chat list \u6837\u5F0F\n    chat: css`\n      height: 100%;\n      width: 100%;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n      padding-block: ${token.paddingLG}px;\n      gap: 16px;\n    `,\n    chatPrompt: css`\n      .ant-prompts-label {\n        color: #000000e0 !important;\n      }\n      .ant-prompts-desc {\n        color: #000000a6 !important;\n        width: 100%;\n      }\n      .ant-prompts-icon {\n        color: #000000a6 !important;\n      }\n    `,\n    chatList: css`\n      flex: 1;\n      overflow: auto;\n    `,\n    loadingMessage: css`\n      background-image: linear-gradient(90deg, #ff6b23 0%, #af3cb8 31%, #53b6ff 89%);\n      background-size: 100% 2px;\n      background-repeat: no-repeat;\n      background-position: bottom;\n    `,\n    placeholder: css`\n      padding-top: 32px;\n    `,\n    // sender \u6837\u5F0F\n    sender: css`\n      width: 100%;\n      max-width: 700px;\n      margin: 0 auto;\n    `,\n    speechButton: css`\n      font-size: 18px;\n      color: ${token.colorText} !important;\n    `,\n    senderPrompt: css`\n      width: 100%;\n      max-width: 700px;\n      margin: 0 auto;\n      color: ${token.colorText};\n    `,\n  };\n});\nconst Independent = () => {\n  const { styles } = useStyle();\n  const abortController = useRef(null);\n  // ==================== State ====================\n  const [messageHistory, setMessageHistory] = useState({});\n  const [conversations, setConversations] = useState(DEFAULT_CONVERSATIONS_ITEMS);\n  const [curConversation, setCurConversation] = useState(DEFAULT_CONVERSATIONS_ITEMS[0].key);\n  const [attachmentsOpen, setAttachmentsOpen] = useState(false);\n  const [attachedFiles, setAttachedFiles] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  /**\n   * \u{1F514} Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n   */\n  // ==================== Runtime ====================\n  const [agent] = useXAgent({\n    baseURL: 'https://api.x.ant.design/api/llm_siliconflow_deepSeek-r1-distill-1wen-7b',\n    model: 'DeepSeek-R1-Distill-Qwen-7B',\n    dangerouslyApiKey: 'Bearer sk-xxxxxxxxxxxxxxxxxxxx',\n  });\n  const loading = agent.isRequesting();\n  const { onRequest, messages, setMessages } = useXChat({\n    agent,\n    requestFallback: (_, { error }) => {\n      if (error.name === 'AbortError') {\n        return {\n          content: 'Request is aborted',\n          role: 'assistant',\n        };\n      }\n      return {\n        content: 'Request failed, please try again!',\n        role: 'assistant',\n      };\n    },\n    transformMessage: info => {\n      var _a, _b, _c, _d, _e, _f, _g;\n      const { originMessage, chunk } = info || {};\n      let currentContent = '';\n      let currentThink = '';\n      try {\n        if (\n          (chunk === null || chunk === void 0 ? void 0 : chunk.data) &&\n          !(chunk === null || chunk === void 0 ? void 0 : chunk.data.includes('DONE'))\n        ) {\n          const message = JSON.parse(chunk === null || chunk === void 0 ? void 0 : chunk.data);\n          currentThink =\n            ((_c =\n              (_b =\n                (_a = message === null || message === void 0 ? void 0 : message.choices) === null ||\n                _a === void 0\n                  ? void 0\n                  : _a[0]) === null || _b === void 0\n                ? void 0\n                : _b.delta) === null || _c === void 0\n              ? void 0\n              : _c.reasoning_content) || '';\n          currentContent =\n            ((_f =\n              (_e =\n                (_d = message === null || message === void 0 ? void 0 : message.choices) === null ||\n                _d === void 0\n                  ? void 0\n                  : _d[0]) === null || _e === void 0\n                ? void 0\n                : _e.delta) === null || _f === void 0\n              ? void 0\n              : _f.content) || '';\n        }\n      } catch (error) {\n        console.error(error);\n      }\n      let content = '';\n      if (\n        !(originMessage === null || originMessage === void 0 ? void 0 : originMessage.content) &&\n        currentThink\n      ) {\n        content = `<think>${currentThink}`;\n      } else if (\n        ((_g =\n          originMessage === null || originMessage === void 0 ? void 0 : originMessage.content) ===\n          null || _g === void 0\n          ? void 0\n          : _g.includes('<think>')) &&\n        !(originMessage === null || originMessage === void 0\n          ? void 0\n          : originMessage.content.includes('</think>')) &&\n        currentContent\n      ) {\n        content = `${originMessage === null || originMessage === void 0 ? void 0 : originMessage.content}</think>${currentContent}`;\n      } else {\n        content = `${(originMessage === null || originMessage === void 0 ? void 0 : originMessage.content) || ''}${currentThink}${currentContent}`;\n      }\n      return {\n        content: content,\n        role: 'assistant',\n      };\n    },\n    resolveAbortController: controller => {\n      abortController.current = controller;\n    },\n  });\n  // ==================== Event ====================\n  const onSubmit = val => {\n    if (!val) return;\n    if (loading) {\n      message.error('Request is in progress, please wait for the request to complete.');\n      return;\n    }\n    onRequest({\n      stream: true,\n      message: { role: 'user', content: val },\n    });\n  };\n  // ==================== Nodes ====================\n  const chatSider = (\n    <div className={styles.sider}>\n      {/* \u{1F31F} Logo */}\n      <div className={styles.logo}>\n        <img\n          src=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*eco6RrQhxbMAAAAAAAAAAAAADgCCAQ/original\"\n          draggable={false}\n          alt=\"logo\"\n          width={24}\n          height={24}\n        />\n        <span>Ant Design X</span>\n      </div>\n\n      {/* \u{1F31F} \u6DFB\u52A0\u4F1A\u8BDD */}\n      <Button\n        onClick={() => {\n          if (agent.isRequesting()) {\n            message.error(\n              'Message is Requesting, you can create a new conversation after request done or abort it right now...',\n            );\n            return;\n          }\n          const now = dayjs().valueOf().toString();\n          setConversations([\n            {\n              key: now,\n              label: `New Conversation ${conversations.length + 1}`,\n              group: 'Today',\n            },\n            ...conversations,\n          ]);\n          setCurConversation(now);\n          setMessages([]);\n        }}\n        type=\"link\"\n        className={styles.addBtn}\n        icon={<PlusOutlined />}\n      >\n        New Conversation\n      </Button>\n\n      {/* \u{1F31F} \u4F1A\u8BDD\u7BA1\u7406 */}\n      <Conversations\n        items={conversations}\n        className={styles.conversations}\n        activeKey={curConversation}\n        onActiveChange={val =>\n          __awaiter(void 0, void 0, void 0, function* () {\n            var _a;\n            (_a = abortController.current) === null || _a === void 0 ? void 0 : _a.abort();\n            // The abort execution will trigger an asynchronous requestFallback, which may lead to timing issues.\n            // In future versions, the sessionId capability will be added to resolve this problem.\n            setTimeout(() => {\n              setCurConversation(val);\n              setMessages(\n                (messageHistory === null || messageHistory === void 0\n                  ? void 0\n                  : messageHistory[val]) || [],\n              );\n            }, 100);\n          })\n        }\n        groupable\n        styles={{ item: { padding: '0 8px' } }}\n        menu={conversation => ({\n          items: [\n            {\n              label: 'Rename',\n              key: 'rename',\n              icon: <EditOutlined />,\n            },\n            {\n              label: 'Delete',\n              key: 'delete',\n              icon: <DeleteOutlined />,\n              danger: true,\n              onClick: () => {\n                var _a;\n                const newList = conversations.filter(item => item.key !== conversation.key);\n                const newKey =\n                  (_a = newList === null || newList === void 0 ? void 0 : newList[0]) === null ||\n                  _a === void 0\n                    ? void 0\n                    : _a.key;\n                setConversations(newList);\n                // The delete operation modifies curConversation and triggers onActiveChange, so it needs to be executed with a delay to ensure it overrides correctly at the end.\n                // This feature will be fixed in a future version.\n                setTimeout(() => {\n                  if (conversation.key === curConversation) {\n                    setCurConversation(newKey);\n                    setMessages(\n                      (messageHistory === null || messageHistory === void 0\n                        ? void 0\n                        : messageHistory[newKey]) || [],\n                    );\n                  }\n                }, 200);\n              },\n            },\n          ],\n        })}\n      />\n\n      <div className={styles.siderFooter}>\n        <Avatar size={24} />\n        <Button type=\"text\" icon={<QuestionCircleOutlined />} />\n      </div>\n    </div>\n  );\n  const chatList = (\n    <div className={styles.chatList}>\n      {(messages === null || messages === void 0 ? void 0 : messages.length) ? (\n        /* \u{1F31F} \u6D88\u606F\u5217\u8868 */\n        <Bubble.List\n          items={\n            messages === null || messages === void 0\n              ? void 0\n              : messages.map(i =>\n                  Object.assign(Object.assign({}, i.message), {\n                    classNames: {\n                      content: i.status === 'loading' ? styles.loadingMessage : '',\n                    },\n                    typing:\n                      i.status === 'loading' ? { step: 5, interval: 20, suffix: <>\u{1F497}</> } : false,\n                  }),\n                )\n          }\n          style={{ height: '100%', paddingInline: 'calc(calc(100% - 700px) /2)' }}\n          roles={{\n            assistant: {\n              placement: 'start',\n              footer: (\n                <div style={{ display: 'flex' }}>\n                  <Button type=\"text\" size=\"small\" icon={<ReloadOutlined />} />\n                  <Button type=\"text\" size=\"small\" icon={<CopyOutlined />} />\n                  <Button type=\"text\" size=\"small\" icon={<LikeOutlined />} />\n                  <Button type=\"text\" size=\"small\" icon={<DislikeOutlined />} />\n                </div>\n              ),\n              loadingRender: () => <Spin size=\"small\" />,\n            },\n            user: { placement: 'end' },\n          }}\n        />\n      ) : (\n        <Space\n          direction=\"vertical\"\n          size={16}\n          style={{ paddingInline: 'calc(calc(100% - 700px) /2)' }}\n          className={styles.placeholder}\n        >\n          <Welcome\n            variant=\"borderless\"\n            icon=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\"\n            title=\"Hello, I'm Ant Design X\"\n            description=\"Base on Ant Design, AGI product interface solution, create a better intelligent vision~\"\n            extra={\n              <Space>\n                <Button icon={<ShareAltOutlined />} />\n                <Button icon={<EllipsisOutlined />} />\n              </Space>\n            }\n          />\n          <Flex gap={16}>\n            <Prompts\n              items={[HOT_TOPICS]}\n              styles={{\n                list: { height: '100%' },\n                item: {\n                  flex: 1,\n                  backgroundImage: 'linear-gradient(123deg, #e5f4ff 0%, #efe7ff 100%)',\n                  borderRadius: 12,\n                  border: 'none',\n                },\n                subItem: { padding: 0, background: 'transparent' },\n              }}\n              onItemClick={info => {\n                onSubmit(info.data.description);\n              }}\n              className={styles.chatPrompt}\n            />\n\n            <Prompts\n              items={[DESIGN_GUIDE]}\n              styles={{\n                item: {\n                  flex: 1,\n                  backgroundImage: 'linear-gradient(123deg, #e5f4ff 0%, #efe7ff 100%)',\n                  borderRadius: 12,\n                  border: 'none',\n                },\n                subItem: { background: '#ffffffa6' },\n              }}\n              onItemClick={info => {\n                onSubmit(info.data.description);\n              }}\n              className={styles.chatPrompt}\n            />\n          </Flex>\n        </Space>\n      )}\n    </div>\n  );\n  const senderHeader = (\n    <Sender.Header\n      title=\"Upload File\"\n      open={attachmentsOpen}\n      onOpenChange={setAttachmentsOpen}\n      styles={{ content: { padding: 0 } }}\n    >\n      <Attachments\n        beforeUpload={() => false}\n        items={attachedFiles}\n        onChange={info => setAttachedFiles(info.fileList)}\n        placeholder={type =>\n          type === 'drop'\n            ? { title: 'Drop file here' }\n            : {\n                icon: <CloudUploadOutlined />,\n                title: 'Upload files',\n                description: 'Click or drag files to this area to upload',\n              }\n        }\n      />\n    </Sender.Header>\n  );\n  const chatSender = (\n    <>\n      {/* \u{1F31F} \u63D0\u793A\u8BCD */}\n      <Prompts\n        items={SENDER_PROMPTS}\n        onItemClick={info => {\n          onSubmit(info.data.description);\n        }}\n        styles={{\n          item: { padding: '6px 12px' },\n        }}\n        className={styles.senderPrompt}\n      />\n      {/* \u{1F31F} \u8F93\u5165\u6846 */}\n      <Sender\n        value={inputValue}\n        header={senderHeader}\n        onSubmit={() => {\n          onSubmit(inputValue);\n          setInputValue('');\n        }}\n        onChange={setInputValue}\n        onCancel={() => {\n          var _a;\n          (_a = abortController.current) === null || _a === void 0 ? void 0 : _a.abort();\n        }}\n        prefix={\n          <Button\n            type=\"text\"\n            icon={<PaperClipOutlined style={{ fontSize: 18 }} />}\n            onClick={() => setAttachmentsOpen(!attachmentsOpen)}\n          />\n        }\n        loading={loading}\n        className={styles.sender}\n        allowSpeech\n        actions={(_, info) => {\n          const { SendButton, LoadingButton, SpeechButton } = info.components;\n          return (\n            <Flex gap={4}>\n              <SpeechButton className={styles.speechButton} />\n              {loading ? <LoadingButton type=\"default\" /> : <SendButton type=\"primary\" />}\n            </Flex>\n          );\n        }}\n        placeholder=\"Ask or input / use skills\"\n      />\n    </>\n  );\n  useEffect(() => {\n    // history mock\n    if (messages === null || messages === void 0 ? void 0 : messages.length) {\n      setMessageHistory(prev =>\n        Object.assign(Object.assign({}, prev), { [curConversation]: messages }),\n      );\n    }\n  }, [messages]);\n  // ==================== Render =================\n  return (\n    <div className={styles.layout}>\n      {chatSider}\n\n      <div className={styles.chat}>\n        {chatList}\n        {chatSender}\n      </div>\n    </div>\n  );\n};\nexport default Independent;\n"}})})})});};}}]);
//# sourceMappingURL=12641128-async.18693a69.js.map