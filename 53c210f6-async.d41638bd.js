(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]||[]).push([["53c210f6"],{"53c210f6":function(e,t,n){"use strict";n.d(t,"__esModule",{value:!0}),n.d(t,"default",{enumerable:!0,get:function(){return m;}});var s=n("777fffbe"),r=n("8090cfc0"),a=s._(n("33c468da")),i=s._(n("a4c80678")),o=s._(n("f36507e8")),c=s._(n("ddea4080")),l=s._(n("b710171f")),p=n("3e6b097d"),d=n("3a2876c3"),u=n("891f9e2a"),m=function(){return(0,r.jsx)(d.DumiPage,{children:(0,r.jsx)(p.Suspense,{fallback:(0,r.jsx)(l.default,{}),children:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("div",{className:"markdown",children:[(0,r.jsxs)("h2",{id:"\u4F55\u65F6\u4F7F\u7528",children:[(0,r.jsx)(c.default,{"aria-hidden":"true",tabIndex:"-1",href:"#\u4F55\u65F6\u4F7F\u7528",sourceType:"a",children:(0,r.jsx)("span",{className:"icon icon-link"})}),"\u4F55\u65F6\u4F7F\u7528"]}),(0,r.jsx)("p",{children:u.texts[0].value}),(0,r.jsxs)("h2",{id:"\u4EE3\u7801\u6F14\u793A",children:[(0,r.jsx)(c.default,{"aria-hidden":"true",tabIndex:"-1",href:"#\u4EE3\u7801\u6F14\u793A",sourceType:"a",children:(0,r.jsx)("span",{className:"icon icon-link"})}),"\u4EE3\u7801\u6F14\u793A"]})]}),(0,r.jsx)(o.default,{items:[{demo:{id:"components-use-x-agent-demo-preset"},previewerProps:{title:"\u9884\u8BBE\u8BF7\u6C42",filename:"components/use-x-agent/demo/preset.tsx",pkgDependencyList:{"@ant-design/tools":"^19.0.2","@ant-design/v5-patch-for-react-19":"^1.0.3","@antv/gpt-vis":"^0.5.2","@biomejs/biome":"^2.0.5","@codecov/webpack-plugin":"^1.4.0","@codesandbox/sandpack-react":"^2.19.8","@emotion/react":"^11.13.5","@emotion/server":"^11.11.0","@happy-dom/jest-environment":"^18.0.1","@ianvs/prettier-plugin-sort-imports":"^4.3.1","@madccc/duplicate-package-checker-webpack-plugin":"^1.0.0","@microflash/rehype-figure":"^2.1.1","@npmcli/run-script":"^9.0.1","@octokit/rest":"^21.0.2","@petercatai/assistant":"^2.0.13","@prettier/sync":"^0.6.1","@qixian.cs/github-contributors-list":"^2.0.2","@rc-component/father-plugin":"^2.0.4","@rc-component/np":"^1.0.3","@rc-component/trigger":"^2.2.3","@size-limit/file":"^11.1.5","@stackblitz/sdk":"^1.11.0","@testing-library/dom":"^10.4.0","@testing-library/jest-dom":"^6.5.0","@testing-library/react":"^16.0.1","@testing-library/user-event":"^14.5.2","@types/adm-zip":"^0.5.5","@types/ali-oss":"^6.16.11","@types/cli-progress":"^3.11.6","@types/fs-extra":"^11.0.4","@types/gtag.js":"^0.0.20","@types/http-server":"^0.12.4","@types/inquirer":"^9.0.7","@types/isomorphic-fetch":"^0.0.39","@types/jest":"^29.5.13","@types/jest-axe":"^3.5.9","@types/jest-environment-puppeteer":"^5.0.6","@types/jest-image-snapshot":"^6.4.0","@types/jquery":"^3.5.30","@types/jsdom":"^21.1.7","@types/lodash":"^4.17.7","@types/markdown-it":"^14.1.2","@types/minimist":"^1.2.5","@types/node":"^24.0.3","@types/ora":"^3.2.0","@types/pixelmatch":"^5.2.6","@types/pngjs":"^6.0.5","@types/prismjs":"^1.26.4","@types/progress":"^2.0.7","@types/qs":"^6.9.16","@types/react":"^19.0.2","@types/react-copy-to-clipboard":"^5.0.7","@types/react-dom":"^19.0.2","@types/react-highlight-words":"^0.20.0","@types/react-resizable":"^3.0.8","@types/semver":"^7.5.8","@types/spinnies":"^0.5.3","@types/tar":"^6.1.13","@types/throttle-debounce":"^5.0.2","@types/warning":"^3.0.3","@umijs/fabric":"^4.0.1","adm-zip":"^0.5.16","ali-oss":"^6.21.0",antd:"^5.25.1","antd-style":"^3.6.3","antd-token-previewer":"^2.0.8",axios:"^1.7.7",browserslist:"^4.23.3","browserslist-to-esbuild":"^2.1.1",chalk:"^5.4.1",cheerio:"^1.0.0","circular-dependency-plugin":"^5.2.2","cli-progress":"^3.12.0","copy-to-clipboard":"^3.3.3","cross-env":"^10.0.0","cross-fetch":"^4.0.0",crypto:"^1.0.1",dayjs:"^1.11.13",dekko:"^0.2.1",dumi:"^2.4.17","dumi-plugin-color-chunk":"^1.1.2","esbuild-loader":"^4.2.2","fast-glob":"^3.3.2",father:"^4.5.4","fetch-jsonp":"^1.3.0","fs-extra":"^11.2.0","gh-pages":"^6.1.1",glob:"^11.0.0","happy-dom":"^18.0.1",html2sketch:"^1.0.2","http-server":"^14.1.1",husky:"^9.1.6","identity-obj-proxy":"^3.0.0",immer:"^10.1.1",inquirer:"^12.1.0","is-ci":"^4.1.0","isomorphic-fetch":"^3.0.0",jest:"^30.0.3","jest-axe":"^10.0.0","jest-canvas-mock":"^2.5.2","jest-environment-node":"^30.0.0","jest-image-snapshot":"^6.4.0","jest-puppeteer":"^11.0.0",jquery:"^3.7.1",jsdom:"^26.0.0","jsonml-to-react-element":"^1.1.11","jsonml.js":"^0.1.0","lint-staged":"^16.1.2",lodash:"^4.17.21","lottie-web":"^5.12.2","lunar-typescript":"^1.7.5","lz-string":"^1.5.0","markdown-it":"^14.1.0",minimist:"^1.2.8",mockdate:"^3.0.5","node-fetch":"^3.3.2","node-notifier":"^10.0.1",open:"^10.1.0",ora:"^8.1.0",pixelmatch:"^7.1.0",pngjs:"^7.0.0",prettier:"^3.3.3","prettier-plugin-jsdoc":"^1.3.0","pretty-format":"^30.0.0",prismjs:"^1.29.0",puppeteer:"^24.0.0",qs:"^6.13.0","rc-drawer":"^8.0.0","rc-footer":"^0.6.8","rc-resize-observer":"^1.4.0","rc-virtual-list":"^3.14.5",react:"^19.0.0","react-copy-to-clipboard":"^5.1.0","react-dom":"^19.0.0","react-highlight-words":"^0.20.0","react-infinite-scroll-component":"^6.1.0","react-intersection-observer":"^9.13.1","react-intl":"^7.1.11","react-resizable":"^3.0.5","react-router-dom":"^7.0.1","react-sticky-box":"^2.0.5","regenerator-runtime":"^0.14.1","rehype-stringify":"^10.0.0",remark:"^15.0.1","remark-cli":"^12.0.1","remark-gfm":"^4.0.0","remark-lint":"^10.0.0","remark-lint-no-undefined-references":"^5.0.0","remark-preset-lint-recommended":"^7.0.0","remark-rehype":"^11.1.0","scroll-into-view-if-needed":"^3.1.0",semver:"^7.6.3",sharp:"^0.34.3","simple-git":"^3.26.0","size-limit":"^11.1.5",spinnies:"^0.5.1",tar:"^7.4.3",tsx:"^4.19.1",typedoc:"^0.28.0",typescript:"~5.8.2","vanilla-jsoneditor":"^3.0.0","web-streams-polyfill":"^4.0.0",webpack:"^5.94.0","webpack-bundle-analyzer":"^4.10.2","@ant-design/colors":"^7.1.0","@ant-design/cssinjs":"^1.21.1","@ant-design/cssinjs-utils":"^1.1.0","@ant-design/fast-color":"^2.0.6","@ant-design/icons":"^5.4.0","@babel/runtime":"^7.25.6",classnames:"^2.5.1","rc-motion":"^2.9.2","rc-util":"^5.43.0","tbox-nodejs-sdk":"^0.0.13"},pkgPeerDependencies:{antd:"^5.20.3",react:">=18.0.0","react-dom":">=18.0.0"},jsx:"var __awaiter =\n  (this && this.__awaiter) ||\n  function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P\n        ? value\n        : new P(function (resolve) {\n            resolve(value);\n          });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator['throw'](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\nimport { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, useXAgent } from '@ant-design/x';\nimport { Button, Descriptions, Splitter } from 'antd';\nimport React from 'react';\n/**\n * \u{1F514} Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */\nconst BASE_URL = 'https://api.example.com';\nconst PATH = '/chat';\nconst MODEL = 'gpt-3.5-turbo';\nconst App = () => {\n  const [status, setStatus] = React.useState();\n  const [lines, setLines] = React.useState([]);\n  const [agent] = useXAgent({\n    baseURL: BASE_URL + PATH,\n    model: MODEL,\n    // dangerouslyApiKey: API_KEY\n  });\n  function request() {\n    return __awaiter(this, void 0, void 0, function* () {\n      setStatus('pending');\n      agent.request(\n        {\n          messages: [{ role: 'user', content: 'hello, who are u?' }],\n          stream: true,\n        },\n        {\n          onSuccess: chunks => {\n            setStatus('success');\n            console.log('onSuccess', chunks);\n          },\n          onError: error => {\n            setStatus('error');\n            console.error('onError', error);\n          },\n          onUpdate: chunk => {\n            setLines(pre => [...pre, chunk]);\n            console.log('onUpdate', chunk);\n          },\n        },\n      );\n    });\n  }\n  return (\n    <Splitter>\n      <Splitter.Panel>\n        <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n          Agent Request\n        </Button>\n      </Splitter.Panel>\n      <Splitter.Panel>\n        <ThoughtChain\n          style={{ marginLeft: 16 }}\n          items={[\n            {\n              title: 'Agent Request Log',\n              status: status,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description:\n                status === 'error' &&\n                agent.config.baseURL === BASE_URL + PATH &&\n                'Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.',\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\nexport default App;\n",description:"<p>\u6211\u4EEC\u5C06 XRequest \u4F5C\u4E3A\u9884\u8BBE\u8BF7\u6C42\uFF0C\u4EC5\u9700\u914D\u7F6E <code>baseURL</code>\u3001<code>model</code> \u5373\u53EF\u3002</p>"}},{demo:{id:"components-use-x-agent-demo-requestparams"},previewerProps:{title:"\u81EA\u5B9A\u4E49\u5165\u53C2",filename:"components/use-x-agent/demo/requestParams.tsx",pkgDependencyList:{"@ant-design/tools":"^19.0.2","@ant-design/v5-patch-for-react-19":"^1.0.3","@antv/gpt-vis":"^0.5.2","@biomejs/biome":"^2.0.5","@codecov/webpack-plugin":"^1.4.0","@codesandbox/sandpack-react":"^2.19.8","@emotion/react":"^11.13.5","@emotion/server":"^11.11.0","@happy-dom/jest-environment":"^18.0.1","@ianvs/prettier-plugin-sort-imports":"^4.3.1","@madccc/duplicate-package-checker-webpack-plugin":"^1.0.0","@microflash/rehype-figure":"^2.1.1","@npmcli/run-script":"^9.0.1","@octokit/rest":"^21.0.2","@petercatai/assistant":"^2.0.13","@prettier/sync":"^0.6.1","@qixian.cs/github-contributors-list":"^2.0.2","@rc-component/father-plugin":"^2.0.4","@rc-component/np":"^1.0.3","@rc-component/trigger":"^2.2.3","@size-limit/file":"^11.1.5","@stackblitz/sdk":"^1.11.0","@testing-library/dom":"^10.4.0","@testing-library/jest-dom":"^6.5.0","@testing-library/react":"^16.0.1","@testing-library/user-event":"^14.5.2","@types/adm-zip":"^0.5.5","@types/ali-oss":"^6.16.11","@types/cli-progress":"^3.11.6","@types/fs-extra":"^11.0.4","@types/gtag.js":"^0.0.20","@types/http-server":"^0.12.4","@types/inquirer":"^9.0.7","@types/isomorphic-fetch":"^0.0.39","@types/jest":"^29.5.13","@types/jest-axe":"^3.5.9","@types/jest-environment-puppeteer":"^5.0.6","@types/jest-image-snapshot":"^6.4.0","@types/jquery":"^3.5.30","@types/jsdom":"^21.1.7","@types/lodash":"^4.17.7","@types/markdown-it":"^14.1.2","@types/minimist":"^1.2.5","@types/node":"^24.0.3","@types/ora":"^3.2.0","@types/pixelmatch":"^5.2.6","@types/pngjs":"^6.0.5","@types/prismjs":"^1.26.4","@types/progress":"^2.0.7","@types/qs":"^6.9.16","@types/react":"^19.0.2","@types/react-copy-to-clipboard":"^5.0.7","@types/react-dom":"^19.0.2","@types/react-highlight-words":"^0.20.0","@types/react-resizable":"^3.0.8","@types/semver":"^7.5.8","@types/spinnies":"^0.5.3","@types/tar":"^6.1.13","@types/throttle-debounce":"^5.0.2","@types/warning":"^3.0.3","@umijs/fabric":"^4.0.1","adm-zip":"^0.5.16","ali-oss":"^6.21.0",antd:"^5.25.1","antd-style":"^3.6.3","antd-token-previewer":"^2.0.8",axios:"^1.7.7",browserslist:"^4.23.3","browserslist-to-esbuild":"^2.1.1",chalk:"^5.4.1",cheerio:"^1.0.0","circular-dependency-plugin":"^5.2.2","cli-progress":"^3.12.0","copy-to-clipboard":"^3.3.3","cross-env":"^10.0.0","cross-fetch":"^4.0.0",crypto:"^1.0.1",dayjs:"^1.11.13",dekko:"^0.2.1",dumi:"^2.4.17","dumi-plugin-color-chunk":"^1.1.2","esbuild-loader":"^4.2.2","fast-glob":"^3.3.2",father:"^4.5.4","fetch-jsonp":"^1.3.0","fs-extra":"^11.2.0","gh-pages":"^6.1.1",glob:"^11.0.0","happy-dom":"^18.0.1",html2sketch:"^1.0.2","http-server":"^14.1.1",husky:"^9.1.6","identity-obj-proxy":"^3.0.0",immer:"^10.1.1",inquirer:"^12.1.0","is-ci":"^4.1.0","isomorphic-fetch":"^3.0.0",jest:"^30.0.3","jest-axe":"^10.0.0","jest-canvas-mock":"^2.5.2","jest-environment-node":"^30.0.0","jest-image-snapshot":"^6.4.0","jest-puppeteer":"^11.0.0",jquery:"^3.7.1",jsdom:"^26.0.0","jsonml-to-react-element":"^1.1.11","jsonml.js":"^0.1.0","lint-staged":"^16.1.2",lodash:"^4.17.21","lottie-web":"^5.12.2","lunar-typescript":"^1.7.5","lz-string":"^1.5.0","markdown-it":"^14.1.0",minimist:"^1.2.8",mockdate:"^3.0.5","node-fetch":"^3.3.2","node-notifier":"^10.0.1",open:"^10.1.0",ora:"^8.1.0",pixelmatch:"^7.1.0",pngjs:"^7.0.0",prettier:"^3.3.3","prettier-plugin-jsdoc":"^1.3.0","pretty-format":"^30.0.0",prismjs:"^1.29.0",puppeteer:"^24.0.0",qs:"^6.13.0","rc-drawer":"^8.0.0","rc-footer":"^0.6.8","rc-resize-observer":"^1.4.0","rc-virtual-list":"^3.14.5",react:"^19.0.0","react-copy-to-clipboard":"^5.1.0","react-dom":"^19.0.0","react-highlight-words":"^0.20.0","react-infinite-scroll-component":"^6.1.0","react-intersection-observer":"^9.13.1","react-intl":"^7.1.11","react-resizable":"^3.0.5","react-router-dom":"^7.0.1","react-sticky-box":"^2.0.5","regenerator-runtime":"^0.14.1","rehype-stringify":"^10.0.0",remark:"^15.0.1","remark-cli":"^12.0.1","remark-gfm":"^4.0.0","remark-lint":"^10.0.0","remark-lint-no-undefined-references":"^5.0.0","remark-preset-lint-recommended":"^7.0.0","remark-rehype":"^11.1.0","scroll-into-view-if-needed":"^3.1.0",semver:"^7.6.3",sharp:"^0.34.3","simple-git":"^3.26.0","size-limit":"^11.1.5",spinnies:"^0.5.1",tar:"^7.4.3",tsx:"^4.19.1",typedoc:"^0.28.0",typescript:"~5.8.2","vanilla-jsoneditor":"^3.0.0","web-streams-polyfill":"^4.0.0",webpack:"^5.94.0","webpack-bundle-analyzer":"^4.10.2","@ant-design/colors":"^7.1.0","@ant-design/cssinjs":"^1.21.1","@ant-design/cssinjs-utils":"^1.1.0","@ant-design/fast-color":"^2.0.6","@ant-design/icons":"^5.4.0","@babel/runtime":"^7.25.6",classnames:"^2.5.1","rc-motion":"^2.9.2","rc-util":"^5.43.0","tbox-nodejs-sdk":"^0.0.13"},pkgPeerDependencies:{antd:"^5.20.3",react:">=18.0.0","react-dom":">=18.0.0"},jsx:"var __awaiter =\n  (this && this.__awaiter) ||\n  function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P\n        ? value\n        : new P(function (resolve) {\n            resolve(value);\n          });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator['throw'](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\nimport { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, useXAgent } from '@ant-design/x';\nimport { Button, Descriptions, Splitter } from 'antd';\nimport React from 'react';\nconst BASE_URL = 'https://api.example.com/agent';\nconst App = () => {\n  const [status, setStatus] = React.useState();\n  const [lines, setLines] = React.useState([]);\n  const [agent] = useXAgent({\n    baseURL: BASE_URL,\n  });\n  function request() {\n    return __awaiter(this, void 0, void 0, function* () {\n      setStatus('pending');\n      agent.request(\n        {\n          agentId: 1234,\n          query: 'Search for the latest technology news',\n          stream: true,\n        },\n        {\n          onSuccess: messages => {\n            setStatus('success');\n            console.log('onSuccess', messages);\n          },\n          onError: error => {\n            setStatus('error');\n            console.error('onError', error);\n          },\n          onUpdate: msg => {\n            setLines(pre => [...pre, msg]);\n            console.log('onUpdate', msg);\n          },\n        },\n      );\n    });\n  }\n  return (\n    <Splitter>\n      <Splitter.Panel>\n        <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n          Agent Request\n        </Button>\n      </Splitter.Panel>\n      <Splitter.Panel>\n        <ThoughtChain\n          style={{ marginLeft: 16 }}\n          items={[\n            {\n              title: 'Agent Request Log',\n              status: status,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description:\n                status === 'error' &&\n                agent.config.baseURL === BASE_URL &&\n                'Please replace the BASE_URL,RequestParams with your own values.',\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\nexport default App;\n",description:"<p>\u81EA\u5B9A\u4E49 <code>RequestParams</code>\uFF0C\u53EF\u4EE5\u5411\u667A\u80FD\u4F53\u7B49\u53D1\u9001\u6D88\u606F\u3002</p>"}},{demo:{id:"components-use-x-agent-demo-custom"},previewerProps:{title:"\u81EA\u5B9A\u4E49\u8BF7\u6C42",filename:"components/use-x-agent/demo/custom.tsx",pkgDependencyList:{"@ant-design/tools":"^19.0.2","@ant-design/v5-patch-for-react-19":"^1.0.3","@antv/gpt-vis":"^0.5.2","@biomejs/biome":"^2.0.5","@codecov/webpack-plugin":"^1.4.0","@codesandbox/sandpack-react":"^2.19.8","@emotion/react":"^11.13.5","@emotion/server":"^11.11.0","@happy-dom/jest-environment":"^18.0.1","@ianvs/prettier-plugin-sort-imports":"^4.3.1","@madccc/duplicate-package-checker-webpack-plugin":"^1.0.0","@microflash/rehype-figure":"^2.1.1","@npmcli/run-script":"^9.0.1","@octokit/rest":"^21.0.2","@petercatai/assistant":"^2.0.13","@prettier/sync":"^0.6.1","@qixian.cs/github-contributors-list":"^2.0.2","@rc-component/father-plugin":"^2.0.4","@rc-component/np":"^1.0.3","@rc-component/trigger":"^2.2.3","@size-limit/file":"^11.1.5","@stackblitz/sdk":"^1.11.0","@testing-library/dom":"^10.4.0","@testing-library/jest-dom":"^6.5.0","@testing-library/react":"^16.0.1","@testing-library/user-event":"^14.5.2","@types/adm-zip":"^0.5.5","@types/ali-oss":"^6.16.11","@types/cli-progress":"^3.11.6","@types/fs-extra":"^11.0.4","@types/gtag.js":"^0.0.20","@types/http-server":"^0.12.4","@types/inquirer":"^9.0.7","@types/isomorphic-fetch":"^0.0.39","@types/jest":"^29.5.13","@types/jest-axe":"^3.5.9","@types/jest-environment-puppeteer":"^5.0.6","@types/jest-image-snapshot":"^6.4.0","@types/jquery":"^3.5.30","@types/jsdom":"^21.1.7","@types/lodash":"^4.17.7","@types/markdown-it":"^14.1.2","@types/minimist":"^1.2.5","@types/node":"^24.0.3","@types/ora":"^3.2.0","@types/pixelmatch":"^5.2.6","@types/pngjs":"^6.0.5","@types/prismjs":"^1.26.4","@types/progress":"^2.0.7","@types/qs":"^6.9.16","@types/react":"^19.0.2","@types/react-copy-to-clipboard":"^5.0.7","@types/react-dom":"^19.0.2","@types/react-highlight-words":"^0.20.0","@types/react-resizable":"^3.0.8","@types/semver":"^7.5.8","@types/spinnies":"^0.5.3","@types/tar":"^6.1.13","@types/throttle-debounce":"^5.0.2","@types/warning":"^3.0.3","@umijs/fabric":"^4.0.1","adm-zip":"^0.5.16","ali-oss":"^6.21.0",antd:"^5.25.1","antd-style":"^3.6.3","antd-token-previewer":"^2.0.8",axios:"^1.7.7",browserslist:"^4.23.3","browserslist-to-esbuild":"^2.1.1",chalk:"^5.4.1",cheerio:"^1.0.0","circular-dependency-plugin":"^5.2.2","cli-progress":"^3.12.0","copy-to-clipboard":"^3.3.3","cross-env":"^10.0.0","cross-fetch":"^4.0.0",crypto:"^1.0.1",dayjs:"^1.11.13",dekko:"^0.2.1",dumi:"^2.4.17","dumi-plugin-color-chunk":"^1.1.2","esbuild-loader":"^4.2.2","fast-glob":"^3.3.2",father:"^4.5.4","fetch-jsonp":"^1.3.0","fs-extra":"^11.2.0","gh-pages":"^6.1.1",glob:"^11.0.0","happy-dom":"^18.0.1",html2sketch:"^1.0.2","http-server":"^14.1.1",husky:"^9.1.6","identity-obj-proxy":"^3.0.0",immer:"^10.1.1",inquirer:"^12.1.0","is-ci":"^4.1.0","isomorphic-fetch":"^3.0.0",jest:"^30.0.3","jest-axe":"^10.0.0","jest-canvas-mock":"^2.5.2","jest-environment-node":"^30.0.0","jest-image-snapshot":"^6.4.0","jest-puppeteer":"^11.0.0",jquery:"^3.7.1",jsdom:"^26.0.0","jsonml-to-react-element":"^1.1.11","jsonml.js":"^0.1.0","lint-staged":"^16.1.2",lodash:"^4.17.21","lottie-web":"^5.12.2","lunar-typescript":"^1.7.5","lz-string":"^1.5.0","markdown-it":"^14.1.0",minimist:"^1.2.8",mockdate:"^3.0.5","node-fetch":"^3.3.2","node-notifier":"^10.0.1",open:"^10.1.0",ora:"^8.1.0",pixelmatch:"^7.1.0",pngjs:"^7.0.0",prettier:"^3.3.3","prettier-plugin-jsdoc":"^1.3.0","pretty-format":"^30.0.0",prismjs:"^1.29.0",puppeteer:"^24.0.0",qs:"^6.13.0","rc-drawer":"^8.0.0","rc-footer":"^0.6.8","rc-resize-observer":"^1.4.0","rc-virtual-list":"^3.14.5",react:"^19.0.0","react-copy-to-clipboard":"^5.1.0","react-dom":"^19.0.0","react-highlight-words":"^0.20.0","react-infinite-scroll-component":"^6.1.0","react-intersection-observer":"^9.13.1","react-intl":"^7.1.11","react-resizable":"^3.0.5","react-router-dom":"^7.0.1","react-sticky-box":"^2.0.5","regenerator-runtime":"^0.14.1","rehype-stringify":"^10.0.0",remark:"^15.0.1","remark-cli":"^12.0.1","remark-gfm":"^4.0.0","remark-lint":"^10.0.0","remark-lint-no-undefined-references":"^5.0.0","remark-preset-lint-recommended":"^7.0.0","remark-rehype":"^11.1.0","scroll-into-view-if-needed":"^3.1.0",semver:"^7.6.3",sharp:"^0.34.3","simple-git":"^3.26.0","size-limit":"^11.1.5",spinnies:"^0.5.1",tar:"^7.4.3",tsx:"^4.19.1",typedoc:"^0.28.0",typescript:"~5.8.2","vanilla-jsoneditor":"^3.0.0","web-streams-polyfill":"^4.0.0",webpack:"^5.94.0","webpack-bundle-analyzer":"^4.10.2","@ant-design/colors":"^7.1.0","@ant-design/cssinjs":"^1.21.1","@ant-design/cssinjs-utils":"^1.1.0","@ant-design/fast-color":"^2.0.6","@ant-design/icons":"^5.4.0","@babel/runtime":"^7.25.6",classnames:"^2.5.1","rc-motion":"^2.9.2","rc-util":"^5.43.0","tbox-nodejs-sdk":"^0.0.13"},pkgPeerDependencies:{antd:"^5.20.3",react:">=18.0.0","react-dom":">=18.0.0"},jsx:'import { useXAgent } from \'@ant-design/x\';\nimport { Button, Divider, Form, Input, Typography } from \'antd\';\nimport React from \'react\';\nconst App = () => {\n  const [lines, setLines] = React.useState([]);\n  const [form] = Form.useForm();\n  const log = text => {\n    setLines(ori => [...ori, text]);\n  };\n  const [agent] = useXAgent({\n    request: ({ message }, { onUpdate, onSuccess }) => {\n      let times = 0;\n      const chunks = [];\n      const id = setInterval(() => {\n        times += 1;\n        const chunk = `Thinking...(${times}/3)`;\n        onUpdate(chunk);\n        chunks.push(chunk);\n        if (times >= 3) {\n          onUpdate(`It\'s funny that you ask: ${message}`);\n          onSuccess(chunks);\n          clearInterval(id);\n        }\n      }, 500);\n    },\n  });\n  const onFinish = ({ question }) => {\n    log(`[You] Ask: ${question}`);\n    agent.request(\n      { message: question },\n      {\n        onUpdate: chunk => {\n          log(`[Agent] Update: ${chunk}`);\n        },\n        onSuccess: chunks => {\n          log(`[Agent] Answer: ${chunks.join(\',\')}`);\n          form.setFieldsValue({ question: \'\' });\n        },\n        // Current demo not use error\n        onError: () => {},\n      },\n    );\n  };\n  return (\n    <>\n      <Form form={form} layout="vertical" onFinish={onFinish} autoComplete="off">\n        <Form.Item label="Question" name="question">\n          <Input />\n        </Form.Item>\n        <Button htmlType="submit" type="primary" loading={agent.isRequesting()}>\n          submit\n        </Button>\n      </Form>\n\n      <Divider />\n\n      <Typography>\n        <ul>\n          {lines.map((line, index) => (\n            <li key={index}>{line}</li>\n          ))}\n        </ul>\n      </Typography>\n    </>\n  );\n};\nexport default App;\n',description:"<p>\u901A\u8FC7\u5B9A\u5236\u80FD\u529B\uFF0C\u8FD4\u56DE\u591A\u4E2A\u63A8\u8350\u5185\u5BB9\u3002</p>"}},{demo:{id:"components-use-x-agent-demo-model"},previewerProps:{title:"\u6A21\u578B\u63A5\u5165",filename:"components/use-x-agent/demo/model.tsx",pkgDependencyList:{"@ant-design/tools":"^19.0.2","@ant-design/v5-patch-for-react-19":"^1.0.3","@antv/gpt-vis":"^0.5.2","@biomejs/biome":"^2.0.5","@codecov/webpack-plugin":"^1.4.0","@codesandbox/sandpack-react":"^2.19.8","@emotion/react":"^11.13.5","@emotion/server":"^11.11.0","@happy-dom/jest-environment":"^18.0.1","@ianvs/prettier-plugin-sort-imports":"^4.3.1","@madccc/duplicate-package-checker-webpack-plugin":"^1.0.0","@microflash/rehype-figure":"^2.1.1","@npmcli/run-script":"^9.0.1","@octokit/rest":"^21.0.2","@petercatai/assistant":"^2.0.13","@prettier/sync":"^0.6.1","@qixian.cs/github-contributors-list":"^2.0.2","@rc-component/father-plugin":"^2.0.4","@rc-component/np":"^1.0.3","@rc-component/trigger":"^2.2.3","@size-limit/file":"^11.1.5","@stackblitz/sdk":"^1.11.0","@testing-library/dom":"^10.4.0","@testing-library/jest-dom":"^6.5.0","@testing-library/react":"^16.0.1","@testing-library/user-event":"^14.5.2","@types/adm-zip":"^0.5.5","@types/ali-oss":"^6.16.11","@types/cli-progress":"^3.11.6","@types/fs-extra":"^11.0.4","@types/gtag.js":"^0.0.20","@types/http-server":"^0.12.4","@types/inquirer":"^9.0.7","@types/isomorphic-fetch":"^0.0.39","@types/jest":"^29.5.13","@types/jest-axe":"^3.5.9","@types/jest-environment-puppeteer":"^5.0.6","@types/jest-image-snapshot":"^6.4.0","@types/jquery":"^3.5.30","@types/jsdom":"^21.1.7","@types/lodash":"^4.17.7","@types/markdown-it":"^14.1.2","@types/minimist":"^1.2.5","@types/node":"^24.0.3","@types/ora":"^3.2.0","@types/pixelmatch":"^5.2.6","@types/pngjs":"^6.0.5","@types/prismjs":"^1.26.4","@types/progress":"^2.0.7","@types/qs":"^6.9.16","@types/react":"^19.0.2","@types/react-copy-to-clipboard":"^5.0.7","@types/react-dom":"^19.0.2","@types/react-highlight-words":"^0.20.0","@types/react-resizable":"^3.0.8","@types/semver":"^7.5.8","@types/spinnies":"^0.5.3","@types/tar":"^6.1.13","@types/throttle-debounce":"^5.0.2","@types/warning":"^3.0.3","@umijs/fabric":"^4.0.1","adm-zip":"^0.5.16","ali-oss":"^6.21.0",antd:"^5.25.1","antd-style":"^3.6.3","antd-token-previewer":"^2.0.8",axios:"^1.7.7",browserslist:"^4.23.3","browserslist-to-esbuild":"^2.1.1",chalk:"^5.4.1",cheerio:"^1.0.0","circular-dependency-plugin":"^5.2.2","cli-progress":"^3.12.0","copy-to-clipboard":"^3.3.3","cross-env":"^10.0.0","cross-fetch":"^4.0.0",crypto:"^1.0.1",dayjs:"^1.11.13",dekko:"^0.2.1",dumi:"^2.4.17","dumi-plugin-color-chunk":"^1.1.2","esbuild-loader":"^4.2.2","fast-glob":"^3.3.2",father:"^4.5.4","fetch-jsonp":"^1.3.0","fs-extra":"^11.2.0","gh-pages":"^6.1.1",glob:"^11.0.0","happy-dom":"^18.0.1",html2sketch:"^1.0.2","http-server":"^14.1.1",husky:"^9.1.6","identity-obj-proxy":"^3.0.0",immer:"^10.1.1",inquirer:"^12.1.0","is-ci":"^4.1.0","isomorphic-fetch":"^3.0.0",jest:"^30.0.3","jest-axe":"^10.0.0","jest-canvas-mock":"^2.5.2","jest-environment-node":"^30.0.0","jest-image-snapshot":"^6.4.0","jest-puppeteer":"^11.0.0",jquery:"^3.7.1",jsdom:"^26.0.0","jsonml-to-react-element":"^1.1.11","jsonml.js":"^0.1.0","lint-staged":"^16.1.2",lodash:"^4.17.21","lottie-web":"^5.12.2","lunar-typescript":"^1.7.5","lz-string":"^1.5.0","markdown-it":"^14.1.0",minimist:"^1.2.8",mockdate:"^3.0.5","node-fetch":"^3.3.2","node-notifier":"^10.0.1",open:"^10.1.0",ora:"^8.1.0",pixelmatch:"^7.1.0",pngjs:"^7.0.0",prettier:"^3.3.3","prettier-plugin-jsdoc":"^1.3.0","pretty-format":"^30.0.0",prismjs:"^1.29.0",puppeteer:"^24.0.0",qs:"^6.13.0","rc-drawer":"^8.0.0","rc-footer":"^0.6.8","rc-resize-observer":"^1.4.0","rc-virtual-list":"^3.14.5",react:"^19.0.0","react-copy-to-clipboard":"^5.1.0","react-dom":"^19.0.0","react-highlight-words":"^0.20.0","react-infinite-scroll-component":"^6.1.0","react-intersection-observer":"^9.13.1","react-intl":"^7.1.11","react-resizable":"^3.0.5","react-router-dom":"^7.0.1","react-sticky-box":"^2.0.5","regenerator-runtime":"^0.14.1","rehype-stringify":"^10.0.0",remark:"^15.0.1","remark-cli":"^12.0.1","remark-gfm":"^4.0.0","remark-lint":"^10.0.0","remark-lint-no-undefined-references":"^5.0.0","remark-preset-lint-recommended":"^7.0.0","remark-rehype":"^11.1.0","scroll-into-view-if-needed":"^3.1.0",semver:"^7.6.3",sharp:"^0.34.3","simple-git":"^3.26.0","size-limit":"^11.1.5",spinnies:"^0.5.1",tar:"^7.4.3",tsx:"^4.19.1",typedoc:"^0.28.0",typescript:"~5.8.2","vanilla-jsoneditor":"^3.0.0","web-streams-polyfill":"^4.0.0",webpack:"^5.94.0","webpack-bundle-analyzer":"^4.10.2","@ant-design/colors":"^7.1.0","@ant-design/cssinjs":"^1.21.1","@ant-design/cssinjs-utils":"^1.1.0","@ant-design/fast-color":"^2.0.6","@ant-design/icons":"^5.4.0","@babel/runtime":"^7.25.6",classnames:"^2.5.1","rc-motion":"^2.9.2","rc-util":"^5.43.0","tbox-nodejs-sdk":"^0.0.13"},pkgPeerDependencies:{antd:"^5.20.3",react:">=18.0.0","react-dom":">=18.0.0"},jsx:"import { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, useXAgent } from '@ant-design/x';\nimport { Button, Descriptions, Flex, Input, Splitter, Typography } from 'antd';\nimport React, { useRef, useState } from 'react';\nconst { Paragraph } = Typography;\n/**\n * \u{1F514} Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */\nconst BASE_URL = 'https://api.x.ant.design/api/llm_siliconflow_qwen3-8b';\n/**\n * \u{1F514} The MODEL is fixed in the current request, please replace it with your BASE_UR and MODEL\n */\nconst MODEL = 'Qwen3-8B';\n/**\n * \u{1F514} the API_KEY is a placeholder indicator interface that has a built-in real API_KEY\n */\nconst API_KEY = 'Bearer sk-xxxxxxxxxxxxxxxxxxxx';\nconst App = () => {\n  const [status, setStatus] = useState('');\n  const [thoughtChainStatus, setThoughtChainStatus] = useState();\n  const [lines, setLines] = useState([]);\n  const abortController = useRef(null);\n  const [questionText, setQuestionText] = useState('hello, who are u?');\n  const [agent] = useXAgent({\n    baseURL: BASE_URL,\n    model: MODEL,\n    dangerouslyApiKey: API_KEY,\n    /** \u{1F525}\u{1F525} Its dangerously! */\n  });\n  const request = () => {\n    setLines([]);\n    setThoughtChainStatus('pending');\n    setStatus('pending');\n    agent.request(\n      {\n        messages: [{ role: 'user', content: questionText }],\n        stream: true,\n      },\n      {\n        onSuccess: () => {\n          setStatus('success');\n          setThoughtChainStatus('success');\n        },\n        onError: error => {\n          if (error.name === 'AbortError') {\n            setStatus('abort');\n          }\n          setThoughtChainStatus('error');\n        },\n        onUpdate: msg => {\n          setLines(pre => [...pre, msg]);\n        },\n        onStream: controller => {\n          abortController.current = controller;\n        },\n      },\n      new TransformStream({\n        transform(chunk, controller) {\n          const DEFAULT_KV_SEPARATOR = 'data: ';\n          const DEFAULT_STREAM_SEPARATOR = '\\n\\n';\n          const parts = chunk.split(DEFAULT_STREAM_SEPARATOR);\n          parts.forEach(part => {\n            var _a, _b, _c;\n            const separatorIndex = part.indexOf(DEFAULT_KV_SEPARATOR);\n            const value = part.slice(separatorIndex + DEFAULT_KV_SEPARATOR.length);\n            try {\n              const modalMessage = JSON.parse(value || '{}');\n              const content =\n                ((_c =\n                  (_b =\n                    (_a =\n                      modalMessage === null || modalMessage === void 0\n                        ? void 0\n                        : modalMessage.choices) === null || _a === void 0\n                      ? void 0\n                      : _a[0]) === null || _b === void 0\n                    ? void 0\n                    : _b.delta) === null || _c === void 0\n                  ? void 0\n                  : _c.content) || '';\n              controller.enqueue(content);\n            } catch (error) {\n              controller.enqueue('');\n            }\n          });\n        },\n      }),\n    );\n  };\n  const abort = () => {\n    var _a, _b;\n    (_b =\n      (_a =\n        abortController === null || abortController === void 0\n          ? void 0\n          : abortController.current) === null || _a === void 0\n        ? void 0\n        : _a.abort) === null || _b === void 0\n      ? void 0\n      : _b.call(_a);\n  };\n  return (\n    <Splitter>\n      <Splitter.Panel style={{ height: 300 }}>\n        <Splitter layout=\"vertical\">\n          <Splitter.Panel style={{ margin: '0 16px' }}>\n            <Flex gap=\"large\" vertical>\n              <Input\n                value={questionText}\n                onChange={e => {\n                  setQuestionText(e.target.value);\n                }}\n              />\n              <Flex gap=\"small\">\n                <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n                  Agent Request\n                </Button>\n                <Button type=\"primary\" disabled={status !== 'pending'} onClick={abort}>\n                  Agent Abort\n                </Button>\n              </Flex>\n            </Flex>\n          </Splitter.Panel>\n          <Splitter.Panel style={{ margin: 16 }}>\n            <Paragraph>{lines.length > 0 && lines.join('')}</Paragraph>\n          </Splitter.Panel>\n        </Splitter>\n      </Splitter.Panel>\n      <Splitter.Panel>\n        <ThoughtChain\n          style={{ marginLeft: 16 }}\n          items={[\n            {\n              title: 'Agent Request Log',\n              status: thoughtChainStatus,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description: `request ${status}`,\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\nexport default App;\n",description:"<p>\u63A5\u5165\u4E91\u670D\u52A1\u5E73\u53F0\uFF0C\u53EF\u53D1\u9001\u6D88\u606F\u3001\u8F6C\u6362\u6D41\u6570\u636E\u3001\u7EC8\u6B62\u6D88\u606F\u3002</p>"}},{demo:{id:"components-use-x-agent-demo-request-options"},previewerProps:{title:"\u53D8\u66F4\u914D\u7F6E",filename:"components/use-x-agent/demo/request-options.tsx",pkgDependencyList:{"@ant-design/tools":"^19.0.2","@ant-design/v5-patch-for-react-19":"^1.0.3","@antv/gpt-vis":"^0.5.2","@biomejs/biome":"^2.0.5","@codecov/webpack-plugin":"^1.4.0","@codesandbox/sandpack-react":"^2.19.8","@emotion/react":"^11.13.5","@emotion/server":"^11.11.0","@happy-dom/jest-environment":"^18.0.1","@ianvs/prettier-plugin-sort-imports":"^4.3.1","@madccc/duplicate-package-checker-webpack-plugin":"^1.0.0","@microflash/rehype-figure":"^2.1.1","@npmcli/run-script":"^9.0.1","@octokit/rest":"^21.0.2","@petercatai/assistant":"^2.0.13","@prettier/sync":"^0.6.1","@qixian.cs/github-contributors-list":"^2.0.2","@rc-component/father-plugin":"^2.0.4","@rc-component/np":"^1.0.3","@rc-component/trigger":"^2.2.3","@size-limit/file":"^11.1.5","@stackblitz/sdk":"^1.11.0","@testing-library/dom":"^10.4.0","@testing-library/jest-dom":"^6.5.0","@testing-library/react":"^16.0.1","@testing-library/user-event":"^14.5.2","@types/adm-zip":"^0.5.5","@types/ali-oss":"^6.16.11","@types/cli-progress":"^3.11.6","@types/fs-extra":"^11.0.4","@types/gtag.js":"^0.0.20","@types/http-server":"^0.12.4","@types/inquirer":"^9.0.7","@types/isomorphic-fetch":"^0.0.39","@types/jest":"^29.5.13","@types/jest-axe":"^3.5.9","@types/jest-environment-puppeteer":"^5.0.6","@types/jest-image-snapshot":"^6.4.0","@types/jquery":"^3.5.30","@types/jsdom":"^21.1.7","@types/lodash":"^4.17.7","@types/markdown-it":"^14.1.2","@types/minimist":"^1.2.5","@types/node":"^24.0.3","@types/ora":"^3.2.0","@types/pixelmatch":"^5.2.6","@types/pngjs":"^6.0.5","@types/prismjs":"^1.26.4","@types/progress":"^2.0.7","@types/qs":"^6.9.16","@types/react":"^19.0.2","@types/react-copy-to-clipboard":"^5.0.7","@types/react-dom":"^19.0.2","@types/react-highlight-words":"^0.20.0","@types/react-resizable":"^3.0.8","@types/semver":"^7.5.8","@types/spinnies":"^0.5.3","@types/tar":"^6.1.13","@types/throttle-debounce":"^5.0.2","@types/warning":"^3.0.3","@umijs/fabric":"^4.0.1","adm-zip":"^0.5.16","ali-oss":"^6.21.0",antd:"^5.25.1","antd-style":"^3.6.3","antd-token-previewer":"^2.0.8",axios:"^1.7.7",browserslist:"^4.23.3","browserslist-to-esbuild":"^2.1.1",chalk:"^5.4.1",cheerio:"^1.0.0","circular-dependency-plugin":"^5.2.2","cli-progress":"^3.12.0","copy-to-clipboard":"^3.3.3","cross-env":"^10.0.0","cross-fetch":"^4.0.0",crypto:"^1.0.1",dayjs:"^1.11.13",dekko:"^0.2.1",dumi:"^2.4.17","dumi-plugin-color-chunk":"^1.1.2","esbuild-loader":"^4.2.2","fast-glob":"^3.3.2",father:"^4.5.4","fetch-jsonp":"^1.3.0","fs-extra":"^11.2.0","gh-pages":"^6.1.1",glob:"^11.0.0","happy-dom":"^18.0.1",html2sketch:"^1.0.2","http-server":"^14.1.1",husky:"^9.1.6","identity-obj-proxy":"^3.0.0",immer:"^10.1.1",inquirer:"^12.1.0","is-ci":"^4.1.0","isomorphic-fetch":"^3.0.0",jest:"^30.0.3","jest-axe":"^10.0.0","jest-canvas-mock":"^2.5.2","jest-environment-node":"^30.0.0","jest-image-snapshot":"^6.4.0","jest-puppeteer":"^11.0.0",jquery:"^3.7.1",jsdom:"^26.0.0","jsonml-to-react-element":"^1.1.11","jsonml.js":"^0.1.0","lint-staged":"^16.1.2",lodash:"^4.17.21","lottie-web":"^5.12.2","lunar-typescript":"^1.7.5","lz-string":"^1.5.0","markdown-it":"^14.1.0",minimist:"^1.2.8",mockdate:"^3.0.5","node-fetch":"^3.3.2","node-notifier":"^10.0.1",open:"^10.1.0",ora:"^8.1.0",pixelmatch:"^7.1.0",pngjs:"^7.0.0",prettier:"^3.3.3","prettier-plugin-jsdoc":"^1.3.0","pretty-format":"^30.0.0",prismjs:"^1.29.0",puppeteer:"^24.0.0",qs:"^6.13.0","rc-drawer":"^8.0.0","rc-footer":"^0.6.8","rc-resize-observer":"^1.4.0","rc-virtual-list":"^3.14.5",react:"^19.0.0","react-copy-to-clipboard":"^5.1.0","react-dom":"^19.0.0","react-highlight-words":"^0.20.0","react-infinite-scroll-component":"^6.1.0","react-intersection-observer":"^9.13.1","react-intl":"^7.1.11","react-resizable":"^3.0.5","react-router-dom":"^7.0.1","react-sticky-box":"^2.0.5","regenerator-runtime":"^0.14.1","rehype-stringify":"^10.0.0",remark:"^15.0.1","remark-cli":"^12.0.1","remark-gfm":"^4.0.0","remark-lint":"^10.0.0","remark-lint-no-undefined-references":"^5.0.0","remark-preset-lint-recommended":"^7.0.0","remark-rehype":"^11.1.0","scroll-into-view-if-needed":"^3.1.0",semver:"^7.6.3",sharp:"^0.34.3","simple-git":"^3.26.0","size-limit":"^11.1.5",spinnies:"^0.5.1",tar:"^7.4.3",tsx:"^4.19.1",typedoc:"^0.28.0",typescript:"~5.8.2","vanilla-jsoneditor":"^3.0.0","web-streams-polyfill":"^4.0.0",webpack:"^5.94.0","webpack-bundle-analyzer":"^4.10.2","@ant-design/colors":"^7.1.0","@ant-design/cssinjs":"^1.21.1","@ant-design/cssinjs-utils":"^1.1.0","@ant-design/fast-color":"^2.0.6","@ant-design/icons":"^5.4.0","@babel/runtime":"^7.25.6",classnames:"^2.5.1","rc-motion":"^2.9.2","rc-util":"^5.43.0","tbox-nodejs-sdk":"^0.0.13"},pkgPeerDependencies:{antd:"^5.20.3",react:">=18.0.0","react-dom":">=18.0.0"},jsx:"var __awaiter =\n  (this && this.__awaiter) ||\n  function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P\n        ? value\n        : new P(function (resolve) {\n            resolve(value);\n          });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator['throw'](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\nimport { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, useXAgent } from '@ant-design/x';\nimport { Button, Descriptions, Flex, Splitter } from 'antd';\nimport React, { useState } from 'react';\n/**\n * \u{1F514} Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */\nconst BASE_URL = 'https://api.example.com/chat/v1';\nconst MODEL = 'gpt-3.5-turbo';\nconst API_KEY = 'Bearer sk-your-dangerouslyApiKey';\nconst App = () => {\n  const [status, setStatus] = React.useState();\n  const [lines, setLines] = React.useState([]);\n  const [error, setError] = useState();\n  const [requestOptions, setRequestOptions] = useState({\n    baseURL: BASE_URL,\n    model: MODEL,\n    dangerouslyApiKey: API_KEY,\n    /** \u{1F525}\u{1F525} Its dangerously! */\n    // dangerouslyApiKey: API_KEY\n  });\n  const [agent] = useXAgent(requestOptions);\n  const changeBaseData = () => {\n    setRequestOptions(pre => ({\n      baseURL: pre.baseURL === BASE_URL ? 'https://api.example.com/chat/v2' : BASE_URL,\n      model: pre.model === MODEL ? 'gpt-4' : MODEL,\n      dangerouslyApiKey:\n        pre.dangerouslyApiKey === API_KEY ? 'Bearer sk-your-new-dangerouslyApiKey' : API_KEY,\n    }));\n  };\n  function request() {\n    return __awaiter(this, void 0, void 0, function* () {\n      setStatus('pending');\n      agent.request(\n        {\n          messages: [{ role: 'user', content: 'hello, who are u?' }],\n          stream: true,\n        },\n        {\n          onSuccess: () => {\n            setStatus('success');\n          },\n          onError: error => {\n            setStatus('error');\n            setError(error);\n          },\n          onUpdate: msg => {\n            setLines(pre => [...pre, msg]);\n          },\n        },\n      );\n    });\n  }\n  return (\n    <Splitter>\n      <Splitter>\n        <Splitter layout=\"vertical\">\n          <Splitter.Panel>\n            <Flex gap=\"small\">\n              <Button type=\"primary\" disabled={status === 'pending'} onClick={changeBaseData}>\n                Change Request Options\n              </Button>\n              <Button type=\"primary\" disabled={status === 'pending'} onClick={request}>\n                Agent Request\n              </Button>\n            </Flex>\n          </Splitter.Panel>\n          <Splitter.Panel>\n            <p>baseURL: {requestOptions.baseURL}</p>\n            <p>model: {requestOptions.model}</p>\n            <p>dangerouslyApiKey: {requestOptions.dangerouslyApiKey}</p>\n          </Splitter.Panel>\n        </Splitter>\n      </Splitter>\n      <Splitter.Panel>\n        <ThoughtChain\n          style={{ marginLeft: 16 }}\n          items={[\n            {\n              title: 'Agent Request Log',\n              status: status,\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\n              description:\n                status === 'error' &&\n                ((error === null || error === void 0 ? void 0 : error.message) || 'request error'),\n              content: (\n                <Descriptions column={1}>\n                  <Descriptions.Item label=\"Status\">{status || '-'}</Descriptions.Item>\n                  <Descriptions.Item label=\"Update Times\">{lines.length}</Descriptions.Item>\n                </Descriptions>\n              ),\n            },\n          ]}\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\nexport default App;\n",description:"<p>\u63A7\u5236\u53D8\u66F4<code>XRequestOptions</code>\uFF0C\u52A8\u6001\u4FEE\u6539\u914D\u7F6E\u9879\uFF0C\u5982 baseURL\u3001model \u548C API key\u3002</p>"}}]}),(0,r.jsxs)("div",{className:"markdown",children:[(0,r.jsxs)("h2",{id:"api",children:[(0,r.jsx)(c.default,{"aria-hidden":"true",tabIndex:"-1",href:"#api",sourceType:"a",children:(0,r.jsx)("span",{className:"icon icon-link"})}),"API"]}),(0,r.jsx)(a.default,{lang:"tsx",children:u.texts[1].value}),(0,r.jsxs)("h3",{id:"xagentconfigpreset",children:[(0,r.jsx)(c.default,{"aria-hidden":"true",tabIndex:"-1",href:"#xagentconfigpreset",sourceType:"a",children:(0,r.jsx)("span",{className:"icon icon-link"})}),"XAgentConfigPreset"]}),(0,r.jsx)("p",{children:u.texts[2].value}),(0,r.jsxs)(i.default,{className:"component-api-table",children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:u.texts[3].value}),(0,r.jsx)("th",{children:u.texts[4].value}),(0,r.jsx)("th",{children:u.texts[5].value}),(0,r.jsx)("th",{children:u.texts[6].value}),(0,r.jsx)("th",{children:u.texts[7].value})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:u.texts[8].value}),(0,r.jsx)("td",{children:u.texts[9].value}),(0,r.jsx)("td",{children:u.texts[10].value}),(0,r.jsx)("td",{children:u.texts[11].value}),(0,r.jsx)("td",{})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:u.texts[12].value}),(0,r.jsx)("td",{children:u.texts[13].value}),(0,r.jsx)("td",{children:u.texts[14].value}),(0,r.jsx)("td",{children:u.texts[15].value}),(0,r.jsx)("td",{})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:u.texts[16].value}),(0,r.jsx)("td",{children:u.texts[17].value}),(0,r.jsx)("td",{children:u.texts[18].value}),(0,r.jsx)("td",{children:u.texts[19].value}),(0,r.jsx)("td",{})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:u.texts[20].value}),(0,r.jsx)("td",{children:(0,r.jsxs)("strong",{children:[u.texts[21].value,(0,r.jsx)("code",{children:u.texts[22].value}),u.texts[23].value,(0,r.jsx)(c.default,{to:"/docs/react/dangerously-api-key-cn",sourceType:"Link",children:u.texts[24].value}),u.texts[25].value]})}),(0,r.jsx)("td",{children:u.texts[26].value}),(0,r.jsx)("td",{children:u.texts[27].value}),(0,r.jsx)("td",{children:u.texts[28].value})]})]})]}),(0,r.jsxs)("h3",{id:"xagentconfigcustom",children:[(0,r.jsx)(c.default,{"aria-hidden":"true",tabIndex:"-1",href:"#xagentconfigcustom",sourceType:"a",children:(0,r.jsx)("span",{className:"icon icon-link"})}),"XAgentConfigCustom"]}),(0,r.jsx)("p",{children:u.texts[29].value}),(0,r.jsxs)(i.default,{className:"component-api-table",children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:u.texts[30].value}),(0,r.jsx)("th",{children:u.texts[31].value}),(0,r.jsx)("th",{children:u.texts[32].value}),(0,r.jsx)("th",{children:u.texts[33].value}),(0,r.jsx)("th",{children:u.texts[34].value})]})}),(0,r.jsx)("tbody",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:u.texts[35].value}),(0,r.jsx)("td",{children:u.texts[36].value}),(0,r.jsx)("td",{children:u.texts[37].value}),(0,r.jsx)("td",{}),(0,r.jsx)("td",{})]})})]}),(0,r.jsxs)("h4",{id:"requestfn",children:[(0,r.jsx)(c.default,{"aria-hidden":"true",tabIndex:"-1",href:"#requestfn",sourceType:"a",children:(0,r.jsx)("span",{className:"icon icon-link"})}),"RequestFn"]}),(0,r.jsxs)("p",{children:[u.texts[38].value,(0,r.jsx)(c.default,{to:"/components/x-stream-cn#xstreamoptions",sourceType:"Link",children:u.texts[39].value}),u.texts[40].value]}),(0,r.jsx)(a.default,{lang:"tsx",children:u.texts[41].value}),(0,r.jsxs)("h3",{id:"agent",children:[(0,r.jsx)(c.default,{"aria-hidden":"true",tabIndex:"-1",href:"#agent",sourceType:"a",children:(0,r.jsx)("span",{className:"icon icon-link"})}),"Agent"]}),(0,r.jsxs)(i.default,{className:"component-api-table",children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:u.texts[42].value}),(0,r.jsx)("th",{children:u.texts[43].value}),(0,r.jsx)("th",{children:u.texts[44].value}),(0,r.jsx)("th",{children:u.texts[45].value})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:u.texts[46].value}),(0,r.jsxs)("td",{children:[u.texts[47].value,(0,r.jsx)("code",{children:u.texts[48].value}),u.texts[49].value,(0,r.jsx)(c.default,{href:"https://x.ant.design/components/x-request",sourceType:"a",children:u.texts[50].value})]}),(0,r.jsx)("td",{children:u.texts[51].value}),(0,r.jsx)("td",{})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:u.texts[52].value}),(0,r.jsx)("td",{children:u.texts[53].value}),(0,r.jsx)("td",{children:u.texts[54].value}),(0,r.jsx)("td",{})]})]})]})]})]})})});};},"891f9e2a":function(e,t,n){"use strict";n.d(t,"__esModule",{value:!0}),n.d(t,"texts",{enumerable:!0,get:function(){return s;}}),n("128aeb16");let s=[{value:"\u4E0E\u540E\u7AEF\u6A21\u578B\u8FDB\u884C\u4EA4\u4E92\uFF0C\u63D0\u4F9B\u62BD\u8C61\u6570\u636E\u6D41\u3002",paraId:0,tocIndex:0},{value:"type useXAgent<AgentMessage> = (\n  config: XAgentConfigPreset | XAgentConfigCustom<AgentMessage>,\n) => [Agent];\n",paraId:1,tocIndex:7},{value:"\u4F7F\u7528\u9884\u8BBE\u534F\u8BAE\u8FDB\u884C\u8BF7\u6C42\uFF0C\u5C1A\u672A\u5B9E\u73B0\u534F\u8BAE\u3002",paraId:2,tocIndex:8},{value:"\u5C5E\u6027",paraId:3,tocIndex:8},{value:"\u8BF4\u660E",paraId:3,tocIndex:8},{value:"\u7C7B\u578B",paraId:3,tocIndex:8},{value:"\u9ED8\u8BA4\u503C",paraId:3,tocIndex:8},{value:"\u7248\u672C",paraId:3,tocIndex:8},{value:"baseURL",paraId:3,tocIndex:8},{value:"\u8BF7\u6C42\u670D\u52A1\u7AEF\u5730\u5740",paraId:3,tocIndex:8},{value:"string",paraId:3,tocIndex:8},{value:"-",paraId:3,tocIndex:8},{value:"key",paraId:3,tocIndex:8},{value:"\u8BF7\u6C42\u79D8\u94A5",paraId:3,tocIndex:8},{value:"string",paraId:3,tocIndex:8},{value:"-",paraId:3,tocIndex:8},{value:"model",paraId:3,tocIndex:8},{value:"\u534F\u8BAE\u6A21\u578B",paraId:3,tocIndex:8},{value:"string",paraId:3,tocIndex:8},{value:"-",paraId:3,tocIndex:8},{value:"dangerouslyApiKey",paraId:3,tocIndex:8},{value:"\u6CE8\u610F: \u{1F525} ",paraId:3,tocIndex:8},{value:"dangerouslyApiKey",paraId:3,tocIndex:8},{value:" \u5B58\u5728\u5B89\u5168\u98CE\u9669\uFF0C\u5BF9\u6B64\u6709\u8BE6\u7EC6\u7684",paraId:3,tocIndex:8},{value:"\u8BF4\u660E",paraId:4,tocIndex:8},{value:"\u3002",paraId:3,tocIndex:8},{value:"string",paraId:3,tocIndex:8},{value:"-",paraId:3,tocIndex:8},{value:"-",paraId:3,tocIndex:8},{value:"\u81EA\u5B9A\u4E49\u8BF7\u6C42\u534F\u8BAE\u3002",paraId:5,tocIndex:9},{value:"\u5C5E\u6027",paraId:6,tocIndex:9},{value:"\u8BF4\u660E",paraId:6,tocIndex:9},{value:"\u7C7B\u578B",paraId:6,tocIndex:9},{value:"\u9ED8\u8BA4\u503C",paraId:6,tocIndex:9},{value:"\u7248\u672C",paraId:6,tocIndex:9},{value:"request",paraId:6,tocIndex:9},{value:"\u914D\u7F6E\u81EA\u5B9A\u4E49\u8BF7\u6C42\uFF0C\u652F\u6301\u6D41\u5F0F\u66F4\u65B0",paraId:6,tocIndex:9},{value:"RequestFn",paraId:6,tocIndex:9},{value:"\u66F4\u591A\u8BF7\u67E5\u770B ",paraId:7,tocIndex:10},{value:"XStreamOptions",paraId:8,tocIndex:10},{value:"\u3002",paraId:7,tocIndex:10},{value:"interface RequestFnInfo<Message> extends AnyObject {\n  messages?: Message[];\n  message?: Message;\n}\n\ntype RequestFn<Message, Input, Output> = (\n  info: RequestFnInfo<Message, Input>,\n  callbacks: {\n    onUpdate: (chunk: Output) => void;\n    onSuccess: (chunks: Output[]) => void;\n    onError: (error: Error) => void;\n    onStream?: (abortController: AbortController) => void;\n  },\n  transformStream?: XStreamOptions<Message>['transformStream'],\n) => void;\n",paraId:9,tocIndex:10},{value:"\u5C5E\u6027",paraId:10,tocIndex:11},{value:"\u8BF4\u660E",paraId:10,tocIndex:11},{value:"\u7C7B\u578B",paraId:10,tocIndex:11},{value:"\u7248\u672C",paraId:10,tocIndex:11},{value:"request",paraId:10,tocIndex:11},{value:"\u8C03\u7528 ",paraId:10,tocIndex:11},{value:"useXAgent",paraId:10,tocIndex:11},{value:" \u914D\u7F6E\u7684\u8BF7\u6C42\uFF0C",paraId:10,tocIndex:11},{value:"\u8BE6\u60C5",paraId:10,tocIndex:11},{value:"RequestFn",paraId:10,tocIndex:11},{value:"isRequesting",paraId:10,tocIndex:11},{value:"\u662F\u5426\u6B63\u5728\u8BF7\u6C42",paraId:10,tocIndex:11},{value:"() => boolean",paraId:10,tocIndex:11}];}}]);
//# sourceMappingURL=53c210f6-async.d41638bd.js.map