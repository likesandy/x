{"version":3,"sources":["docs/react/model-use-openai.en-US.md?type=text","docs/react/model-use-openai.en-US.md"],"sourcesContent":["\n  import '/home/runner/work/x/x/docs/react/model-use-openai.en-US.md?watch=parent';\n  export const texts = [{\"value\":\"This guide will explain how to integrate OpenAI's model service into an application built using Ant Design X.\",\"paraId\":0},{\"value\":\"This is equivalent to integrating with a model inference service compatible with OpenAI. For reference, see \",\"paraId\":1,\"tocIndex\":0},{\"value\":\"Model Integration - Qwen\",\"paraId\":2,\"tocIndex\":0},{\"value\":\".\",\"paraId\":1,\"tocIndex\":0},{\"value\":\"Typically, \",\"paraId\":3,\"tocIndex\":1},{\"value\":\"openai-node\",\"paraId\":3,\"tocIndex\":1},{\"value\":\" is used in a Node environment. If used in a browser environment, the \",\"paraId\":3,\"tocIndex\":1},{\"value\":\"dangerouslyAllowBrowser\",\"paraId\":3,\"tocIndex\":1},{\"value\":\" option must be enabled.\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"Note: \",\"paraId\":4,\"tocIndex\":1},{\"value\":\"dangerouslyAllowBrowser\",\"paraId\":4,\"tocIndex\":1},{\"value\":\" poses a security risk. For more details, refer to the official \",\"paraId\":4,\"tocIndex\":1},{\"value\":\"documentation\",\"paraId\":4,\"tocIndex\":1},{\"value\":\".\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"import { useXAgent, useXChat, Sender, Bubble } from '@ant-design/x';\\nimport OpenAI from 'openai';\\nimport React from 'react';\\n\\nconst client = new OpenAI({\\n  apiKey: process.env['OPENAI_API_KEY'],\\n  dangerouslyAllowBrowser: true,\\n});\\n\\nconst Demo: React.FC = () => {\\n  const [agent] = useXAgent({\\n    request: async (info, callbacks) => {\\n      const { messages, message } = info;\\n\\n      const { onSuccess, onUpdate, onError } = callbacks;\\n\\n      // current message\\n      console.log('message', message);\\n\\n      // history messages\\n      console.log('messages', messages);\\n\\n      let content: string = '';\\n\\n      try {\\n        const stream = await client.chat.completions.create({\\n          model: 'gpt-4o',\\n          // if chat context is needed, modify the array\\n          messages: [{ role: 'user', content: message }],\\n          // stream mode\\n          stream: true,\\n        });\\n\\n        for await (const chunk of stream) {\\n          content += chunk.choices[0]?.delta?.content || '';\\n\\n          onUpdate(content);\\n        }\\n\\n        onSuccess(content);\\n      } catch (error) {\\n        // handle error\\n        // onError();\\n      }\\n    },\\n  });\\n\\n  const {\\n    // use to send message\\n    onRequest,\\n    // use to render messages\\n    messages,\\n  } = useXChat({ agent });\\n\\n  const items = messages.map(({ message, id }) => ({\\n    // key is required, used to identify the message\\n    key: id,\\n    content: message,\\n  }));\\n\\n  return (\\n    <div>\\n      <Bubble.List items={items} />\\n      <Sender onSubmit={onRequest} />\\n    </div>\\n  );\\n};\\n\\nexport default Demo;\\n\",\"paraId\":5,\"tocIndex\":1}];\n  ","import ColorChunk from '/home/runner/work/x/x/.dumi/theme/builtins/ColorChunk/index.tsx';\nimport API from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/API/index.js';\nimport Badge from '/home/runner/work/x/x/.dumi/theme/builtins/Badge/index.tsx';\nimport CodeGroup from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/CodeGroup/index.js';\nimport Container from '/home/runner/work/x/x/.dumi/theme/builtins/Container/index.tsx';\nimport Previewer from '/home/runner/work/x/x/.dumi/theme/builtins/Previewer/index.tsx';\nimport SourceCode from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/SourceCode/index.js';\nimport Table from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/Table/index.js';\nimport Tree from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/Tree/index.js';\nimport Antd from '/home/runner/work/x/x/.dumi/theme/builtins/Antd.tsx';\nimport APITable from '/home/runner/work/x/x/.dumi/theme/builtins/APITable/index.tsx';\nimport Audio from '/home/runner/work/x/x/.dumi/theme/builtins/Audio/index.tsx';\nimport ColorPalettes from '/home/runner/work/x/x/.dumi/theme/builtins/ColorPalettes/index.ts';\nimport ColorPaletteTool from '/home/runner/work/x/x/.dumi/theme/builtins/ColorPaletteTool/index.ts';\nimport ColorPaletteToolDark from '/home/runner/work/x/x/.dumi/theme/builtins/ColorPaletteToolDark/index.ts';\nimport ComponentMeta from '/home/runner/work/x/x/.dumi/theme/builtins/ComponentMeta/index.tsx';\nimport ComponentOverview from '/home/runner/work/x/x/.dumi/theme/builtins/ComponentOverview/index.tsx';\nimport ComponentTokenTable from '/home/runner/work/x/x/.dumi/theme/builtins/ComponentTokenTable/index.tsx';\nimport DemoWrapper from '/home/runner/work/x/x/.dumi/theme/builtins/DemoWrapper/index.tsx';\nimport IconSearch from '/home/runner/work/x/x/.dumi/theme/builtins/IconSearch/index.tsx';\nimport ImagePreview from '/home/runner/work/x/x/.dumi/theme/builtins/ImagePreview/index.tsx';\nimport InlinePopover from '/home/runner/work/x/x/.dumi/theme/builtins/InlinePopover/index.tsx';\nimport InstallDependencies from '/home/runner/work/x/x/.dumi/theme/builtins/InstallDependencies/index.tsx';\nimport LocaleLink from '/home/runner/work/x/x/.dumi/theme/builtins/LocaleLink/index.tsx';\nimport Palette from '/home/runner/work/x/x/.dumi/theme/builtins/Palette/index.ts';\nimport ResourceCards from '/home/runner/work/x/x/.dumi/theme/builtins/ResourceCards/index.tsx';\nimport Sandpack from '/home/runner/work/x/x/.dumi/theme/builtins/Sandpack/index.tsx';\nimport TokenCompare from '/home/runner/work/x/x/.dumi/theme/builtins/TokenCompare/index.tsx';\nimport TokenTable from '/home/runner/work/x/x/.dumi/theme/builtins/TokenTable/index.tsx';\nimport VideoPlayer from '/home/runner/work/x/x/.dumi/theme/builtins/VideoPlayer/index.tsx';\nimport { DumiDemo } from 'dumi';\nimport { DumiDemoGrid } from 'dumi';\nimport { Link } from 'dumi';\n\nimport LoadingComponent from '@@/dumi/theme/loading';\nimport React, { Suspense } from 'react';\nimport { DumiPage } from 'dumi';\nimport { texts as $$contentTexts } from '/home/runner/work/x/x/docs/react/model-use-openai.en-US.md?type=text';\n\n// export named function for fastRefresh\n// ref: https://github.com/pmmmwh/react-refresh-webpack-plugin/blob/main/docs/TROUBLESHOOTING.md#edits-always-lead-to-full-reload\nfunction DumiMarkdownContent() {\n  return (\n    <DumiPage>\n      <Suspense fallback={<LoadingComponent />}>\n        <><div className=\"markdown\"><p>{$$contentTexts[0].value}</p><h2 id=\"using-openai-api\"><LocaleLink aria-hidden=\"true\" tabIndex=\"-1\" href=\"#using-openai-api\" sourceType=\"a\"><span className=\"icon icon-link\" /></LocaleLink>{\"Using OpenAI API\"}</h2><p>{$$contentTexts[1].value}<LocaleLink to=\"/docs/react/model-use-qwen\" sourceType=\"Link\">{$$contentTexts[2].value}</LocaleLink>{$$contentTexts[3].value}</p><h2 id=\"using-openai-node\"><LocaleLink aria-hidden=\"true\" tabIndex=\"-1\" href=\"#using-openai-node\" sourceType=\"a\"><span className=\"icon icon-link\" /></LocaleLink>{\"Using openai-node\"}</h2><p>{$$contentTexts[4].value}<code>{$$contentTexts[5].value}</code>{$$contentTexts[6].value}<code>{$$contentTexts[7].value}</code>{$$contentTexts[8].value}</p><blockquote><p>{$$contentTexts[9].value}<code>{$$contentTexts[10].value}</code>{$$contentTexts[11].value}<LocaleLink href=\"https://github.com/openai/openai-node?tab=readme-ov-file#requirements\" sourceType=\"a\">{$$contentTexts[12].value}</LocaleLink>{$$contentTexts[13].value}</p></blockquote><SourceCode lang=\"tsx\">{$$contentTexts[14].value}</SourceCode></div></>\n      </Suspense>\n    </DumiPage>\n  )\n}\n\nexport default DumiMarkdownContent;"],"names":[],"mappings":"+PAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,gHAAgH,OAAS,CAAC,EAAE,CAAC,MAAQ,+GAA+G,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,2BAA2B,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,cAAc,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,cAAc,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,yEAAyE,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,0BAA0B,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,2BAA2B,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,0BAA0B,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,mEAAmE,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,gBAAgB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,6lDAA6lD,OAAS,EAAE,SAAW,CAAC,EAAE,8ECiDxnF,+CAAA,kDA7CuB,qBAiBA,qBAWM,iBACG,gBACP,gBACe,YAcxC,EAVA,WACE,MACE,UAAC,UAAQ,WACP,UAAC,UAAQ,EAAC,SAAU,UAAC,SAAgB,cACnC,+BAAE,WAAC,OAAI,UAAU,qBAAW,UAAC,cAAG,OAAc,CAAC,EAAE,CAAC,KAAK,GAAK,WAAC,MAAG,GAAG,6BAAmB,UAAC,SAAU,EAAC,cAAY,OAAO,SAAS,KAAK,KAAK,oBAAoB,WAAW,aAAI,UAAC,QAAK,UAAU,qBAAiC,sBAAwB,WAAC,eAAG,OAAc,CAAC,EAAE,CAAC,KAAK,CAAC,UAAC,SAAU,EAAC,GAAG,6BAA6B,WAAW,gBAAQ,OAAc,CAAC,EAAE,CAAC,KAAK,GAAe,OAAc,CAAC,EAAE,CAAC,KAAK,IAAK,WAAC,MAAG,GAAG,8BAAoB,UAAC,SAAU,EAAC,cAAY,OAAO,SAAS,KAAK,KAAK,qBAAqB,WAAW,aAAI,UAAC,QAAK,UAAU,qBAAiC,uBAAyB,WAAC,eAAG,OAAc,CAAC,EAAE,CAAC,KAAK,CAAC,UAAC,iBAAM,OAAc,CAAC,EAAE,CAAC,KAAK,GAAS,OAAc,CAAC,EAAE,CAAC,KAAK,CAAC,UAAC,iBAAM,OAAc,CAAC,EAAE,CAAC,KAAK,GAAS,OAAc,CAAC,EAAE,CAAC,KAAK,IAAK,UAAC,uBAAW,WAAC,eAAG,OAAc,CAAC,EAAE,CAAC,KAAK,CAAC,UAAC,iBAAM,OAAc,CAAC,GAAG,CAAC,KAAK,GAAS,OAAc,CAAC,GAAG,CAAC,KAAK,CAAC,UAAC,SAAU,EAAC,KAAK,wEAAwE,WAAW,aAAK,OAAc,CAAC,GAAG,CAAC,KAAK,GAAe,OAAc,CAAC,GAAG,CAAC,KAAK,MAAkB,UAAC,SAAU,EAAC,KAAK,eAAO,OAAc,CAAC,GAAG,CAAC,KAAK,YAIrkC"}