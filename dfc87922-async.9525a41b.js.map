{"version":3,"sources":["docs/playground/copilot.zh-CN.md?type=text","docs/playground/copilot.zh-CN.md"],"sourcesContent":["\n  import '/home/runner/work/x/x/docs/playground/copilot.zh-CN.md?watch=parent';\n  export const texts = [];\n  ","import ColorChunk from '/home/runner/work/x/x/.dumi/theme/builtins/ColorChunk/index.tsx';\nimport API from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/API/index.js';\nimport Badge from '/home/runner/work/x/x/.dumi/theme/builtins/Badge/index.tsx';\nimport CodeGroup from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/CodeGroup/index.js';\nimport Container from '/home/runner/work/x/x/.dumi/theme/builtins/Container/index.tsx';\nimport Previewer from '/home/runner/work/x/x/.dumi/theme/builtins/Previewer/index.tsx';\nimport SourceCode from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/SourceCode/index.js';\nimport Table from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/Table/index.js';\nimport Tree from '/home/runner/work/x/x/node_modules/dumi/theme-default/builtins/Tree/index.js';\nimport Antd from '/home/runner/work/x/x/.dumi/theme/builtins/Antd.tsx';\nimport APITable from '/home/runner/work/x/x/.dumi/theme/builtins/APITable/index.tsx';\nimport Audio from '/home/runner/work/x/x/.dumi/theme/builtins/Audio/index.tsx';\nimport ColorPalettes from '/home/runner/work/x/x/.dumi/theme/builtins/ColorPalettes/index.ts';\nimport ColorPaletteTool from '/home/runner/work/x/x/.dumi/theme/builtins/ColorPaletteTool/index.ts';\nimport ColorPaletteToolDark from '/home/runner/work/x/x/.dumi/theme/builtins/ColorPaletteToolDark/index.ts';\nimport ComponentMeta from '/home/runner/work/x/x/.dumi/theme/builtins/ComponentMeta/index.tsx';\nimport ComponentOverview from '/home/runner/work/x/x/.dumi/theme/builtins/ComponentOverview/index.tsx';\nimport ComponentTokenTable from '/home/runner/work/x/x/.dumi/theme/builtins/ComponentTokenTable/index.tsx';\nimport DemoWrapper from '/home/runner/work/x/x/.dumi/theme/builtins/DemoWrapper/index.tsx';\nimport IconSearch from '/home/runner/work/x/x/.dumi/theme/builtins/IconSearch/index.tsx';\nimport ImagePreview from '/home/runner/work/x/x/.dumi/theme/builtins/ImagePreview/index.tsx';\nimport InlinePopover from '/home/runner/work/x/x/.dumi/theme/builtins/InlinePopover/index.tsx';\nimport InstallDependencies from '/home/runner/work/x/x/.dumi/theme/builtins/InstallDependencies/index.tsx';\nimport LocaleLink from '/home/runner/work/x/x/.dumi/theme/builtins/LocaleLink/index.tsx';\nimport Palette from '/home/runner/work/x/x/.dumi/theme/builtins/Palette/index.ts';\nimport ResourceCards from '/home/runner/work/x/x/.dumi/theme/builtins/ResourceCards/index.tsx';\nimport Sandpack from '/home/runner/work/x/x/.dumi/theme/builtins/Sandpack/index.tsx';\nimport TokenCompare from '/home/runner/work/x/x/.dumi/theme/builtins/TokenCompare/index.tsx';\nimport TokenTable from '/home/runner/work/x/x/.dumi/theme/builtins/TokenTable/index.tsx';\nimport VideoPlayer from '/home/runner/work/x/x/.dumi/theme/builtins/VideoPlayer/index.tsx';\nimport { DumiDemo } from 'dumi';\nimport { DumiDemoGrid } from 'dumi';\nimport { Link } from 'dumi';\n\nimport LoadingComponent from '@@/dumi/theme/loading';\nimport React, { Suspense } from 'react';\nimport { DumiPage } from 'dumi';\nimport { texts as $$contentTexts } from '/home/runner/work/x/x/docs/playground/copilot.zh-CN.md?type=text';\n\n// export named function for fastRefresh\n// ref: https://github.com/pmmmwh/react-refresh-webpack-plugin/blob/main/docs/TROUBLESHOOTING.md#edits-always-lead-to-full-reload\nfunction DumiMarkdownContent() {\n  return (\n    <DumiPage>\n      <Suspense fallback={<LoadingComponent />}>\n        <><DumiDemo {...{\n  \"demo\": {\n    \"id\": \"docs-playground-copilot-demo-copilot\"\n  },\n  \"previewerProps\": {\n    \"title\": \"助手式\",\n    \"compact\": true,\n    \"iframe\": \"600\",\n    \"filename\": \"docs/playground/copilot.tsx\",\n    \"pkgDependencyList\": {\n      \"@ant-design/tools\": \"^19.0.2\",\n      \"@ant-design/v5-patch-for-react-19\": \"^1.0.3\",\n      \"@antv/gpt-vis\": \"^0.5.2\",\n      \"@biomejs/biome\": \"^2.0.5\",\n      \"@codecov/webpack-plugin\": \"^1.4.0\",\n      \"@codesandbox/sandpack-react\": \"^2.19.8\",\n      \"@emotion/react\": \"^11.13.5\",\n      \"@emotion/server\": \"^11.11.0\",\n      \"@happy-dom/jest-environment\": \"^18.0.1\",\n      \"@ianvs/prettier-plugin-sort-imports\": \"^4.3.1\",\n      \"@madccc/duplicate-package-checker-webpack-plugin\": \"^1.0.0\",\n      \"@microflash/rehype-figure\": \"^2.1.1\",\n      \"@npmcli/run-script\": \"^9.0.1\",\n      \"@octokit/rest\": \"^21.0.2\",\n      \"@petercatai/assistant\": \"^2.0.13\",\n      \"@prettier/sync\": \"^0.6.1\",\n      \"@qixian.cs/github-contributors-list\": \"^2.0.2\",\n      \"@rc-component/father-plugin\": \"^2.0.4\",\n      \"@rc-component/np\": \"^1.0.3\",\n      \"@rc-component/trigger\": \"^2.2.3\",\n      \"@size-limit/file\": \"^11.1.5\",\n      \"@stackblitz/sdk\": \"^1.11.0\",\n      \"@testing-library/dom\": \"^10.4.0\",\n      \"@testing-library/jest-dom\": \"^6.5.0\",\n      \"@testing-library/react\": \"^16.0.1\",\n      \"@testing-library/user-event\": \"^14.5.2\",\n      \"@types/adm-zip\": \"^0.5.5\",\n      \"@types/ali-oss\": \"^6.16.11\",\n      \"@types/cli-progress\": \"^3.11.6\",\n      \"@types/fs-extra\": \"^11.0.4\",\n      \"@types/gtag.js\": \"^0.0.20\",\n      \"@types/http-server\": \"^0.12.4\",\n      \"@types/inquirer\": \"^9.0.7\",\n      \"@types/isomorphic-fetch\": \"^0.0.39\",\n      \"@types/jest\": \"^29.5.13\",\n      \"@types/jest-axe\": \"^3.5.9\",\n      \"@types/jest-environment-puppeteer\": \"^5.0.6\",\n      \"@types/jest-image-snapshot\": \"^6.4.0\",\n      \"@types/jquery\": \"^3.5.30\",\n      \"@types/jsdom\": \"^21.1.7\",\n      \"@types/lodash\": \"^4.17.7\",\n      \"@types/markdown-it\": \"^14.1.2\",\n      \"@types/minimist\": \"^1.2.5\",\n      \"@types/node\": \"^24.0.3\",\n      \"@types/ora\": \"^3.2.0\",\n      \"@types/pixelmatch\": \"^5.2.6\",\n      \"@types/pngjs\": \"^6.0.5\",\n      \"@types/prismjs\": \"^1.26.4\",\n      \"@types/progress\": \"^2.0.7\",\n      \"@types/qs\": \"^6.9.16\",\n      \"@types/react\": \"^19.0.2\",\n      \"@types/react-copy-to-clipboard\": \"^5.0.7\",\n      \"@types/react-dom\": \"^19.0.2\",\n      \"@types/react-highlight-words\": \"^0.20.0\",\n      \"@types/react-resizable\": \"^3.0.8\",\n      \"@types/semver\": \"^7.5.8\",\n      \"@types/spinnies\": \"^0.5.3\",\n      \"@types/tar\": \"^6.1.13\",\n      \"@types/throttle-debounce\": \"^5.0.2\",\n      \"@types/warning\": \"^3.0.3\",\n      \"@umijs/fabric\": \"^4.0.1\",\n      \"adm-zip\": \"^0.5.16\",\n      \"ali-oss\": \"^6.21.0\",\n      \"antd\": \"^5.25.1\",\n      \"antd-style\": \"^3.6.3\",\n      \"antd-token-previewer\": \"^2.0.8\",\n      \"axios\": \"^1.7.7\",\n      \"browserslist\": \"^4.23.3\",\n      \"browserslist-to-esbuild\": \"^2.1.1\",\n      \"chalk\": \"^5.4.1\",\n      \"cheerio\": \"^1.0.0\",\n      \"circular-dependency-plugin\": \"^5.2.2\",\n      \"cli-progress\": \"^3.12.0\",\n      \"copy-to-clipboard\": \"^3.3.3\",\n      \"cross-env\": \"^10.0.0\",\n      \"cross-fetch\": \"^4.0.0\",\n      \"crypto\": \"^1.0.1\",\n      \"dayjs\": \"^1.11.13\",\n      \"dekko\": \"^0.2.1\",\n      \"dumi\": \"^2.4.17\",\n      \"dumi-plugin-color-chunk\": \"^1.1.2\",\n      \"esbuild-loader\": \"^4.2.2\",\n      \"fast-glob\": \"^3.3.2\",\n      \"father\": \"^4.5.4\",\n      \"fetch-jsonp\": \"^1.3.0\",\n      \"fs-extra\": \"^11.2.0\",\n      \"gh-pages\": \"^6.1.1\",\n      \"glob\": \"^11.0.0\",\n      \"happy-dom\": \"^18.0.1\",\n      \"html2sketch\": \"^1.0.2\",\n      \"http-server\": \"^14.1.1\",\n      \"husky\": \"^9.1.6\",\n      \"identity-obj-proxy\": \"^3.0.0\",\n      \"immer\": \"^10.1.1\",\n      \"inquirer\": \"^12.1.0\",\n      \"is-ci\": \"^4.1.0\",\n      \"isomorphic-fetch\": \"^3.0.0\",\n      \"jest\": \"^30.0.3\",\n      \"jest-axe\": \"^10.0.0\",\n      \"jest-canvas-mock\": \"^2.5.2\",\n      \"jest-environment-node\": \"^30.0.0\",\n      \"jest-image-snapshot\": \"^6.4.0\",\n      \"jest-puppeteer\": \"^11.0.0\",\n      \"jquery\": \"^3.7.1\",\n      \"jsdom\": \"^26.0.0\",\n      \"jsonml-to-react-element\": \"^1.1.11\",\n      \"jsonml.js\": \"^0.1.0\",\n      \"lint-staged\": \"^16.1.2\",\n      \"lodash\": \"^4.17.21\",\n      \"lottie-web\": \"^5.12.2\",\n      \"lunar-typescript\": \"^1.7.5\",\n      \"lz-string\": \"^1.5.0\",\n      \"markdown-it\": \"^14.1.0\",\n      \"minimist\": \"^1.2.8\",\n      \"mockdate\": \"^3.0.5\",\n      \"node-fetch\": \"^3.3.2\",\n      \"node-notifier\": \"^10.0.1\",\n      \"open\": \"^10.1.0\",\n      \"ora\": \"^8.1.0\",\n      \"pixelmatch\": \"^7.1.0\",\n      \"pngjs\": \"^7.0.0\",\n      \"prettier\": \"^3.3.3\",\n      \"prettier-plugin-jsdoc\": \"^1.3.0\",\n      \"pretty-format\": \"^30.0.0\",\n      \"prismjs\": \"^1.29.0\",\n      \"puppeteer\": \"^24.0.0\",\n      \"qs\": \"^6.13.0\",\n      \"rc-drawer\": \"^8.0.0\",\n      \"rc-footer\": \"^0.6.8\",\n      \"rc-resize-observer\": \"^1.4.0\",\n      \"rc-virtual-list\": \"^3.14.5\",\n      \"react\": \"^19.0.0\",\n      \"react-copy-to-clipboard\": \"^5.1.0\",\n      \"react-dom\": \"^19.0.0\",\n      \"react-highlight-words\": \"^0.20.0\",\n      \"react-infinite-scroll-component\": \"^6.1.0\",\n      \"react-intersection-observer\": \"^9.13.1\",\n      \"react-intl\": \"^7.1.11\",\n      \"react-resizable\": \"^3.0.5\",\n      \"react-router-dom\": \"^7.0.1\",\n      \"react-sticky-box\": \"^2.0.5\",\n      \"regenerator-runtime\": \"^0.14.1\",\n      \"rehype-stringify\": \"^10.0.0\",\n      \"remark\": \"^15.0.1\",\n      \"remark-cli\": \"^12.0.1\",\n      \"remark-gfm\": \"^4.0.0\",\n      \"remark-lint\": \"^10.0.0\",\n      \"remark-lint-no-undefined-references\": \"^5.0.0\",\n      \"remark-preset-lint-recommended\": \"^7.0.0\",\n      \"remark-rehype\": \"^11.1.0\",\n      \"scroll-into-view-if-needed\": \"^3.1.0\",\n      \"semver\": \"^7.6.3\",\n      \"sharp\": \"^0.34.3\",\n      \"simple-git\": \"^3.26.0\",\n      \"size-limit\": \"^11.1.5\",\n      \"spinnies\": \"^0.5.1\",\n      \"tar\": \"^7.4.3\",\n      \"tsx\": \"^4.19.1\",\n      \"typedoc\": \"^0.28.0\",\n      \"typescript\": \"~5.8.2\",\n      \"vanilla-jsoneditor\": \"^3.0.0\",\n      \"web-streams-polyfill\": \"^4.0.0\",\n      \"webpack\": \"^5.94.0\",\n      \"webpack-bundle-analyzer\": \"^4.10.2\",\n      \"@ant-design/colors\": \"^7.1.0\",\n      \"@ant-design/cssinjs\": \"^1.21.1\",\n      \"@ant-design/cssinjs-utils\": \"^1.1.0\",\n      \"@ant-design/fast-color\": \"^2.0.6\",\n      \"@ant-design/icons\": \"^5.4.0\",\n      \"@babel/runtime\": \"^7.25.6\",\n      \"classnames\": \"^2.5.1\",\n      \"rc-motion\": \"^2.9.2\",\n      \"rc-util\": \"^5.43.0\",\n      \"tbox-nodejs-sdk\": \"^0.0.13\"\n    },\n    \"pkgPeerDependencies\": {\n      \"antd\": \"^5.20.3\",\n      \"react\": \">=18.0.0\",\n      \"react-dom\": \">=18.0.0\"\n    },\n    \"jsx\": \"var __awaiter =\\n  (this && this.__awaiter) ||\\n  function (thisArg, _arguments, P, generator) {\\n    function adopt(value) {\\n      return value instanceof P\\n        ? value\\n        : new P(function (resolve) {\\n            resolve(value);\\n          });\\n    }\\n    return new (P || (P = Promise))(function (resolve, reject) {\\n      function fulfilled(value) {\\n        try {\\n          step(generator.next(value));\\n        } catch (e) {\\n          reject(e);\\n        }\\n      }\\n      function rejected(value) {\\n        try {\\n          step(generator['throw'](value));\\n        } catch (e) {\\n          reject(e);\\n        }\\n      }\\n      function step(result) {\\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\\n      }\\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\\n    });\\n  };\\nimport {\\n  AppstoreAddOutlined,\\n  CloseOutlined,\\n  CloudUploadOutlined,\\n  CommentOutlined,\\n  CopyOutlined,\\n  DislikeOutlined,\\n  LikeOutlined,\\n  OpenAIFilled,\\n  PaperClipOutlined,\\n  PlusOutlined,\\n  ProductOutlined,\\n  ReloadOutlined,\\n  ScheduleOutlined,\\n} from '@ant-design/icons';\\nimport {\\n  Attachments,\\n  Bubble,\\n  Conversations,\\n  Prompts,\\n  Sender,\\n  Suggestion,\\n  Welcome,\\n  useXAgent,\\n  useXChat,\\n} from '@ant-design/x';\\nimport { Button, Image, Popover, Space, Spin, message } from 'antd';\\nimport { createStyles } from 'antd-style';\\nimport dayjs from 'dayjs';\\nimport React, { useEffect, useRef, useState } from 'react';\\nconst MOCK_SESSION_LIST = [\\n  {\\n    key: '5',\\n    label: 'New session',\\n    group: 'Today',\\n  },\\n  {\\n    key: '4',\\n    label: 'What has Ant Design X upgraded?',\\n    group: 'Today',\\n  },\\n  {\\n    key: '3',\\n    label: 'New AGI Hybrid Interface',\\n    group: 'Today',\\n  },\\n  {\\n    key: '2',\\n    label: 'How to quickly install and import components?',\\n    group: 'Yesterday',\\n  },\\n  {\\n    key: '1',\\n    label: 'What is Ant Design X?',\\n    group: 'Yesterday',\\n  },\\n];\\nconst MOCK_SUGGESTIONS = [\\n  { label: 'Write a report', value: 'report' },\\n  { label: 'Draw a picture', value: 'draw' },\\n  {\\n    label: 'Check some knowledge',\\n    value: 'knowledge',\\n    icon: <OpenAIFilled />,\\n    children: [\\n      { label: 'About React', value: 'react' },\\n      { label: 'About Ant Design', value: 'antd' },\\n    ],\\n  },\\n];\\nconst MOCK_QUESTIONS = [\\n  'What has Ant Design X upgraded?',\\n  'What components are in Ant Design X?',\\n  'How to quickly install and import components?',\\n];\\nconst AGENT_PLACEHOLDER = 'Generating content, please wait...';\\nconst useCopilotStyle = createStyles(({ token, css }) => {\\n  return {\\n    copilotChat: css`\\n      display: flex;\\n      flex-direction: column;\\n      background: ${token.colorBgContainer};\\n      color: ${token.colorText};\\n    `,\\n    // chatHeader 样式\\n    chatHeader: css`\\n      height: 52px;\\n      box-sizing: border-box;\\n      border-bottom: 1px solid ${token.colorBorder};\\n      display: flex;\\n      align-items: center;\\n      justify-content: space-between;\\n      padding: 0 10px 0 16px;\\n    `,\\n    headerTitle: css`\\n      font-weight: 600;\\n      font-size: 15px;\\n    `,\\n    headerButton: css`\\n      font-size: 18px;\\n    `,\\n    conversations: css`\\n      width: 300px;\\n      .ant-conversations-list {\\n        padding-inline-start: 0;\\n      }\\n    `,\\n    // chatList 样式\\n    chatList: css`\\n      overflow: auto;\\n      padding-block: 16px;\\n      flex: 1;\\n    `,\\n    chatWelcome: css`\\n      margin-inline: 16px;\\n      padding: 12px 16px;\\n      border-radius: 2px 12px 12px 12px;\\n      background: ${token.colorBgTextHover};\\n      margin-bottom: 16px;\\n    `,\\n    loadingMessage: css`\\n      background-image: linear-gradient(90deg, #ff6b23 0%, #af3cb8 31%, #53b6ff 89%);\\n      background-size: 100% 2px;\\n      background-repeat: no-repeat;\\n      background-position: bottom;\\n    `,\\n    // chatSend 样式\\n    chatSend: css`\\n      padding: 12px;\\n    `,\\n    sendAction: css`\\n      display: flex;\\n      align-items: center;\\n      margin-bottom: 12px;\\n      gap: 8px;\\n    `,\\n    speechButton: css`\\n      font-size: 18px;\\n      color: ${token.colorText} !important;\\n    `,\\n  };\\n});\\nconst Copilot = props => {\\n  const { copilotOpen, setCopilotOpen } = props;\\n  const { styles } = useCopilotStyle();\\n  const attachmentsRef = useRef(null);\\n  const abortController = useRef(null);\\n  // ==================== State ====================\\n  const [messageHistory, setMessageHistory] = useState({});\\n  const [sessionList, setSessionList] = useState(MOCK_SESSION_LIST);\\n  const [curSession, setCurSession] = useState(sessionList[0].key);\\n  const [attachmentsOpen, setAttachmentsOpen] = useState(false);\\n  const [files, setFiles] = useState([]);\\n  const [inputValue, setInputValue] = useState('');\\n  /**\\n   * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\\n   */\\n  // ==================== Runtime ====================\\n  const [agent] = useXAgent({\\n    baseURL: 'https://api.x.ant.design/api/llm_siliconflow_deepSeek-r1-distill-1wen-7b',\\n    model: 'DeepSeek-R1-Distill-Qwen-7B',\\n    dangerouslyApiKey: 'Bearer sk-xxxxxxxxxxxxxxxxxxxx',\\n  });\\n  const loading = agent.isRequesting();\\n  const { messages, onRequest, setMessages } = useXChat({\\n    agent,\\n    requestFallback: (_, { error }) => {\\n      if (error.name === 'AbortError') {\\n        return {\\n          content: 'Request is aborted',\\n          role: 'assistant',\\n        };\\n      }\\n      return {\\n        content: 'Request failed, please try again!',\\n        role: 'assistant',\\n      };\\n    },\\n    transformMessage: info => {\\n      var _a, _b, _c, _d, _e, _f, _g;\\n      const { originMessage, chunk } = info || {};\\n      let currentContent = '';\\n      let currentThink = '';\\n      try {\\n        if (\\n          (chunk === null || chunk === void 0 ? void 0 : chunk.data) &&\\n          !(chunk === null || chunk === void 0 ? void 0 : chunk.data.includes('DONE'))\\n        ) {\\n          const message = JSON.parse(chunk === null || chunk === void 0 ? void 0 : chunk.data);\\n          currentThink =\\n            ((_c =\\n              (_b =\\n                (_a = message === null || message === void 0 ? void 0 : message.choices) === null ||\\n                _a === void 0\\n                  ? void 0\\n                  : _a[0]) === null || _b === void 0\\n                ? void 0\\n                : _b.delta) === null || _c === void 0\\n              ? void 0\\n              : _c.reasoning_content) || '';\\n          currentContent =\\n            ((_f =\\n              (_e =\\n                (_d = message === null || message === void 0 ? void 0 : message.choices) === null ||\\n                _d === void 0\\n                  ? void 0\\n                  : _d[0]) === null || _e === void 0\\n                ? void 0\\n                : _e.delta) === null || _f === void 0\\n              ? void 0\\n              : _f.content) || '';\\n        }\\n      } catch (error) {\\n        console.error(error);\\n      }\\n      let content = '';\\n      if (\\n        !(originMessage === null || originMessage === void 0 ? void 0 : originMessage.content) &&\\n        currentThink\\n      ) {\\n        content = `<think>${currentThink}`;\\n      } else if (\\n        ((_g =\\n          originMessage === null || originMessage === void 0 ? void 0 : originMessage.content) ===\\n          null || _g === void 0\\n          ? void 0\\n          : _g.includes('<think>')) &&\\n        !(originMessage === null || originMessage === void 0\\n          ? void 0\\n          : originMessage.content.includes('</think>')) &&\\n        currentContent\\n      ) {\\n        content = `${originMessage === null || originMessage === void 0 ? void 0 : originMessage.content}</think>${currentContent}`;\\n      } else {\\n        content = `${(originMessage === null || originMessage === void 0 ? void 0 : originMessage.content) || ''}${currentThink}${currentContent}`;\\n      }\\n      return {\\n        content: content,\\n        role: 'assistant',\\n      };\\n    },\\n    resolveAbortController: controller => {\\n      abortController.current = controller;\\n    },\\n  });\\n  // ==================== Event ====================\\n  const handleUserSubmit = val => {\\n    var _a;\\n    onRequest({\\n      stream: true,\\n      message: { content: val, role: 'user' },\\n    });\\n    // session title mock\\n    if (\\n      ((_a = sessionList.find(i => i.key === curSession)) === null || _a === void 0\\n        ? void 0\\n        : _a.label) === 'New session'\\n    ) {\\n      setSessionList(\\n        sessionList.map(i =>\\n          i.key !== curSession\\n            ? i\\n            : Object.assign(Object.assign({}, i), {\\n                label: val === null || val === void 0 ? void 0 : val.slice(0, 20),\\n              }),\\n        ),\\n      );\\n    }\\n  };\\n  const onPasteFile = (_, files) => {\\n    var _a;\\n    for (const file of files) {\\n      (_a = attachmentsRef.current) === null || _a === void 0 ? void 0 : _a.upload(file);\\n    }\\n    setAttachmentsOpen(true);\\n  };\\n  // ==================== Nodes ====================\\n  const chatHeader = (\\n    <div className={styles.chatHeader}>\\n      <div className={styles.headerTitle}>✨ AI Copilot</div>\\n      <Space size={0}>\\n        <Button\\n          type=\\\"text\\\"\\n          icon={<PlusOutlined />}\\n          onClick={() => {\\n            var _a;\\n            if (agent.isRequesting()) {\\n              message.error(\\n                'Message is Requesting, you can create a new conversation after request done or abort it right now...',\\n              );\\n              return;\\n            }\\n            if (messages === null || messages === void 0 ? void 0 : messages.length) {\\n              const timeNow = dayjs().valueOf().toString();\\n              (_a = abortController.current) === null || _a === void 0 ? void 0 : _a.abort();\\n              // The abort execution will trigger an asynchronous requestFallback, which may lead to timing issues.\\n              // In future versions, the sessionId capability will be added to resolve this problem.\\n              setTimeout(() => {\\n                setSessionList([\\n                  { key: timeNow, label: 'New session', group: 'Today' },\\n                  ...sessionList,\\n                ]);\\n                setCurSession(timeNow);\\n                setMessages([]);\\n              }, 100);\\n            } else {\\n              message.error('It is now a new conversation.');\\n            }\\n          }}\\n          className={styles.headerButton}\\n        />\\n        <Popover\\n          placement=\\\"bottom\\\"\\n          styles={{ body: { padding: 0, maxHeight: 600 } }}\\n          content={\\n            <Conversations\\n              items={\\n                sessionList === null || sessionList === void 0\\n                  ? void 0\\n                  : sessionList.map(i =>\\n                      i.key === curSession\\n                        ? Object.assign(Object.assign({}, i), { label: `[current] ${i.label}` })\\n                        : i,\\n                    )\\n              }\\n              activeKey={curSession}\\n              groupable\\n              onActiveChange={val =>\\n                __awaiter(void 0, void 0, void 0, function* () {\\n                  var _a;\\n                  (_a = abortController.current) === null || _a === void 0 ? void 0 : _a.abort();\\n                  // The abort execution will trigger an asynchronous requestFallback, which may lead to timing issues.\\n                  // In future versions, the sessionId capability will be added to resolve this problem.\\n                  setTimeout(() => {\\n                    setCurSession(val);\\n                    setMessages(\\n                      (messageHistory === null || messageHistory === void 0\\n                        ? void 0\\n                        : messageHistory[val]) || [],\\n                    );\\n                  }, 100);\\n                })\\n              }\\n              styles={{ item: { padding: '0 8px' } }}\\n              className={styles.conversations}\\n            />\\n          }\\n        >\\n          <Button type=\\\"text\\\" icon={<CommentOutlined />} className={styles.headerButton} />\\n        </Popover>\\n        <Button\\n          type=\\\"text\\\"\\n          icon={<CloseOutlined />}\\n          onClick={() => setCopilotOpen(false)}\\n          className={styles.headerButton}\\n        />\\n      </Space>\\n    </div>\\n  );\\n  const chatList = (\\n    <div className={styles.chatList}>\\n      {(messages === null || messages === void 0 ? void 0 : messages.length) ? (\\n        /** 消息列表 */\\n        <Bubble.List\\n          style={{ height: '100%', paddingInline: 16 }}\\n          items={\\n            messages === null || messages === void 0\\n              ? void 0\\n              : messages.map(i =>\\n                  Object.assign(Object.assign({}, i.message), {\\n                    classNames: {\\n                      content: i.status === 'loading' ? styles.loadingMessage : '',\\n                    },\\n                    typing:\\n                      i.status === 'loading' ? { step: 5, interval: 20, suffix: <>💗</> } : false,\\n                  }),\\n                )\\n          }\\n          roles={{\\n            assistant: {\\n              placement: 'start',\\n              footer: (\\n                <div style={{ display: 'flex' }}>\\n                  <Button type=\\\"text\\\" size=\\\"small\\\" icon={<ReloadOutlined />} />\\n                  <Button type=\\\"text\\\" size=\\\"small\\\" icon={<CopyOutlined />} />\\n                  <Button type=\\\"text\\\" size=\\\"small\\\" icon={<LikeOutlined />} />\\n                  <Button type=\\\"text\\\" size=\\\"small\\\" icon={<DislikeOutlined />} />\\n                </div>\\n              ),\\n              loadingRender: () => (\\n                <Space>\\n                  <Spin size=\\\"small\\\" />\\n                  {AGENT_PLACEHOLDER}\\n                </Space>\\n              ),\\n            },\\n            user: { placement: 'end' },\\n          }}\\n        />\\n      ) : (\\n        /** 没有消息时的 welcome */\\n        <>\\n          <Welcome\\n            variant=\\\"borderless\\\"\\n            title=\\\"👋 Hello, I'm Ant Design X\\\"\\n            description=\\\"Base on Ant Design, AGI product interface solution, create a better intelligent vision~\\\"\\n            className={styles.chatWelcome}\\n          />\\n\\n          <Prompts\\n            vertical\\n            title=\\\"I can help：\\\"\\n            items={MOCK_QUESTIONS.map(i => ({ key: i, description: i }))}\\n            onItemClick={info => {\\n              var _a;\\n              return handleUserSubmit(\\n                (_a = info === null || info === void 0 ? void 0 : info.data) === null ||\\n                  _a === void 0\\n                  ? void 0\\n                  : _a.description,\\n              );\\n            }}\\n            style={{\\n              marginInline: 16,\\n            }}\\n            styles={{\\n              title: { fontSize: 14 },\\n            }}\\n          />\\n        </>\\n      )}\\n    </div>\\n  );\\n  const sendHeader = (\\n    <Sender.Header\\n      title=\\\"Upload File\\\"\\n      styles={{ content: { padding: 0 } }}\\n      open={attachmentsOpen}\\n      onOpenChange={setAttachmentsOpen}\\n      forceRender\\n    >\\n      <Attachments\\n        ref={attachmentsRef}\\n        beforeUpload={() => false}\\n        items={files}\\n        onChange={({ fileList }) => setFiles(fileList)}\\n        placeholder={type =>\\n          type === 'drop'\\n            ? { title: 'Drop file here' }\\n            : {\\n                icon: <CloudUploadOutlined />,\\n                title: 'Upload files',\\n                description: 'Click or drag files to this area to upload',\\n              }\\n        }\\n      />\\n    </Sender.Header>\\n  );\\n  const chatSender = (\\n    <div className={styles.chatSend}>\\n      <div className={styles.sendAction}>\\n        <Button\\n          icon={<ScheduleOutlined />}\\n          onClick={() => handleUserSubmit('What has Ant Design X upgraded?')}\\n        >\\n          Upgrades\\n        </Button>\\n        <Button\\n          icon={<ProductOutlined />}\\n          onClick={() => handleUserSubmit('What component assets are available in Ant Design X?')}\\n        >\\n          Components\\n        </Button>\\n        <Button icon={<AppstoreAddOutlined />}>More</Button>\\n      </div>\\n\\n      {/** 输入框 */}\\n      <Suggestion items={MOCK_SUGGESTIONS} onSelect={itemVal => setInputValue(`[${itemVal}]:`)}>\\n        {({ onTrigger, onKeyDown }) => (\\n          <Sender\\n            loading={loading}\\n            value={inputValue}\\n            onChange={v => {\\n              onTrigger(v === '/');\\n              setInputValue(v);\\n            }}\\n            onSubmit={() => {\\n              handleUserSubmit(inputValue);\\n              setInputValue('');\\n            }}\\n            onCancel={() => {\\n              var _a;\\n              (_a = abortController.current) === null || _a === void 0 ? void 0 : _a.abort();\\n            }}\\n            allowSpeech\\n            placeholder=\\\"Ask or input / use skills\\\"\\n            onKeyDown={onKeyDown}\\n            header={sendHeader}\\n            prefix={\\n              <Button\\n                type=\\\"text\\\"\\n                icon={<PaperClipOutlined style={{ fontSize: 18 }} />}\\n                onClick={() => setAttachmentsOpen(!attachmentsOpen)}\\n              />\\n            }\\n            onPasteFile={onPasteFile}\\n            actions={(_, info) => {\\n              const { SendButton, LoadingButton, SpeechButton } = info.components;\\n              return (\\n                <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\\n                  <SpeechButton className={styles.speechButton} />\\n                  {loading ? <LoadingButton type=\\\"default\\\" /> : <SendButton type=\\\"primary\\\" />}\\n                </div>\\n              );\\n            }}\\n          />\\n        )}\\n      </Suggestion>\\n    </div>\\n  );\\n  useEffect(() => {\\n    // history mock\\n    if (messages === null || messages === void 0 ? void 0 : messages.length) {\\n      setMessageHistory(prev => Object.assign(Object.assign({}, prev), { [curSession]: messages }));\\n    }\\n  }, [messages]);\\n  return (\\n    <div className={styles.copilotChat} style={{ width: copilotOpen ? 400 : 0 }}>\\n      {/** 对话区 - header */}\\n      {chatHeader}\\n\\n      {/** 对话区 - 消息列表 */}\\n      {chatList}\\n\\n      {/** 对话区 - 输入框 */}\\n      {chatSender}\\n    </div>\\n  );\\n};\\nconst useWorkareaStyle = createStyles(({ token, css }) => {\\n  return {\\n    copilotWrapper: css`\\n      min-width: 1000px;\\n      height: 100vh;\\n      display: flex;\\n    `,\\n    workarea: css`\\n      flex: 1;\\n      background: ${token.colorBgLayout};\\n      display: flex;\\n      flex-direction: column;\\n    `,\\n    workareaHeader: css`\\n      box-sizing: border-box;\\n      height: 52px;\\n      display: flex;\\n      align-items: center;\\n      justify-content: space-between;\\n      padding: 0 48px 0 28px;\\n      border-bottom: 1px solid ${token.colorBorder};\\n    `,\\n    headerTitle: css`\\n      font-weight: 600;\\n      font-size: 15px;\\n      color: ${token.colorText};\\n      display: flex;\\n      align-items: center;\\n      gap: 8px;\\n    `,\\n    headerButton: css`\\n      background-image: linear-gradient(78deg, #8054f2 7%, #3895da 95%);\\n      border-radius: 12px;\\n      height: 24px;\\n      width: 93px;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      color: #fff;\\n      cursor: pointer;\\n      font-size: 12px;\\n      font-weight: 600;\\n      transition: all 0.3s;\\n      &:hover {\\n        opacity: 0.8;\\n      }\\n    `,\\n    workareaBody: css`\\n      flex: 1;\\n      padding: 16px;\\n      background: ${token.colorBgContainer};\\n      border-radius: 16px;\\n      min-height: 0;\\n    `,\\n    bodyContent: css`\\n      overflow: auto;\\n      height: 100%;\\n      padding-right: 10px;\\n    `,\\n    bodyText: css`\\n      color: ${token.colorText};\\n      padding: 8px;\\n    `,\\n  };\\n});\\nconst CopilotDemo = () => {\\n  const { styles: workareaStyles } = useWorkareaStyle();\\n  // ==================== State =================\\n  const [copilotOpen, setCopilotOpen] = useState(true);\\n  // ==================== Render =================\\n  return (\\n    <div className={workareaStyles.copilotWrapper}>\\n      {/** 左侧工作区 */}\\n      <div className={workareaStyles.workarea}>\\n        <div className={workareaStyles.workareaHeader}>\\n          <div className={workareaStyles.headerTitle}>\\n            <img\\n              src=\\\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*eco6RrQhxbMAAAAAAAAAAAAADgCCAQ/original\\\"\\n              draggable={false}\\n              alt=\\\"logo\\\"\\n              width={20}\\n              height={20}\\n            />\\n            Ant Design X\\n          </div>\\n          {!copilotOpen && (\\n            <div onClick={() => setCopilotOpen(true)} className={workareaStyles.headerButton}>\\n              ✨ AI Copilot\\n            </div>\\n          )}\\n        </div>\\n\\n        <div\\n          className={workareaStyles.workareaBody}\\n          style={{ margin: copilotOpen ? 16 : '16px 48px' }}\\n        >\\n          <div className={workareaStyles.bodyContent}>\\n            <Image\\n              src=\\\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*48RLR41kwHIAAAAAAAAAAAAADgCCAQ/fmt.webp\\\"\\n              preview={false}\\n            />\\n            <div className={workareaStyles.bodyText}>\\n              <h4>What is the RICH design paradigm?</h4>\\n              <div>\\n                RICH is an AI interface design paradigm we propose, similar to how the WIMP paradigm\\n                relates to graphical user interfaces.\\n              </div>\\n              <br />\\n              <div>\\n                The ACM SIGCHI 2005 (the premier conference on human-computer interaction) defined\\n                that the core issues of human-computer interaction can be divided into three levels:\\n              </div>\\n              <ul>\\n                <li>\\n                  Interface Paradigm Layer: Defines the design elements of human-computer\\n                  interaction interfaces, guiding designers to focus on core issues.\\n                </li>\\n                <li>\\n                  User model layer: Build an interface experience evaluation model to measure the\\n                  quality of the interface experience.\\n                </li>\\n                <li>\\n                  Software framework layer: The underlying support algorithms and data structures\\n                  for human-computer interfaces, which are the contents hidden behind the front-end\\n                  interface.\\n                </li>\\n              </ul>\\n              <div>\\n                The interface paradigm is the aspect that designers need to focus on and define the\\n                most when a new human-computer interaction technology is born. The interface\\n                paradigm defines the design elements that designers should pay attention to, and\\n                based on this, it is possible to determine what constitutes good design and how to\\n                achieve it.\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      {/** 右侧对话区 */}\\n      <Copilot copilotOpen={copilotOpen} setCopilotOpen={setCopilotOpen} />\\n    </div>\\n  );\\n};\\nexport default CopilotDemo;\\n\"\n  }\n}} /></>\n      </Suspense>\n    </DumiPage>\n  )\n}\n\nexport default DumiMarkdownContent;"],"names":[],"mappings":"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"}