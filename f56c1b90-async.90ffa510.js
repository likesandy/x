(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]||[]).push([["f56c1b90"],{"2ff7067e":function(e,n,t){"use strict";t.d(n,"__esModule",{value:!0}),t.d(n,"texts",{enumerable:!0,get:function(){return r;}}),t("e8a43618");let r=[{value:"Transform SSE protocol ",paraId:0,tocIndex:0},{value:"ReadableStream",paraId:0,tocIndex:0},{value:" to ",paraId:0,tocIndex:0},{value:"Record",paraId:0,tocIndex:0},{value:"Decode and read any protocol ",paraId:0,tocIndex:0},{value:"ReadableStream",paraId:0,tocIndex:0},{value:"Common ",paraId:1,tocIndex:1},{value:"ReadableStream",paraId:1,tocIndex:1},{value:" instances, such as ",paraId:1,tocIndex:1},{value:"await fetch(...).body",paraId:1,tocIndex:1},{value:", usage example:",paraId:1,tocIndex:1},{value:"import { XStream } from '@ant-design/x';\n\nasync function request() {\n  const response = await fetch();\n  // .....\n\n  for await (const chunk of XStream({\n    readableStream: response.body,\n  })) {\n    console.log(chunk);\n  }\n}\n",paraId:2,tocIndex:1},{value:" ",paraId:3},{value:"Property",paraId:4,tocIndex:6},{value:"Description",paraId:4,tocIndex:6},{value:"Type",paraId:4,tocIndex:6},{value:"Default",paraId:4,tocIndex:6},{value:"Version",paraId:4,tocIndex:6},{value:"readableStream",paraId:4,tocIndex:6},{value:"Readable stream of binary data",paraId:4,tocIndex:6},{value:"ReadableStream<'Uint8Array'>",paraId:4,tocIndex:6},{value:"-",paraId:4,tocIndex:6},{value:"-",paraId:4,tocIndex:6},{value:"transformStream",paraId:4,tocIndex:6},{value:"Support customizable transformStream to transform streams",paraId:4,tocIndex:6},{value:"TransformStream<string, T>",paraId:4,tocIndex:6},{value:"sseTransformStream",paraId:4,tocIndex:6},{value:"-",paraId:4,tocIndex:6}];},f56c1b90:function(e,n,t){"use strict";t.d(n,"__esModule",{value:!0}),t.d(n,"default",{enumerable:!0,get:function(){return u;}});var r=t("777fffbe"),s=t("8090cfc0"),a=r._(t("33c468da")),o=r._(t("a4c80678")),i=r._(t("ddea4080")),c=t("3a2876c3"),l=r._(t("b710171f")),d=t("3e6b097d"),p=t("2ff7067e"),u=function(){return(0,s.jsx)(c.DumiPage,{children:(0,s.jsx)(d.Suspense,{fallback:(0,s.jsx)(l.default,{}),children:(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)("div",{className:"markdown",children:[(0,s.jsxs)("h2",{id:"when-to-use",children:[(0,s.jsx)(i.default,{"aria-hidden":"true",tabIndex:"-1",href:"#when-to-use",sourceType:"a",children:(0,s.jsx)("span",{className:"icon icon-link"})}),"When To Use"]}),(0,s.jsxs)("ul",{children:[(0,s.jsxs)("li",{children:[p.texts[0].value,(0,s.jsx)("code",{children:p.texts[1].value}),p.texts[2].value,(0,s.jsx)("code",{children:p.texts[3].value})]}),(0,s.jsxs)("li",{children:[p.texts[4].value,(0,s.jsx)("code",{children:p.texts[5].value})]})]}),(0,s.jsxs)("h2",{id:"use",children:[(0,s.jsx)(i.default,{"aria-hidden":"true",tabIndex:"-1",href:"#use",sourceType:"a",children:(0,s.jsx)("span",{className:"icon icon-link"})}),"Use"]}),(0,s.jsxs)("p",{children:[p.texts[6].value,(0,s.jsx)("code",{children:p.texts[7].value}),p.texts[8].value,(0,s.jsx)("code",{children:p.texts[9].value}),p.texts[10].value]}),(0,s.jsx)(a.default,{lang:"js",children:p.texts[11].value}),(0,s.jsxs)("h2",{id:"examples",children:[(0,s.jsx)(i.default,{"aria-hidden":"true",tabIndex:"-1",href:"#examples",sourceType:"a",children:(0,s.jsx)("span",{className:"icon icon-link"})}),"Examples"]})]}),(0,s.jsx)(c.DumiDemo,{demo:{id:"components-x-stream-demo-default-protocol"},previewerProps:{title:"Default Protocol - SSE",filename:"components/x-stream/demo/default-protocol.tsx",pkgDependencyList:{"@ant-design/tools":"^19.0.2","@ant-design/v5-patch-for-react-19":"^1.0.3","@antv/gpt-vis":"^0.5.2","@biomejs/biome":"^2.0.5","@codecov/webpack-plugin":"^1.4.0","@codesandbox/sandpack-react":"^2.19.8","@emotion/react":"^11.13.5","@emotion/server":"^11.11.0","@happy-dom/jest-environment":"^18.0.1","@ianvs/prettier-plugin-sort-imports":"^4.3.1","@madccc/duplicate-package-checker-webpack-plugin":"^1.0.0","@microflash/rehype-figure":"^2.1.1","@npmcli/run-script":"^9.0.1","@octokit/rest":"^21.0.2","@petercatai/assistant":"^2.0.13","@prettier/sync":"^0.6.1","@qixian.cs/github-contributors-list":"^2.0.2","@rc-component/father-plugin":"^2.0.4","@rc-component/np":"^1.0.3","@rc-component/trigger":"^2.2.3","@size-limit/file":"^11.1.5","@stackblitz/sdk":"^1.11.0","@testing-library/dom":"^10.4.0","@testing-library/jest-dom":"^6.5.0","@testing-library/react":"^16.0.1","@testing-library/user-event":"^14.5.2","@types/adm-zip":"^0.5.5","@types/ali-oss":"^6.16.11","@types/cli-progress":"^3.11.6","@types/fs-extra":"^11.0.4","@types/gtag.js":"^0.0.20","@types/http-server":"^0.12.4","@types/inquirer":"^9.0.7","@types/isomorphic-fetch":"^0.0.39","@types/jest":"^29.5.13","@types/jest-axe":"^3.5.9","@types/jest-environment-puppeteer":"^5.0.6","@types/jest-image-snapshot":"^6.4.0","@types/jquery":"^3.5.30","@types/jsdom":"^21.1.7","@types/lodash":"^4.17.7","@types/markdown-it":"^14.1.2","@types/minimist":"^1.2.5","@types/node":"^24.0.3","@types/ora":"^3.2.0","@types/pixelmatch":"^5.2.6","@types/pngjs":"^6.0.5","@types/prismjs":"^1.26.4","@types/progress":"^2.0.7","@types/qs":"^6.9.16","@types/react":"^19.0.2","@types/react-copy-to-clipboard":"^5.0.7","@types/react-dom":"^19.0.2","@types/react-highlight-words":"^0.20.0","@types/react-resizable":"^3.0.8","@types/semver":"^7.5.8","@types/spinnies":"^0.5.3","@types/tar":"^6.1.13","@types/throttle-debounce":"^5.0.2","@types/warning":"^3.0.3","@umijs/fabric":"^4.0.1","adm-zip":"^0.5.16","ali-oss":"^6.21.0",antd:"^5.25.1","antd-style":"^3.6.3","antd-token-previewer":"^2.0.8",axios:"^1.7.7",browserslist:"^4.23.3","browserslist-to-esbuild":"^2.1.1",chalk:"^5.4.1",cheerio:"^1.0.0","circular-dependency-plugin":"^5.2.2","cli-progress":"^3.12.0","copy-to-clipboard":"^3.3.3","cross-env":"^10.0.0","cross-fetch":"^4.0.0",crypto:"^1.0.1",dayjs:"^1.11.13",dekko:"^0.2.1",dumi:"^2.4.17","dumi-plugin-color-chunk":"^1.1.2","esbuild-loader":"^4.2.2","fast-glob":"^3.3.2",father:"^4.5.4","fetch-jsonp":"^1.3.0","fs-extra":"^11.2.0","gh-pages":"^6.1.1",glob:"^11.0.0","happy-dom":"^18.0.1",html2sketch:"^1.0.2","http-server":"^14.1.1",husky:"^9.1.6","identity-obj-proxy":"^3.0.0",immer:"^10.1.1",inquirer:"^12.1.0","is-ci":"^4.1.0","isomorphic-fetch":"^3.0.0",jest:"^30.0.3","jest-axe":"^10.0.0","jest-canvas-mock":"^2.5.2","jest-environment-node":"^30.0.0","jest-image-snapshot":"^6.4.0","jest-puppeteer":"^11.0.0",jquery:"^3.7.1",jsdom:"^26.0.0","jsonml-to-react-element":"^1.1.11","jsonml.js":"^0.1.0","lint-staged":"^16.1.2",lodash:"^4.17.21","lottie-web":"^5.12.2","lunar-typescript":"^1.7.5","lz-string":"^1.5.0","markdown-it":"^14.1.0",minimist:"^1.2.8",mockdate:"^3.0.5","node-fetch":"^3.3.2","node-notifier":"^10.0.1",open:"^10.1.0",ora:"^8.1.0",pixelmatch:"^7.1.0",pngjs:"^7.0.0",prettier:"^3.3.3","prettier-plugin-jsdoc":"^1.3.0","pretty-format":"^30.0.0",prismjs:"^1.29.0",puppeteer:"^24.0.0",qs:"^6.13.0","rc-drawer":"^8.0.0","rc-footer":"^0.6.8","rc-resize-observer":"^1.4.0","rc-virtual-list":"^3.14.5",react:"^19.0.0","react-copy-to-clipboard":"^5.1.0","react-dom":"^19.0.0","react-highlight-words":"^0.20.0","react-infinite-scroll-component":"^6.1.0","react-intersection-observer":"^9.13.1","react-intl":"^7.1.11","react-resizable":"^3.0.5","react-router-dom":"^7.0.1","react-sticky-box":"^2.0.5","regenerator-runtime":"^0.14.1","rehype-stringify":"^10.0.0",remark:"^15.0.1","remark-cli":"^12.0.1","remark-gfm":"^4.0.0","remark-lint":"^10.0.0","remark-lint-no-undefined-references":"^5.0.0","remark-preset-lint-recommended":"^7.0.0","remark-rehype":"^11.1.0","scroll-into-view-if-needed":"^3.1.0",semver:"^7.6.3",sharp:"^0.34.3","simple-git":"^3.26.0","size-limit":"^11.1.5",spinnies:"^0.5.1",tar:"^7.4.3",tsx:"^4.19.1",typedoc:"^0.28.0",typescript:"~5.8.2","vanilla-jsoneditor":"^3.0.0","web-streams-polyfill":"^4.0.0",webpack:"^5.94.0","webpack-bundle-analyzer":"^4.10.2","@ant-design/colors":"^7.1.0","@ant-design/cssinjs":"^1.21.1","@ant-design/cssinjs-utils":"^1.1.0","@ant-design/fast-color":"^2.0.6","@ant-design/icons":"^5.4.0","@babel/runtime":"^7.25.6",classnames:"^2.5.1","rc-motion":"^2.9.2","rc-util":"^5.43.0","tbox-nodejs-sdk":"^0.0.13"},pkgPeerDependencies:{antd:"^5.20.3",react:">=18.0.0","react-dom":">=18.0.0"},jsx:"var __awaiter =\n  (this && this.__awaiter) ||\n  function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P\n        ? value\n        : new P(function (resolve) {\n            resolve(value);\n          });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator['throw'](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\nvar __asyncValues =\n  (this && this.__asyncValues) ||\n  function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError('Symbol.asyncIterator is not defined.');\n    var m = o[Symbol.asyncIterator],\n      i;\n    return m\n      ? m.call(o)\n      : ((o = typeof __values === 'function' ? __values(o) : o[Symbol.iterator]()),\n        (i = {}),\n        verb('next'),\n        verb('throw'),\n        verb('return'),\n        (i[Symbol.asyncIterator] = function () {\n          return this;\n        }),\n        i);\n    function verb(n) {\n      i[n] =\n        o[n] &&\n        function (v) {\n          return new Promise(function (resolve, reject) {\n            ((v = o[n](v)), settle(resolve, reject, v.done, v.value));\n          });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n      Promise.resolve(v).then(function (v) {\n        resolve({ value: v, done: d });\n      }, reject);\n    }\n  };\nimport { TagsOutlined } from '@ant-design/icons';\nimport { Bubble, ThoughtChain, XStream } from '@ant-design/x';\nimport { Button, Splitter } from 'antd';\nimport React from 'react';\nconst contentChunks = ['He', 'llo', ', w', 'or', 'ld!'];\nfunction mockReadableStream() {\n  const sseChunks = [];\n  for (let i = 0; i < contentChunks.length; i++) {\n    const sseEventPart = `event: message\\ndata: {\"id\":\"${i}\",\"content\":\"${contentChunks[i]}\"}\\n\\n`;\n    sseChunks.push(sseEventPart);\n  }\n  return new ReadableStream({\n    start(controller) {\n      return __awaiter(this, void 0, void 0, function* () {\n        for (const chunk of sseChunks) {\n          yield new Promise(resolve => setTimeout(resolve, 100));\n          controller.enqueue(new TextEncoder().encode(chunk));\n        }\n        controller.close();\n      });\n    },\n  });\n}\nconst App = () => {\n  const [lines, setLines] = React.useState([]);\n  const content = lines.map(line => JSON.parse(line.data).content).join('');\n  function readStream() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, e_1, _b, _c;\n      try {\n        // \u{1F31F} Read the stream\n        for (\n          var _d = true,\n            _e = __asyncValues(\n              XStream({\n                readableStream: mockReadableStream(),\n              }),\n            ),\n            _f;\n          (_f = yield _e.next()), (_a = _f.done), !_a;\n          _d = true\n        ) {\n          _c = _f.value;\n          _d = false;\n          const chunk = _c;\n          console.log(chunk);\n          setLines(pre => [...pre, chunk]);\n        }\n      } catch (e_1_1) {\n        e_1 = { error: e_1_1 };\n      } finally {\n        try {\n          if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    });\n  }\n  return (\n    <Splitter>\n      <Splitter.Panel>\n        {/* -------------- Emit -------------- */}\n        <Button type=\"primary\" onClick={readStream} style={{ marginBottom: 16 }}>\n          Mock Default Protocol - SSE\n        </Button>\n        {/* -------------- Content Concat -------------- */}\n        {content && <Bubble content={content} />}\n      </Splitter.Panel>\n      {/* -------------- Log -------------- */}\n      <Splitter.Panel style={{ marginLeft: 16 }}>\n        <ThoughtChain\n          items={\n            lines.length\n              ? [\n                  {\n                    title: 'Mock Default Protocol - Log',\n                    status: 'success',\n                    icon: <TagsOutlined />,\n                    content: (\n                      <pre style={{ overflow: 'scroll' }}>\n                        {lines.map(i => (\n                          <code key={i.data}>{i.data}</code>\n                        ))}\n                      </pre>\n                    ),\n                  },\n                ]\n              : []\n          }\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\nexport default App;\n",description:'<blockquote>\n<p>SSE - <a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events">https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events</a></p>\n</blockquote>\n<p>The default <code>transformStream</code> in XStream is an SSE protocol stream transformer and is optional. The <code>readableStream</code> accepts a <code>new ReadableStream(...)</code> instance, such as <code>await fetch(...).body</code></p>'}}),(0,s.jsx)("div",{className:"markdown",children:(0,s.jsx)("p",{children:p.texts[12].value})}),(0,s.jsx)(c.DumiDemo,{demo:{id:"components-x-stream-demo-custom-protocol"},previewerProps:{title:"Custom Protocol",filename:"components/x-stream/demo/custom-protocol.tsx",pkgDependencyList:{"@ant-design/tools":"^19.0.2","@ant-design/v5-patch-for-react-19":"^1.0.3","@antv/gpt-vis":"^0.5.2","@biomejs/biome":"^2.0.5","@codecov/webpack-plugin":"^1.4.0","@codesandbox/sandpack-react":"^2.19.8","@emotion/react":"^11.13.5","@emotion/server":"^11.11.0","@happy-dom/jest-environment":"^18.0.1","@ianvs/prettier-plugin-sort-imports":"^4.3.1","@madccc/duplicate-package-checker-webpack-plugin":"^1.0.0","@microflash/rehype-figure":"^2.1.1","@npmcli/run-script":"^9.0.1","@octokit/rest":"^21.0.2","@petercatai/assistant":"^2.0.13","@prettier/sync":"^0.6.1","@qixian.cs/github-contributors-list":"^2.0.2","@rc-component/father-plugin":"^2.0.4","@rc-component/np":"^1.0.3","@rc-component/trigger":"^2.2.3","@size-limit/file":"^11.1.5","@stackblitz/sdk":"^1.11.0","@testing-library/dom":"^10.4.0","@testing-library/jest-dom":"^6.5.0","@testing-library/react":"^16.0.1","@testing-library/user-event":"^14.5.2","@types/adm-zip":"^0.5.5","@types/ali-oss":"^6.16.11","@types/cli-progress":"^3.11.6","@types/fs-extra":"^11.0.4","@types/gtag.js":"^0.0.20","@types/http-server":"^0.12.4","@types/inquirer":"^9.0.7","@types/isomorphic-fetch":"^0.0.39","@types/jest":"^29.5.13","@types/jest-axe":"^3.5.9","@types/jest-environment-puppeteer":"^5.0.6","@types/jest-image-snapshot":"^6.4.0","@types/jquery":"^3.5.30","@types/jsdom":"^21.1.7","@types/lodash":"^4.17.7","@types/markdown-it":"^14.1.2","@types/minimist":"^1.2.5","@types/node":"^24.0.3","@types/ora":"^3.2.0","@types/pixelmatch":"^5.2.6","@types/pngjs":"^6.0.5","@types/prismjs":"^1.26.4","@types/progress":"^2.0.7","@types/qs":"^6.9.16","@types/react":"^19.0.2","@types/react-copy-to-clipboard":"^5.0.7","@types/react-dom":"^19.0.2","@types/react-highlight-words":"^0.20.0","@types/react-resizable":"^3.0.8","@types/semver":"^7.5.8","@types/spinnies":"^0.5.3","@types/tar":"^6.1.13","@types/throttle-debounce":"^5.0.2","@types/warning":"^3.0.3","@umijs/fabric":"^4.0.1","adm-zip":"^0.5.16","ali-oss":"^6.21.0",antd:"^5.25.1","antd-style":"^3.6.3","antd-token-previewer":"^2.0.8",axios:"^1.7.7",browserslist:"^4.23.3","browserslist-to-esbuild":"^2.1.1",chalk:"^5.4.1",cheerio:"^1.0.0","circular-dependency-plugin":"^5.2.2","cli-progress":"^3.12.0","copy-to-clipboard":"^3.3.3","cross-env":"^10.0.0","cross-fetch":"^4.0.0",crypto:"^1.0.1",dayjs:"^1.11.13",dekko:"^0.2.1",dumi:"^2.4.17","dumi-plugin-color-chunk":"^1.1.2","esbuild-loader":"^4.2.2","fast-glob":"^3.3.2",father:"^4.5.4","fetch-jsonp":"^1.3.0","fs-extra":"^11.2.0","gh-pages":"^6.1.1",glob:"^11.0.0","happy-dom":"^18.0.1",html2sketch:"^1.0.2","http-server":"^14.1.1",husky:"^9.1.6","identity-obj-proxy":"^3.0.0",immer:"^10.1.1",inquirer:"^12.1.0","is-ci":"^4.1.0","isomorphic-fetch":"^3.0.0",jest:"^30.0.3","jest-axe":"^10.0.0","jest-canvas-mock":"^2.5.2","jest-environment-node":"^30.0.0","jest-image-snapshot":"^6.4.0","jest-puppeteer":"^11.0.0",jquery:"^3.7.1",jsdom:"^26.0.0","jsonml-to-react-element":"^1.1.11","jsonml.js":"^0.1.0","lint-staged":"^16.1.2",lodash:"^4.17.21","lottie-web":"^5.12.2","lunar-typescript":"^1.7.5","lz-string":"^1.5.0","markdown-it":"^14.1.0",minimist:"^1.2.8",mockdate:"^3.0.5","node-fetch":"^3.3.2","node-notifier":"^10.0.1",open:"^10.1.0",ora:"^8.1.0",pixelmatch:"^7.1.0",pngjs:"^7.0.0",prettier:"^3.3.3","prettier-plugin-jsdoc":"^1.3.0","pretty-format":"^30.0.0",prismjs:"^1.29.0",puppeteer:"^24.0.0",qs:"^6.13.0","rc-drawer":"^8.0.0","rc-footer":"^0.6.8","rc-resize-observer":"^1.4.0","rc-virtual-list":"^3.14.5",react:"^19.0.0","react-copy-to-clipboard":"^5.1.0","react-dom":"^19.0.0","react-highlight-words":"^0.20.0","react-infinite-scroll-component":"^6.1.0","react-intersection-observer":"^9.13.1","react-intl":"^7.1.11","react-resizable":"^3.0.5","react-router-dom":"^7.0.1","react-sticky-box":"^2.0.5","regenerator-runtime":"^0.14.1","rehype-stringify":"^10.0.0",remark:"^15.0.1","remark-cli":"^12.0.1","remark-gfm":"^4.0.0","remark-lint":"^10.0.0","remark-lint-no-undefined-references":"^5.0.0","remark-preset-lint-recommended":"^7.0.0","remark-rehype":"^11.1.0","scroll-into-view-if-needed":"^3.1.0",semver:"^7.6.3",sharp:"^0.34.3","simple-git":"^3.26.0","size-limit":"^11.1.5",spinnies:"^0.5.1",tar:"^7.4.3",tsx:"^4.19.1",typedoc:"^0.28.0",typescript:"~5.8.2","vanilla-jsoneditor":"^3.0.0","web-streams-polyfill":"^4.0.0",webpack:"^5.94.0","webpack-bundle-analyzer":"^4.10.2","@ant-design/colors":"^7.1.0","@ant-design/cssinjs":"^1.21.1","@ant-design/cssinjs-utils":"^1.1.0","@ant-design/fast-color":"^2.0.6","@ant-design/icons":"^5.4.0","@babel/runtime":"^7.25.6",classnames:"^2.5.1","rc-motion":"^2.9.2","rc-util":"^5.43.0","tbox-nodejs-sdk":"^0.0.13"},pkgPeerDependencies:{antd:"^5.20.3",react:">=18.0.0","react-dom":">=18.0.0"},jsx:"var __awaiter =\n  (this && this.__awaiter) ||\n  function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P\n        ? value\n        : new P(function (resolve) {\n            resolve(value);\n          });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator['throw'](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\nvar __asyncValues =\n  (this && this.__asyncValues) ||\n  function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError('Symbol.asyncIterator is not defined.');\n    var m = o[Symbol.asyncIterator],\n      i;\n    return m\n      ? m.call(o)\n      : ((o = typeof __values === 'function' ? __values(o) : o[Symbol.iterator]()),\n        (i = {}),\n        verb('next'),\n        verb('throw'),\n        verb('return'),\n        (i[Symbol.asyncIterator] = function () {\n          return this;\n        }),\n        i);\n    function verb(n) {\n      i[n] =\n        o[n] &&\n        function (v) {\n          return new Promise(function (resolve, reject) {\n            ((v = o[n](v)), settle(resolve, reject, v.done, v.value));\n          });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n      Promise.resolve(v).then(function (v) {\n        resolve({ value: v, done: d });\n      }, reject);\n    }\n  };\nimport { TagsOutlined } from '@ant-design/icons';\nimport { ThoughtChain, XStream } from '@ant-design/x';\nimport { Button, Splitter } from 'antd';\nimport React from 'react';\nconst sipHeaders = [\n  'INVITE sip:[email protected] SIP/2.0\\n',\n  'Via: SIP/2.0/UDP [host];branch=123456\\n',\n  'Content-Type: application/sdp\\n\\n',\n];\nconst sdp = [\n  'v=0\\n',\n  'o=alice 2890844526 2890844526 IN IP4 [host]\\n',\n  's=\\n',\n  'c=IN IP4 [host]\\n',\n  't=0 0\\n',\n  'm=audio 49170 RTP/AVP 0\\n',\n  'a=rtpmap:0 PCMU/8000\\n',\n  'm=video 51372 RTP/AVP 31\\n',\n  'a=rtpmap:31 H261/90000\\n',\n  'm=video 53000 RTP/AVP 32\\n',\n  'a=rtpmap:32 MPV/90000\\n\\n',\n];\nfunction mockReadableStream() {\n  return new ReadableStream({\n    start(controller) {\n      return __awaiter(this, void 0, void 0, function* () {\n        for (const chunk of sipHeaders.concat(sdp)) {\n          yield new Promise(resolve => setTimeout(resolve, 100));\n          controller.enqueue(new TextEncoder().encode(chunk));\n        }\n        controller.close();\n      });\n    },\n  });\n}\nconst App = () => {\n  const [lines, setLines] = React.useState([]);\n  function readStream() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, e_1, _b, _c;\n      try {\n        // \u{1F31F} Read the stream\n        for (\n          var _d = true,\n            _e = __asyncValues(\n              XStream({\n                readableStream: mockReadableStream(),\n                transformStream: new TransformStream({\n                  transform(chunk, controller) {\n                    controller.enqueue(chunk);\n                  },\n                }),\n              }),\n            ),\n            _f;\n          (_f = yield _e.next()), (_a = _f.done), !_a;\n          _d = true\n        ) {\n          _c = _f.value;\n          _d = false;\n          const chunk = _c;\n          setLines(pre => [...pre, chunk]);\n        }\n      } catch (e_1_1) {\n        e_1 = { error: e_1_1 };\n      } finally {\n        try {\n          if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    });\n  }\n  return (\n    <Splitter>\n      <Splitter.Panel>\n        <Button type=\"primary\" onClick={readStream} style={{ marginBottom: 16 }}>\n          Mock Custom Protocol - SIP\n        </Button>\n      </Splitter.Panel>\n      {/* -------------- Log -------------- */}\n      <Splitter.Panel style={{ marginLeft: 16 }}>\n        <ThoughtChain\n          items={\n            lines.length\n              ? [\n                  {\n                    title: 'Mock Custom Protocol - Log',\n                    status: 'success',\n                    icon: <TagsOutlined />,\n                    content: (\n                      <pre style={{ overflow: 'scroll' }}>\n                        <code>{lines.join('')}</code>\n                      </pre>\n                    ),\n                  },\n                ]\n              : []\n          }\n        />\n      </Splitter.Panel>\n    </Splitter>\n  );\n};\nexport default App;\n",description:"<blockquote>\n<p>In this example, we will demonstrate parsing the SIP protocol, which is commonly used for P2P audio and video session initiation.</p>\n</blockquote>\n<p>Pass in a <code>transformStream</code> stream transformer; this parameter accepts a <code>new TransformStream(...)</code> instance.</p>"}}),(0,s.jsxs)("div",{className:"markdown",children:[(0,s.jsxs)("h2",{id:"api",children:[(0,s.jsx)(i.default,{"aria-hidden":"true",tabIndex:"-1",href:"#api",sourceType:"a",children:(0,s.jsx)("span",{className:"icon icon-link"})}),"API"]}),(0,s.jsxs)("h3",{id:"xstreamoptions",children:[(0,s.jsx)(i.default,{"aria-hidden":"true",tabIndex:"-1",href:"#xstreamoptions",sourceType:"a",children:(0,s.jsx)("span",{className:"icon icon-link"})}),"XStreamOptions"]}),(0,s.jsxs)(o.default,{className:"component-api-table",children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:p.texts[13].value}),(0,s.jsx)("th",{children:p.texts[14].value}),(0,s.jsx)("th",{children:p.texts[15].value}),(0,s.jsx)("th",{children:p.texts[16].value}),(0,s.jsx)("th",{children:p.texts[17].value})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:p.texts[18].value}),(0,s.jsx)("td",{children:p.texts[19].value}),(0,s.jsx)("td",{children:p.texts[20].value}),(0,s.jsx)("td",{children:p.texts[21].value}),(0,s.jsx)("td",{children:p.texts[22].value})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:p.texts[23].value}),(0,s.jsx)("td",{children:p.texts[24].value}),(0,s.jsx)("td",{children:p.texts[25].value}),(0,s.jsx)("td",{children:p.texts[26].value}),(0,s.jsx)("td",{children:p.texts[27].value})]})]})]})]})]})})});};}}]);
//# sourceMappingURL=f56c1b90-async.90ffa510.js.map